{"version":3,"file":"353.js","mappings":"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","sources":["webpack://OnairosLaravel/./src/components/WelcomeScreen.jsx","webpack://OnairosLaravel/./src/theme/colors.js","webpack://OnairosLaravel/./src/components/ui/PrimaryButton.jsx","webpack://OnairosLaravel/./src/components/EmailAuth.js","webpack://OnairosLaravel/./src/utils/extensionDetection.js","webpack://OnairosLaravel/./src/components/ExtensionInstallPrompt.jsx","webpack://OnairosLaravel/./src/components/LLMConnectorManager.jsx","webpack://OnairosLaravel/./src/components/UniversalOnboarding.jsx","webpack://OnairosLaravel/./src/components/PinSetup.js","webpack://OnairosLaravel/./src/components/DataRequest.js","webpack://OnairosLaravel/./src/components/TrainingComponent.jsx","webpack://OnairosLaravel/./src/components/LoadingScreen.jsx","webpack://OnairosLaravel/./src/utils/responseFormatter.js","webpack://OnairosLaravel/./src/components/ui/PageLayout.jsx","webpack://OnairosLaravel/./src/onairosButton.jsx","webpack://OnairosLaravel/./src/utils/userDataFormatter.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function WelcomeScreen({ onContinue, onClose }) {\r\n  // Load Sirv script for responsive images\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://scripts.sirv.com/sirvjs/v3/sirv.js';\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n    \r\n    return () => {\r\n      const existingScript = document.querySelector('script[src=\"https://scripts.sirv.com/sirvjs/v3/sirv.js\"]');\r\n      if (existingScript) {\r\n        document.head.removeChild(existingScript);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\r\n        {/* Logo */}\r\n        <div className=\"mb-8 flex justify-center\">\r\n          <div className=\"w-20 h-20 flex items-center justify-center\">\r\n            <img \r\n              className=\"Sirv w-full h-full object-contain\" \r\n              data-src=\"https://anushkasirv.sirv.com/OnairosBlack.png\" \r\n              alt=\"Onairos Logo\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Welcome Text */}\r\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\r\n\r\n        {/* Main Title */}\r\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\r\n\r\n        {/* Description */}\r\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\r\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\r\n        </p>\r\n      </div>\r\n\r\n      {/* Get Started Button - Fixed at bottom */}\r\n      <div className=\"px-6 pb-8 flex-shrink-0\">\r\n        <button\r\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\r\n          onClick={onContinue}\r\n        >\r\n          Get Started\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Theme colors for Onairos SDK - derived from mobile design\r\nexport const COLORS = {\r\n  // Button gradient colors\r\n  btnGradStart: '#1A1A1A',\r\n  btnGradEnd: '#000000',\r\n  \r\n  // Button text and icon colors\r\n  btnLabel: '#FFFFFF',\r\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\r\n  \r\n  // Icon circle gradient colors\r\n  iconCircleGradientStart: '#333333',\r\n  iconCircleGradientEnd: '#1A1A1A',\r\n  \r\n  // Background colors\r\n  background: '#FFFFFF',\r\n  backgroundSecondary: '#F8F9FA',\r\n  \r\n  // Text colors\r\n  textPrimary: '#1A1A1A',\r\n  textSecondary: '#6B7280',\r\n  textMuted: '#9CA3AF',\r\n  \r\n  // Border colors\r\n  border: '#E5E7EB',\r\n  borderLight: '#F3F4F6',\r\n  \r\n  // Status colors\r\n  success: '#10B981',\r\n  error: '#EF4444',\r\n  warning: '#F59E0B',\r\n  info: '#3B82F6',\r\n  \r\n  // Interactive states\r\n  hover: 'rgba(0, 0, 0, 0.05)',\r\n  pressed: 'rgba(0, 0, 0, 0.1)',\r\n  focus: 'rgba(59, 130, 246, 0.1)',\r\n};\r\n\r\nexport default COLORS; ","import React, { useState } from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Icon Circle component matching the React Native version\r\nconst IconCircle = ({ \r\n  size = 40, \r\n  children,\r\n  className = ''\r\n}) => {\r\n  return (\r\n    <div \r\n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        borderRadius: size / 2,\r\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\r\n      }}\r\n    >\r\n      {children || (\r\n        <span \r\n          className=\"font-semibold opacity-95\"\r\n          style={{\r\n            fontSize: '20px',\r\n            color: COLORS.btnLabel,\r\n            backgroundColor: 'transparent'\r\n          }}\r\n        >\r\n          →\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Primary Button component matching the React Native design\r\nconst PrimaryButton = ({\r\n  label = \"Get Started\",\r\n  onClick,\r\n  iconRight,\r\n  loading = false,\r\n  disabled = false,\r\n  testId,\r\n  className = '',\r\n  style = {},\r\n  textStyle = {},\r\n  centered = false,\r\n  ...props\r\n}) => {\r\n  const [pressed, setPressed] = useState(false);\r\n\r\n  const handleMouseDown = () => setPressed(true);\r\n  const handleMouseUp = () => setPressed(false);\r\n  const handleMouseLeave = () => setPressed(false);\r\n\r\n  const buttonStyle = {\r\n    height: '48px',\r\n    borderRadius: '100px',\r\n    border: `1px solid ${COLORS.btnBorder}`,\r\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    width: centered ? 'auto' : '100%',\r\n    minWidth: centered ? '250px' : 'auto',\r\n    maxWidth: centered ? '350px' : 'none',\r\n    margin: centered ? '0 auto' : '0',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    opacity: disabled ? 0.65 : 1,\r\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\r\n    transition: 'all 0.2s ease',\r\n    ...style\r\n  };\r\n\r\n  const pressedOverlayStyle = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.1)',\r\n    borderRadius: '100px',\r\n    opacity: pressed ? 1 : 0,\r\n    transition: 'opacity 0.1s ease'\r\n  };\r\n\r\n  const textContainerStyle = {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const iconPositionStyle = {\r\n    position: 'absolute',\r\n    right: '4px',\r\n    top: '4px',\r\n    bottom: '4px',\r\n    width: '40px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const labelStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontWeight: '600',\r\n    fontSize: '16px',\r\n    color: COLORS.btnLabel,\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    ...textStyle\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`relative ${className}`}\r\n      style={buttonStyle}\r\n      onClick={onClick}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseLeave}\r\n      disabled={disabled || loading}\r\n      data-testid={testId}\r\n      aria-label={label}\r\n      {...props}\r\n    >\r\n      {/* Pressed state overlay */}\r\n      <div style={pressedOverlayStyle} />\r\n\r\n      {/* Centered text container */}\r\n      <div style={textContainerStyle}>\r\n        {loading ? (\r\n          <div \r\n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\r\n            style={{ width: '20px', height: '20px' }}\r\n          />\r\n        ) : (\r\n          <span style={labelStyle}>{label}</span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Icon in fixed position on right */}\r\n      <div style={iconPositionStyle}>\r\n        {!loading && (iconRight || <IconCircle />)}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { IconCircle };\r\nexport default PrimaryButton; ","import React, { useState, useEffect } from 'react';\r\nimport { Mail, ArrowRight, Check } from 'lucide-react';\r\nimport PrimaryButton from './ui/PrimaryButton.jsx';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function EmailAuth({ onSuccess, testMode = true }) {\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Auto-focus first PIN input when code step loads\r\n  useEffect(() => {\r\n    if (step === 'code') {\r\n      // Small delay to ensure DOM is ready\r\n      setTimeout(() => {\r\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\r\n        if (firstInput) {\r\n          firstInput.focus();\r\n        }\r\n      }, 100);\r\n    }\r\n  }, [step]);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!validateEmail(email)) {\r\n      setError('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (testMode) {\r\n        // Test mode: Skip API call completely, simulate instant success\r\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\r\n        setTimeout(() => {\r\n          setStep('code');\r\n          setIsLoading(false);\r\n          console.log('🧪 Test mode: Email verification simulated successfully');\r\n        }, 800); // Shorter delay for faster testing\r\n      } else {\r\n        // Production mode: Use proper email verification API from schema\r\n        const apiKey = window.onairosApiKey || 'test-key';\r\n        \r\n        const response = await fetch('https://api2.onairos.uk/email/verification', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n          },\r\n          body: JSON.stringify({ \r\n            email, \r\n            action: 'request' \r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to send verification code');\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (!data.success) {\r\n          throw new Error(data.error || 'Failed to send verification code');\r\n        }\r\n\r\n        console.log('📧 Email request response:', data);\r\n\r\n        setStep('code');\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Email request error:', error);\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleAuth = async () => {\r\n    try {\r\n      // Use the same Google OAuth logic as UniversalOnboarding\r\n      const sdkConfig = {\r\n        baseUrl: 'https://api2.onairos.uk',\r\n        apiKey: window.onairosApiKey || 'test-key',\r\n        enableHealthMonitoring: true,\r\n        enableAutoRefresh: true,\r\n        enableConnectionValidation: true\r\n      };\r\n\r\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\r\n      \r\n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\r\n      const params = new URLSearchParams({\r\n        username: username,\r\n        sdk_type: 'web',\r\n        return_url: window.location.origin + '/oauth-callback.html'\r\n      });\r\n\r\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\r\n      console.log('🔗 Starting Google OAuth from email flow...');\r\n      console.log('📋 Google OAuth URL:', fullUrl);\r\n\r\n      // Open popup for OAuth\r\n      const popup = window.open(\r\n        fullUrl,\r\n        'google_oauth',\r\n        'width=500,height=600,scrollbars=yes,resizable=yes'\r\n      );\r\n\r\n      if (!popup) {\r\n        throw new Error('Popup blocked. Please allow popups for this site.');\r\n      }\r\n\r\n      // Monitor popup for completion\r\n      const checkInterval = setInterval(() => {\r\n        if (popup.closed) {\r\n          clearInterval(checkInterval);\r\n          console.log('✅ Google OAuth popup closed');\r\n          // Simulate successful OAuth for now\r\n          onSuccess({ \r\n            email: 'user@gmail.com', \r\n            method: 'google',\r\n            connectedAccounts: { Google: true }\r\n          });\r\n        }\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error('❌ Google OAuth failed:', error);\r\n      setError('Google authentication failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCodeSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (testMode) {\r\n        // Test mode: Skip API call completely, simulate verification\r\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\r\n        \r\n        if (code === '123456' || code.length === 6) {\r\n          setStep('success');\r\n          setTimeout(() => {\r\n            // Simulate new user for design testing\r\n            const simulatedResponse = { \r\n              email, \r\n              verified: true, \r\n              token: 'test-token-' + Date.now(),\r\n              userName: email.split('@')[0],\r\n              existingUser: false, // Always simulate new user for full flow testing\r\n              accountInfo: null,\r\n              isNewUser: true,\r\n              flowType: 'onboarding',\r\n              adminMode: false,\r\n              userCreated: true,\r\n              accountDetails: {\r\n                email: email,\r\n                createdAt: new Date().toISOString(),\r\n                testAccount: true\r\n              }\r\n            };\r\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\r\n            onSuccess(simulatedResponse);\r\n          }, 600); // Faster for design testing\r\n        } else {\r\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\r\n          setIsLoading(false);\r\n        }\r\n      } else {\r\n        // Production mode: Use real email verification API from schema\r\n        const apiKey = window.onairosApiKey || 'test-key';\r\n        \r\n        const response = await fetch('https://api2.onairos.uk/email/verification', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n          },\r\n          body: JSON.stringify({ \r\n            email, \r\n            action: 'verify',\r\n            code \r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Invalid verification code');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (!data.success) {\r\n          throw new Error(data.error || 'Verification failed');\r\n        }\r\n\r\n        console.log('📧 Email verification response:', data);\r\n\r\n        setStep('success');\r\n        setTimeout(() => {\r\n          // Pass complete API response for flow determination\r\n          onSuccess({ \r\n            email, \r\n            verified: true, \r\n            token: data.token || data.jwtToken,\r\n            userName: data.userName,\r\n            existingUser: data.existingUser,\r\n            accountInfo: data.accountInfo,\r\n            isNewUser: !data.existingUser, // Set based on API response\r\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\r\n            adminMode: data.adminMode,\r\n            userCreated: data.userCreated,\r\n            accountDetails: data.accountDetails\r\n          });\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Email verification error:', error);\r\n      setError(error.message || 'Invalid code. Please try again.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderEmailStep = () => (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\r\n            Use pre-existing Persona or create a new one in seconds\r\n          </h1>\r\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\r\n            style={{ \r\n              fontFamily: 'Inter, system-ui, sans-serif'\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-6 text-center\">\r\n          <span className=\"text-gray-500 text-sm\">Or</span>\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\r\n            style={{ \r\n              fontFamily: 'Inter, system-ui, sans-serif'\r\n            }}\r\n            onClick={handleGoogleAuth}\r\n          >\r\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"#4285F4\"\r\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\r\n              />\r\n              <path\r\n                fill=\"#34A853\"\r\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\r\n              />\r\n              <path\r\n                fill=\"#FBBC05\"\r\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\r\n              />\r\n              <path\r\n                fill=\"#EA4335\"\r\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\r\n              />\r\n            </svg>\r\n            Continue with Google\r\n          </button>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6\">\r\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Continue Button - Fixed at bottom */}\r\n      <div className=\"px-12 pb-8 flex-shrink-0\">\r\n        <button\r\n          className=\"w-full max-w-sm mx-auto bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\r\n          onClick={handleEmailSubmit}\r\n          disabled={isLoading || !email.trim()}\r\n          style={{ \r\n            fontFamily: 'Inter, system-ui, sans-serif'\r\n          }}\r\n        >\r\n          {isLoading ? 'Loading...' : 'Continue'}\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCodeStep = () => (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Heading - matching VerificationStep.tsx */}\r\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\r\n        <h1 \r\n          className=\"font-bold mb-2\"\r\n          style={{ \r\n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\r\n            fontWeight: '700',\r\n            fontSize: '24px',\r\n            lineHeight: '32px',\r\n            color: COLORS.textPrimary\r\n          }}\r\n        >\r\n          Enter verification code\r\n        </h1>\r\n        <p \r\n          className=\"mb-2\"\r\n          style={{ \r\n            fontFamily: 'Inter, system-ui, sans-serif',\r\n            fontWeight: '400',\r\n            fontSize: '16px',\r\n            lineHeight: '24px',\r\n            color: COLORS.textSecondary\r\n          }}\r\n        >\r\n          We've sent a 6-digit code to {email}\r\n        </p>\r\n      </div>\r\n\r\n\r\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\r\n      <div className=\"px-12 mb-6\">\r\n        <div className=\"flex justify-center space-x-3\">\r\n          {Array.from({ length: 6 }, (_, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              value={code[index] || ''}\r\n              onChange={(e) => {\r\n                const newCode = code.split('');\r\n                newCode[index] = e.target.value;\r\n                setCode(newCode.join(''));\r\n                \r\n                // Auto-focus next input\r\n                if (e.target.value && index < 5) {\r\n                  const nextInput = e.target.parentElement?.children[index + 1];\r\n                  if (nextInput) nextInput.focus();\r\n                }\r\n              }}\r\n              onKeyDown={(e) => {\r\n                // Handle backspace to focus previous input\r\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\r\n                  const prevInput = e.target.parentElement?.children[index - 1];\r\n                  if (prevInput) prevInput.focus();\r\n                }\r\n              }}\r\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\r\n              style={{ \r\n                borderColor: COLORS.border,\r\n                backgroundColor: COLORS.background,\r\n                fontFamily: 'Inter, system-ui, sans-serif'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"px-12 mb-6\">\r\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Continue Button - positioned right below code inputs */}\r\n      <div className=\"px-12 mb-6\">\r\n        <div className=\"max-w-sm mx-auto\">\r\n          <PrimaryButton\r\n            label=\"Continue\"\r\n            onClick={handleCodeSubmit}\r\n            loading={isLoading}\r\n            disabled={isLoading || code.length !== 6}\r\n            testId=\"verify-code-button\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Spacer */}\r\n      <div style={{ flex: 1, minHeight: '20px' }} />\r\n\r\n      {/* Back to email option */}\r\n      <div className=\"px-12 w-full\">\r\n        <div className=\"max-w-sm mx-auto\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setStep('email')}\r\n            className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\r\n            style={{ color: COLORS.textSecondary }}\r\n          >\r\n            Use a different email\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderSuccessStep = () => (\r\n    <div className=\"w-full flex flex-col items-center space-y-6 pt-16 px-12\">\r\n      <div \r\n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\r\n        style={{ backgroundColor: '#D1FAE5' }}\r\n      >\r\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\r\n      </div>\r\n      \r\n      <div className=\"text-center space-y-2\">\r\n        <h2 \r\n          className=\"text-xl font-semibold\"\r\n          style={{ color: COLORS.textPrimary }}\r\n        >\r\n          Email verified!\r\n        </h2>\r\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\r\n      </div>\r\n\r\n      <div className=\"w-8 h-8\">\r\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {step === 'email' && renderEmailStep()}\r\n      {step === 'code' && renderCodeStep()}\r\n      {step === 'success' && renderSuccessStep()}\r\n    </div>\r\n  );\r\n} \r\n","/**\r\n * Onairos Browser Extension Detection Utility\r\n * \r\n * This utility detects if the Onairos browser extension is installed\r\n * by checking for the global window.onairos object that the extension injects.\r\n * \r\n * Based on the extension's inject-script.js implementation:\r\n * - window.onairos.isOnairos = true\r\n * - window.onairos.version = '1.0.0'\r\n * - 'onairosReady' event is dispatched when extension loads\r\n */\r\n\r\n/**\r\n * Chrome Web Store URL for the Onairos browser extension\r\n */\r\nexport const ONAIROS_EXTENSION_STORE_URL = 'https://chromewebstore.google.com/detail/onairos/apkfageplidiblifhnadehmplfccapkf?hl=en';\r\n\r\n/**\r\n * Timeout for extension detection (in milliseconds)\r\n */\r\nconst DETECTION_TIMEOUT = 2000;\r\n\r\n/**\r\n * Detect if the Onairos browser extension is installed\r\n * @returns {Promise<boolean>} True if extension is installed and active\r\n */\r\nexport const detectOnairosExtension = () => {\r\n  return new Promise((resolve) => {\r\n    // Method 1: Direct detection - check if already loaded\r\n    if (window.onairos && window.onairos.isOnairos) {\r\n      console.log('✅ OnairosTerminal extension detected (already loaded)');\r\n      resolve(true);\r\n      return;\r\n    }\r\n\r\n    // Method 2: Event-based detection - wait for extension to load\r\n    let resolved = false;\r\n    \r\n    const handleOnairosReady = () => {\r\n      if (!resolved) {\r\n        resolved = true;\r\n        console.log('✅ OnairosTerminal extension detected (via event)');\r\n        resolve(true);\r\n      }\r\n    };\r\n\r\n    // Listen for the onairosReady event\r\n    window.addEventListener('onairosReady', handleOnairosReady, { once: true });\r\n\r\n    // Set timeout to avoid waiting indefinitely\r\n    setTimeout(() => {\r\n      if (!resolved) {\r\n        resolved = true;\r\n        window.removeEventListener('onairosReady', handleOnairosReady);\r\n        console.log('❌ OnairosTerminal extension not detected (timeout)');\r\n        resolve(false);\r\n      }\r\n    }, DETECTION_TIMEOUT);\r\n  });\r\n};\r\n\r\n/**\r\n * Get extension information if available\r\n * @returns {Object|null} Extension info or null if not available\r\n */\r\nexport const getExtensionInfo = () => {\r\n  if (window.onairos && window.onairos.getInfo) {\r\n    return window.onairos.getInfo();\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Check if extension is available synchronously (for already loaded extensions)\r\n * @returns {boolean} True if extension is immediately available\r\n */\r\nexport const isExtensionAvailableSync = () => {\r\n  return !!(window.onairos && window.onairos.isOnairos);\r\n};\r\n\r\n/**\r\n * Open Chrome Web Store to install the extension\r\n * @param {string} source - Source identifier for analytics (e.g., 'chatgpt', 'claude')\r\n */\r\nexport const openExtensionInstallPage = (source = 'unknown') => {\r\n  console.log(`🔗 Opening Chrome Web Store for extension installation (source: ${source})`);\r\n  \r\n  // For now, use a placeholder URL - replace with actual extension ID when available\r\n  const storeUrl = ONAIROS_EXTENSION_STORE_URL;\r\n  \r\n  // Try to open in new tab\r\n  const installWindow = window.open(storeUrl, '_blank');\r\n  \r\n  if (!installWindow) {\r\n    // Fallback if popup is blocked\r\n    console.warn('⚠️ Popup blocked, redirecting to extension store');\r\n    window.location.href = storeUrl;\r\n  }\r\n};\r\n\r\n/**\r\n * LLM Platform URLs\r\n */\r\nexport const LLM_URLS = {\r\n  chatgpt: 'https://chatgpt.com',\r\n  claude: 'https://claude.ai',\r\n  gemini: 'https://gemini.google.com',\r\n  grok: 'https://grok.x.ai'\r\n};\r\n\r\n/**\r\n * Open LLM platform if extension is installed, otherwise prompt for extension installation\r\n * @param {string} platform - LLM platform name ('chatgpt', 'claude', 'gemini', 'grok')\r\n * @param {Function} onExtensionMissing - Callback when extension is not installed\r\n * @param {Object} userInfo - User information to pass to the LLM platform\r\n * @param {string} userInfo.username - User's username/email\r\n * @param {string} userInfo.userId - User's unique identifier\r\n * @param {string} userInfo.sessionToken - Optional session token\r\n * @returns {Promise<boolean>} True if LLM was opened, false if extension missing\r\n */\r\nexport const openLLMWithExtensionCheck = async (platform, onExtensionMissing = null, userInfo = {}) => {\r\n  console.log(`🤖 Attempting to open ${platform} with extension check...`);\r\n  \r\n  // Check if extension is installed\r\n  const hasExtension = await detectOnairosExtension();\r\n  \r\n  if (hasExtension) {\r\n    // Extension is installed - open the LLM platform with user info\r\n    const baseUrl = LLM_URLS[platform];\r\n    if (baseUrl) {\r\n      // Build URL with user parameters for the browser extension to detect\r\n      const url = new URL(baseUrl);\r\n      \r\n      // Add Onairos-specific parameters that the extension can read\r\n      if (userInfo.username) {\r\n        url.searchParams.set('onairos_user', encodeURIComponent(userInfo.username));\r\n      }\r\n      if (userInfo.userId) {\r\n        url.searchParams.set('onairos_id', encodeURIComponent(userInfo.userId));\r\n      }\r\n      if (userInfo.sessionToken) {\r\n        url.searchParams.set('onairos_session', encodeURIComponent(userInfo.sessionToken));\r\n      }\r\n      \r\n      // Add platform identifier for the extension\r\n      url.searchParams.set('onairos_platform', platform);\r\n      url.searchParams.set('onairos_source', 'npm_connector');\r\n      url.searchParams.set('onairos_timestamp', Date.now().toString());\r\n      \r\n      const finalUrl = url.toString();\r\n      console.log(`✅ Extension detected, opening ${platform} at ${finalUrl}`);\r\n      console.log(`👤 User info: ${JSON.stringify(userInfo)}`);\r\n      \r\n      const llmWindow = window.open(finalUrl, '_blank');\r\n      \r\n      if (!llmWindow) {\r\n        console.warn(`⚠️ Popup blocked for ${platform}`);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      console.error(`❌ Unknown LLM platform: ${platform}`);\r\n      return false;\r\n    }\r\n  } else {\r\n    // Extension is not installed - handle missing extension\r\n    console.log(`❌ Extension not detected for ${platform}, prompting installation`);\r\n    \r\n    if (onExtensionMissing) {\r\n      onExtensionMissing(platform);\r\n    } else {\r\n      // Default behavior: open extension store\r\n      openExtensionInstallPage(platform);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Enhanced extension detection with retry mechanism\r\n * @param {number} maxRetries - Maximum number of detection attempts\r\n * @param {number} retryDelay - Delay between retries in milliseconds\r\n * @returns {Promise<boolean>} True if extension is detected\r\n */\r\nexport const detectExtensionWithRetry = async (maxRetries = 3, retryDelay = 500) => {\r\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n    console.log(`🔍 Extension detection attempt ${attempt}/${maxRetries}`);\r\n    \r\n    const detected = await detectOnairosExtension();\r\n    if (detected) {\r\n      return true;\r\n    }\r\n    \r\n    if (attempt < maxRetries) {\r\n      await new Promise(resolve => setTimeout(resolve, retryDelay));\r\n    }\r\n  }\r\n  \r\n  console.log(`❌ Extension not detected after ${maxRetries} attempts`);\r\n  return false;\r\n};\r\n\r\n/**\r\n * Extract Onairos user information from URL parameters\r\n * This function is intended to be used by the browser extension to read user info\r\n * @param {string} url - URL to parse (defaults to current page URL)\r\n * @returns {Object|null} User information object or null if no Onairos params found\r\n */\r\nexport const extractUserInfoFromURL = (url = window.location.href) => {\r\n  try {\r\n    const urlObj = new URL(url);\r\n    const params = urlObj.searchParams;\r\n    \r\n    // Check if this URL has Onairos parameters\r\n    if (!params.has('onairos_user') && !params.has('onairos_id')) {\r\n      return null;\r\n    }\r\n    \r\n    const userInfo = {\r\n      username: params.get('onairos_user') ? decodeURIComponent(params.get('onairos_user')) : null,\r\n      userId: params.get('onairos_id') ? decodeURIComponent(params.get('onairos_id')) : null,\r\n      sessionToken: params.get('onairos_session') ? decodeURIComponent(params.get('onairos_session')) : null,\r\n      platform: params.get('onairos_platform') || null,\r\n      source: params.get('onairos_source') || null,\r\n      timestamp: params.get('onairos_timestamp') || null\r\n    };\r\n    \r\n    // Only return if we have at least username or userId\r\n    if (userInfo.username || userInfo.userId) {\r\n      console.log('📋 Extracted Onairos user info from URL:', userInfo);\r\n      return userInfo;\r\n    }\r\n    \r\n    return null;\r\n  } catch (error) {\r\n    console.error('❌ Error extracting user info from URL:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Send user information to the browser extension\r\n * This function communicates with the extension to provide user context\r\n * @param {Object} userInfo - User information to send\r\n * @returns {Promise<boolean>} True if successfully sent to extension\r\n */\r\nexport const sendUserInfoToExtension = async (userInfo) => {\r\n  try {\r\n    if (!window.onairos || !window.onairos.isOnairos) {\r\n      console.warn('⚠️ Onairos extension not detected, cannot send user info');\r\n      return false;\r\n    }\r\n    \r\n    // Send user info via postMessage to the extension\r\n    window.postMessage({\r\n      source: 'onairos_npm_connector',\r\n      type: 'USER_INFO',\r\n      data: {\r\n        ...userInfo,\r\n        timestamp: new Date().toISOString(),\r\n        connectorVersion: '3.4.2'\r\n      }\r\n    }, '*');\r\n    \r\n    console.log('📤 Sent user info to Onairos extension:', userInfo);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('❌ Error sending user info to extension:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Send LLM conversation data to backend (for browser extension)\r\n * This function formats and sends encrypted conversation data to the new /llm-data/store endpoint\r\n * @param {Object} conversationData - Raw conversation data\r\n * @param {Object} userInfo - User authentication info\r\n * @param {string} platform - LLM platform (chatgpt, claude, gemini, grok)\r\n * @returns {Promise<boolean>} True if successfully stored\r\n */\r\nexport const storeLLMConversationData = async (conversationData, userInfo, platform) => {\r\n  try {\r\n    // Format data according to new backend API schema\r\n    const payload = {\r\n      encryptedData: btoa(JSON.stringify(conversationData)), // Base64 encode for now\r\n      encryptionMetadata: {\r\n        algorithm: \"AES-GCM\",\r\n        keyDerivation: \"PBKDF2\",\r\n        iterations: 100000\r\n      },\r\n      authentication: {\r\n        username: userInfo.username || userInfo.email,\r\n        timestamp: Date.now()\r\n      },\r\n      integrity: {\r\n        hash: await generateDataHash(conversationData),\r\n        algorithm: \"SHA-256\"\r\n      },\r\n      platform: platform,\r\n      source: 'browser_extension'\r\n    };\r\n\r\n    const response = await fetch('https://api2.onairos.uk/llm-data/store', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${userInfo.sessionToken || userInfo.jwtToken}`,\r\n        'X-Onairos-User': userInfo.userId || userInfo.username\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('✅ LLM conversation data stored successfully');\r\n      return true;\r\n    } else {\r\n      console.error('❌ Failed to store LLM data:', response.status);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Error storing LLM conversation data:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Generate SHA-256 hash of data for integrity verification\r\n * @param {Object} data - Data to hash\r\n * @returns {Promise<string>} SHA-256 hash\r\n */\r\nasync function generateDataHash(data) {\r\n  try {\r\n    const encoder = new TextEncoder();\r\n    const dataString = JSON.stringify(data);\r\n    const dataBuffer = encoder.encode(dataString);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', dataBuffer);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return `sha256-${hashHex}`;\r\n  } catch (error) {\r\n    console.error('Error generating hash:', error);\r\n    return `sha256-${Date.now()}`; // Fallback\r\n  }\r\n}\r\n\r\n/**\r\n * Get user information from standard Onairos localStorage keys\r\n * @returns {Object} User information from localStorage\r\n */\r\nexport const getUserInfoFromStorage = () => {\r\n  try {\r\n    // Primary storage locations used by Onairos\r\n    const userDataStr = localStorage.getItem('onairosUser'); // Main user data object\r\n    const jwtToken = localStorage.getItem('onairos_jwt_token'); // JWT token from email verification\r\n    const legacyToken = localStorage.getItem('onairosToken'); // Legacy token from login\r\n    const username = localStorage.getItem('username'); // Username from login\r\n    const userDataSDK = localStorage.getItem('onairos_user_data'); // SDK user data\r\n    \r\n    let userData = null;\r\n    \r\n    // Try to parse main user data\r\n    if (userDataStr) {\r\n      try {\r\n        userData = JSON.parse(userDataStr);\r\n      } catch (error) {\r\n        console.warn('⚠️ Failed to parse onairosUser from localStorage');\r\n      }\r\n    }\r\n    \r\n    // Try to parse SDK user data as fallback\r\n    if (!userData && userDataSDK) {\r\n      try {\r\n        userData = JSON.parse(userDataSDK);\r\n      } catch (error) {\r\n        console.warn('⚠️ Failed to parse onairos_user_data from localStorage');\r\n      }\r\n    }\r\n    \r\n    // Build comprehensive user info object\r\n    const userInfo = {\r\n      // User identification\r\n      username: userData?.email || userData?.username || username || null,\r\n      userId: userData?.userId || userData?.email || username || null,\r\n      email: userData?.email || null,\r\n      \r\n      // Authentication tokens\r\n      sessionToken: jwtToken || userData?.token || legacyToken || null,\r\n      jwtToken: jwtToken || userData?.token || null,\r\n      \r\n      // User metadata\r\n      isNewUser: userData?.isNewUser || false,\r\n      verified: userData?.verified || false,\r\n      onboardingComplete: userData?.onboardingComplete || false,\r\n      pinCreated: userData?.pinCreated || false,\r\n      \r\n      // Account details\r\n      accountInfo: userData?.accountInfo || null,\r\n      connectedAccounts: userData?.connectedAccounts || [],\r\n      \r\n      // Timestamps\r\n      lastLogin: userData?.lastLogin || null,\r\n      createdAt: userData?.createdAt || null,\r\n      \r\n      // Source tracking\r\n      source: 'localStorage_extraction',\r\n      extractedAt: new Date().toISOString()\r\n    };\r\n    \r\n    console.log('📋 Extracted user info from localStorage:', userInfo);\r\n    return userInfo;\r\n  } catch (error) {\r\n    console.error('❌ Error extracting user info from localStorage:', error);\r\n    return {\r\n      username: null,\r\n      userId: null,\r\n      sessionToken: null,\r\n      source: 'extraction_failed',\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Initialize user context for the current page\r\n * This should be called when the page loads to set up user context for the extension\r\n * @param {Object} userInfo - User information to initialize (optional, will auto-extract if not provided)\r\n */\r\nexport const initializeUserContext = async (userInfo = null) => {\r\n  console.log('🚀 Initializing Onairos user context...');\r\n  \r\n  // If no user info provided, extract from localStorage\r\n  if (!userInfo) {\r\n    userInfo = getUserInfoFromStorage();\r\n  }\r\n  \r\n  // First try to extract user info from URL (in case we're on an LLM platform)\r\n  const urlUserInfo = extractUserInfoFromURL();\r\n  \r\n  // Merge URL info with provided/extracted info (URL takes precedence)\r\n  const finalUserInfo = {\r\n    ...userInfo,\r\n    ...urlUserInfo\r\n  };\r\n  \r\n  if (finalUserInfo.username || finalUserInfo.userId) {\r\n    // Try to send to extension\r\n    const sent = await sendUserInfoToExtension(finalUserInfo);\r\n    \r\n    if (sent) {\r\n      console.log('✅ User context initialized successfully');\r\n    } else {\r\n      console.log('⚠️ Extension not available, user context stored locally');\r\n      // Store in localStorage as fallback\r\n      localStorage.setItem('onairos_user_context', JSON.stringify(finalUserInfo));\r\n    }\r\n    \r\n    return finalUserInfo;\r\n  } else {\r\n    console.log('⚠️ No user information available to initialize');\r\n    return null;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { openExtensionInstallPage, LLM_URLS } from '../utils/extensionDetection';\r\n\r\n/**\r\n * Extension Installation Prompt Component\r\n * \r\n * Displays when a user tries to connect to an LLM but doesn't have \r\n * the Onairos browser extension installed.\r\n */\r\nconst ExtensionInstallPrompt = ({ \r\n  open = false, \r\n  onClose, \r\n  platform = 'chatgpt',\r\n  onInstallClick = null \r\n}) => {\r\n  if (!open) return null;\r\n\r\n  const platformNames = {\r\n    chatgpt: 'ChatGPT',\r\n    claude: 'Claude',\r\n    gemini: 'Gemini',\r\n    grok: 'Grok'\r\n  };\r\n\r\n  const platformName = platformNames[platform] || 'LLM';\r\n  const platformUrl = LLM_URLS[platform] || '#';\r\n\r\n  const handleInstallClick = () => {\r\n    if (onInstallClick) {\r\n      onInstallClick(platform);\r\n    } else {\r\n      openExtensionInstallPage(platform);\r\n    }\r\n  };\r\n\r\n  const handleDirectVisit = () => {\r\n    window.open(platformUrl, '_blank');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n        <div className=\"p-6\">\r\n          {/* Header */}\r\n          <div className=\"flex items-center mb-4\">\r\n            <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\r\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-xl font-bold text-gray-900\">\r\n              Install Onairos Extension\r\n            </h2>\r\n          </div>\r\n          \r\n          {/* Content */}\r\n          <div className=\"space-y-4 text-gray-700\">\r\n            <p>\r\n              To connect with <strong>{platformName}</strong> and enable personalized AI interactions, \r\n              you need the Onairos browser extension installed.\r\n            </p>\r\n            \r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-semibold text-blue-900 mb-2\">🚀 What the extension does:</h3>\r\n              <ul className=\"list-disc ml-4 space-y-1 text-blue-800 text-sm\">\r\n                <li>Detects when you're on {platformName} and other LLM sites</li>\r\n                <li>Enables secure data sharing with your consent</li>\r\n                <li>Personalizes AI responses based on your preferences</li>\r\n                <li>Works seamlessly in the background</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\r\n              <h3 className=\"font-semibold text-amber-900 mb-2\">⚡ Quick Setup:</h3>\r\n              <ol className=\"list-decimal ml-4 space-y-1 text-amber-800 text-sm\">\r\n                <li>Click \"Install Extension\" below</li>\r\n                <li>Add the extension from Chrome Web Store</li>\r\n                <li>Return here and try connecting again</li>\r\n              </ol>\r\n            </div>\r\n            \r\n            <p className=\"text-sm text-gray-600\">\r\n              Don't want to install the extension? You can still visit{' '}\r\n              <a \r\n                href={platformUrl} \r\n                className=\"text-blue-600 hover:underline\" \r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {platformUrl}\r\n              </a>\r\n              {' '}directly, but you won't get personalized AI features.\r\n            </p>\r\n          </div>\r\n          \r\n          {/* Actions */}\r\n          <div className=\"flex flex-col space-y-3 mt-6\">\r\n            <button\r\n              onClick={handleInstallClick}\r\n              className=\"w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium flex items-center justify-center\"\r\n            >\r\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n              </svg>\r\n              Install Onairos Extension\r\n            </button>\r\n            \r\n            <div className=\"flex space-x-3\">\r\n              <button\r\n                onClick={handleDirectVisit}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm\"\r\n              >\r\n                Visit {platformName} Anyway\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n            <p className=\"text-xs text-gray-500 text-center\">\r\n              The Onairos extension is free, secure, and respects your privacy. \r\n              <br />\r\n              <a href=\"https://onairos.uk/privacy\" className=\"text-blue-600 hover:underline\">\r\n                Learn more about our privacy policy\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExtensionInstallPrompt;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { openLLMWithExtensionCheck, detectOnairosExtension, getUserInfoFromStorage } from '../utils/extensionDetection';\r\nimport ExtensionInstallPrompt from './ExtensionInstallPrompt';\r\n\r\n/**\r\n * LLM Connector Manager Component\r\n * \r\n * Manages the connection flow for LLM platforms (ChatGPT, Claude, Gemini, Grok).\r\n * Handles extension detection and shows appropriate prompts.\r\n */\r\nconst LLMConnectorManager = ({ \r\n  children,\r\n  onConnectionChange = null,\r\n  username = null \r\n}) => {\r\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n  const [currentPlatform, setCurrentPlatform] = useState(null);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  /**\r\n   * Handle LLM connection attempt\r\n   * @param {string} platform - LLM platform name\r\n   * @param {Function} onSuccess - Callback for successful connection\r\n   * @param {Function} onError - Callback for connection error\r\n   */\r\n  const handleLLMConnect = useCallback(async (platform, onSuccess = null, onError = null) => {\r\n    if (isConnecting) {\r\n      console.log('⚠️ Already connecting, ignoring request');\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n    setCurrentPlatform(platform);\r\n\r\n    try {\r\n      console.log(`🤖 Attempting to connect to ${platform}...`);\r\n\r\n      // Prepare user information for the browser extension\r\n      // First try to get comprehensive user info from localStorage\r\n      const storedUserInfo = getUserInfoFromStorage();\r\n      \r\n      const userInfo = {\r\n        // Use stored info as primary source, fallback to props\r\n        username: storedUserInfo.username || username,\r\n        userId: storedUserInfo.userId || storedUserInfo.username || username,\r\n        email: storedUserInfo.email,\r\n        sessionToken: storedUserInfo.sessionToken,\r\n        jwtToken: storedUserInfo.jwtToken,\r\n        \r\n        // User metadata\r\n        isNewUser: storedUserInfo.isNewUser,\r\n        verified: storedUserInfo.verified,\r\n        onboardingComplete: storedUserInfo.onboardingComplete,\r\n        pinCreated: storedUserInfo.pinCreated,\r\n        \r\n        // Account details\r\n        accountInfo: storedUserInfo.accountInfo,\r\n        connectedAccounts: storedUserInfo.connectedAccounts,\r\n        \r\n        // Add additional context\r\n        source: 'onairos_npm_connector',\r\n        connectorVersion: '3.4.2', // Updated version from package.json\r\n        timestamp: new Date().toISOString(),\r\n        platform: platform\r\n      };\r\n\r\n      // Use the extension detection utility with user info\r\n      const success = await openLLMWithExtensionCheck(\r\n        platform,\r\n        (missingPlatform) => {\r\n          // Extension is missing - show install prompt\r\n          console.log(`❌ Extension missing for ${missingPlatform}, showing install prompt`);\r\n          setCurrentPlatform(missingPlatform);\r\n          setShowInstallPrompt(true);\r\n        },\r\n        userInfo\r\n      );\r\n\r\n      if (success) {\r\n        // LLM was opened successfully\r\n        console.log(`✅ ${platform} opened successfully`);\r\n        \r\n        // Simulate connection after a short delay (like the original ChatGPT connector)\r\n        setTimeout(() => {\r\n          if (onConnectionChange) {\r\n            onConnectionChange(platform, true);\r\n          }\r\n          if (onSuccess) {\r\n            onSuccess(platform);\r\n          }\r\n          setIsConnecting(false);\r\n        }, 1000);\r\n      } else {\r\n        // Failed to open (popup blocked or other error)\r\n        console.log(`❌ Failed to open ${platform}`);\r\n        setIsConnecting(false);\r\n        \r\n        if (onError) {\r\n          onError(platform, 'Failed to open LLM platform');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`❌ Error connecting to ${platform}:`, error);\r\n      setIsConnecting(false);\r\n      \r\n      if (onError) {\r\n        onError(platform, error.message);\r\n      }\r\n    }\r\n  }, [isConnecting, onConnectionChange]);\r\n\r\n  /**\r\n   * Handle disconnection from LLM platform\r\n   * @param {string} platform - LLM platform name\r\n   */\r\n  const handleLLMDisconnect = useCallback((platform) => {\r\n    console.log(`🔌 Disconnecting from ${platform}`);\r\n    \r\n    if (onConnectionChange) {\r\n      onConnectionChange(platform, false);\r\n    }\r\n  }, [onConnectionChange]);\r\n\r\n  /**\r\n   * Close the extension install prompt\r\n   */\r\n  const handleCloseInstallPrompt = useCallback(() => {\r\n    setShowInstallPrompt(false);\r\n    setCurrentPlatform(null);\r\n    setIsConnecting(false);\r\n  }, []);\r\n\r\n  /**\r\n   * Handle extension installation click\r\n   */\r\n  const handleExtensionInstall = useCallback((platform) => {\r\n    console.log(`🔗 User clicked to install extension for ${platform}`);\r\n    // The ExtensionInstallPrompt component will handle opening the store\r\n    // We'll close the prompt after a delay to let the user install\r\n    setTimeout(() => {\r\n      setShowInstallPrompt(false);\r\n      setCurrentPlatform(null);\r\n      setIsConnecting(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  /**\r\n   * Check extension status\r\n   * @returns {Promise<boolean>} True if extension is available\r\n   */\r\n  const checkExtensionStatus = useCallback(async () => {\r\n    return await detectOnairosExtension();\r\n  }, []);\r\n\r\n  // Provide context to children components\r\n  const contextValue = {\r\n    // Connection methods\r\n    connectToLLM: handleLLMConnect,\r\n    disconnectFromLLM: handleLLMDisconnect,\r\n    \r\n    // State\r\n    isConnecting,\r\n    currentPlatform,\r\n    \r\n    // Utilities\r\n    checkExtensionStatus,\r\n    \r\n    // User info\r\n    username\r\n  };\r\n\r\n  return (\r\n    <div data-llm-manager=\"true\">\r\n      {/* Render children with context */}\r\n      {React.Children.map(children, child => {\r\n        if (React.isValidElement(child)) {\r\n          return React.cloneElement(child, {\r\n            ...child.props,\r\n            llmConnectorManager: contextValue\r\n          });\r\n        }\r\n        return child;\r\n      })}\r\n\r\n      {/* Extension Install Prompt */}\r\n      <ExtensionInstallPrompt\r\n        open={showInstallPrompt}\r\n        platform={currentPlatform}\r\n        onClose={handleCloseInstallPrompt}\r\n        onInstallClick={handleExtensionInstall}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Hook for using LLM Connector Manager context\r\n * @param {Object} props - Component props that might contain llmConnectorManager\r\n * @returns {Object} LLM connector manager context\r\n */\r\nexport const useLLMConnectorManager = (props) => {\r\n  return props.llmConnectorManager || {\r\n    connectToLLM: () => console.warn('LLM Connector Manager not available'),\r\n    disconnectFromLLM: () => console.warn('LLM Connector Manager not available'),\r\n    isConnecting: false,\r\n    currentPlatform: null,\r\n    checkExtensionStatus: () => Promise.resolve(false),\r\n    username: null\r\n  };\r\n};\r\n\r\nexport default LLMConnectorManager;\r\n","import React, { useEffect, useId, useState, useRef } from 'react';\r\nimport Lottie from 'lottie-react';\r\nimport personaAnim from '../../public/persona-anim.json';\r\nimport LLMConnectorManager from './LLMConnectorManager';\r\nconst chatgptIcon = 'https://anushkasirv.sirv.com/openai.png';\r\nconst claudeIcon = 'https://anushkasirv.sirv.com/claude-color.png';\r\nconst geminiIcon = 'https://anushkasirv.sirv.com/gemini-color.png';\r\nconst grokIcon = 'https://anushkasirv.sirv.com/grok.png';\r\n\r\nconst sdkConfig = {\r\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\r\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\r\n  sdkType: 'web',\r\n  enableHealthMonitoring: true,\r\n  enableAutoRefresh: true,\r\n  enableConnectionValidation: true,\r\n};\r\n\r\nconst fadeSlideInKeyframes = `\r\n@keyframes fadeSlideIn {\r\n  from { opacity: 0; transform: translateX(var(--slide-x)); }\r\n  to { opacity: 1; transform: translateX(0); }\r\n}\r\n`;\r\n\r\nexport default function UniversalOnboarding({ onComplete, llmConnectorManager }) {\r\n  const lottieRef = useRef(null);\r\n  const lastFrameRef = useRef(0);\r\n  const rafRef = useRef(null);\r\n\r\n  const [connectedAccounts, setConnectedAccounts] = useState({});\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\r\n  const [selected, setSelected] = useState('Instagram');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // swipe state\r\n  const touchStartX = useRef(0);\r\n  const touchDeltaX = useRef(0);\r\n\r\n  const [vh, setVh] = useState(() => (typeof window !== 'undefined' ? window.innerHeight : 800));\r\n  useEffect(() => {\r\n    const onResize = () => setVh(window.innerHeight);\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const FOOTER_H = 88;\r\n\r\n  // persona stays as requested (background, unchanged placement)\r\n  const personaSide = Math.min(vh * 0.52, 500);\r\n  const PERSONA_TOP = 96;\r\n\r\n  // icon layout (restore tighter spacing on page 1; place the band lower)\r\n  const SLOT = Math.max(56, Math.min(64, Math.floor(vh * 0.07)));\r\n  const CIRCLE = 42;\r\n  const GAP_PAGE1 = 12;\r\n  const GAP_PAGE2 = 20;\r\n  const ACTIVE_SCALE = vh < 760 ? 1.12 : 1.22;\r\n\r\n  const ICONS_H = 84;\r\n  const ICONS_TOP_OFFSET = Math.max(180, Math.min(240, Math.round(vh * 0.28))); // ~28vh, clamped for all screens\r\n\r\n  const igGradId = useId();\r\n\r\n  // ---- official brand SVGs (compact, consistent viewboxes) ----\r\n  const Brand = {\r\n    ChatGPT: <img src={chatgptIcon} alt=\"ChatGPT\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\r\n    Claude: <img src={claudeIcon} alt=\"Claude\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\r\n    Gemini: <img src={geminiIcon} alt=\"Gemini\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\r\n    Grok: <img src={grokIcon} alt=\"Grok\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\r\n    Instagram: (\r\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\r\n        <defs>\r\n          <radialGradient id={igGradId} cx=\"0.5\" cy=\"1\" r=\"1\">\r\n            <stop offset=\"0%\" stopColor=\"#FDBB4B\"/>\r\n            <stop offset=\"40%\" stopColor=\"#E95950\"/>\r\n            <stop offset=\"70%\" stopColor=\"#BC2A8D\"/>\r\n            <stop offset=\"100%\" stopColor=\"#4C68D7\"/>\r\n          </radialGradient>\r\n        </defs>\r\n        <path fill={`url(#${igGradId})`} d=\"M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5zm5 5.5A4.5 4.5 0 1 0 16.5 12 4.5 4.5 0 0 0 12 7.5zm0 7.4A2.9 2.9 0 1 1 14.9 12 2.9 2.9 0 0 1 12 14.9Zm5.35-8.25a1.15 1.15 0 1 0 1.15 1.15 1.15 1.15 0 0 0-1.15-1.15Z\"/>\r\n      </svg>\r\n    ),\r\n    YouTube: (\r\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\r\n        <path fill=\"#FF0000\" d=\"M22.54 6.42a3 3 0 0 0-2.11-2.12C18.49 3.75 12 3.75 12 3.75s-6.49 0-8.43.55A3 3 0 0 0 1.46 6.42 31.63 31.63 0 0 0 1 12a31.63 31.63 0 0 0 .46 5.58 3 3 0 0 0 2.11 2.12C5.51 20.25 12 20.25 12 20.25s6.49 0 8.43-.55a3 3 0 0 0 2.11-2.12A31.63 31.63 0 0 0 23 12a31.63 31.63 0 0 0-.46-5.58z\"/>\r\n        <path fill=\"#FFF\" d=\"M10 8.75v6.5l6-3.25-6-3.25z\"/>\r\n        </svg>\r\n      ),\r\n    Reddit: (\r\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\r\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#FF4500\"/>\r\n        <circle cx=\"8.75\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\r\n        <circle cx=\"15.25\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\r\n        <path fill=\"#FFF\" d=\"M7.9 15c.8.8 2.3 1.05 4.1 1.05S15.3 15.8 16.1 15c.2-.2.2-.5 0-.7-.2-.2-.5-.2-.7 0-.6.6-1.9.85-3.4.85S9.3 14.9 8.7 14.3c-.2-.2-.5-.2-.7 0-.2.2-.2.5 0 .7z\"/>\r\n        </svg>\r\n      ),\r\n    LinkedIn: (\r\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\r\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"3\" fill=\"#0A66C2\"/>\r\n        <rect x=\"5\" y=\"9\" width=\"3\" height=\"10\" fill=\"#FFF\"/>\r\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"1.5\" fill=\"#FFF\"/>\r\n        <path fill=\"#FFF\" d=\"M16.8 19H13.9v-5c0-1.2-.5-1.8-1.4-1.8-.9 0-1.6.6-1.6 1.8V19H8V9h2.8v1.3c.5-.8 1.4-1.5 2.7-1.5 2 0 3.3 1.3 3.3 3.7V19z\"/>\r\n        </svg>\r\n      ),\r\n    Twitter: (\r\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\r\n        <path fill=\"#1DA1F2\" d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"/>\r\n        </svg>\r\n      ),\r\n  };\r\n\r\n  const aiLinks = {\r\n    ChatGPT: 'https://chat.openai.com',\r\n    Claude: 'https://claude.ai',\r\n    Gemini: 'https://gemini.google.com',\r\n    Grok: 'https://grok.x.ai',\r\n  };\r\n\r\n  const descriptions = {\r\n    ChatGPT: <>We analyze your <strong className=\"font-semibold\">prompt style</strong> and <strong className=\"font-semibold\">chat history</strong> to match your writing and thinking patterns.</>,\r\n    Claude: <>We learn your <strong className=\"font-semibold\">document workflow</strong> and <strong className=\"font-semibold\">reasoning preferences</strong> to tune output format and detail.</>,\r\n    Gemini: <>We study your <strong className=\"font-semibold\">search patterns</strong> and <strong className=\"font-semibold\">multimodal usage</strong> to improve response accuracy.</>,\r\n    Grok: <>We adapt to your <strong className=\"font-semibold\">X posting style</strong> and <strong className=\"font-semibold\">meme literacy</strong> to match your tone.</>,\r\n    Twitter: <>We analyze your <strong className=\"font-semibold\">tweets</strong> and <strong className=\"font-semibold\">interests</strong> to understand your preferences.</>,\r\n    YouTube: <>We study your <strong className=\"font-semibold\">watch history</strong> and <strong className=\"font-semibold\">interactions</strong> to learn your interests.</>,\r\n    Reddit: <>We examine your <strong className=\"font-semibold\">search history</strong> and <strong className=\"font-semibold\">discussions</strong> to understand your interests.</>,\r\n    Instagram: <>We analyze your <strong className=\"font-semibold\">photos</strong> and <strong className=\"font-semibold\">interactions</strong> to learn visual preferences.</>,\r\n    LinkedIn: <>We study your <strong className=\"font-semibold\">professional graph</strong> and <strong className=\"font-semibold\">content</strong> to understand career interests.</>,\r\n  };\r\n\r\n  const allPlatforms = [\r\n    // Page 1\r\n    { name: 'Instagram', connector: 'instagram', icon: Brand.Instagram },\r\n    { name: 'YouTube', connector: 'youtube', icon: Brand.YouTube },\r\n    { name: 'ChatGPT', connector: 'chatgpt', icon: Brand.ChatGPT, directLink: aiLinks.ChatGPT },\r\n    // Page 2\r\n    { name: 'Claude', connector: 'claude', icon: Brand.Claude, directLink: aiLinks.Claude },\r\n    { name: 'Gemini', connector: 'gemini', icon: Brand.Gemini, directLink: aiLinks.Gemini },\r\n    { name: 'Twitter', connector: 'twitter', icon: Brand.Twitter },\r\n    // Page 3\r\n    { name: 'LinkedIn', connector: 'linkedin', icon: Brand.LinkedIn },\r\n    { name: 'Reddit', connector: 'reddit', icon: Brand.Reddit },\r\n    { name: 'Grok', connector: 'grok', icon: Brand.Grok, directLink: aiLinks.Grok },\r\n  ];\r\n\r\n  const getPlatformsForPage = (page) => {\r\n    if (page === 1) return allPlatforms.slice(0, 3);\r\n    if (page === 2) return allPlatforms.slice(3, 6);\r\n    return allPlatforms.slice(6);\r\n  };\r\n\r\n  const platforms = getPlatformsForPage(currentPage);\r\n\r\n  useEffect(() => {\r\n    const p = localStorage.getItem('onairos_oauth_platform');\r\n    if (p) {\r\n      localStorage.removeItem('onairos_oauth_platform');\r\n      localStorage.removeItem('onairos_oauth_return');\r\n      setConnectedAccounts((s) => ({ ...s, [p]: true }));\r\n    }\r\n  }, []);\r\n\r\n  async function connectToPlatform(name) {\r\n    const plat = allPlatforms.find((p) => p.name === name);\r\n    if (!plat) return false;\r\n    try {\r\n      // For direct-link platforms (no OAuth), mark connected immediately and return\r\n      if (plat.directLink) {\r\n        setConnectedAccounts((s) => ({ ...s, [name]: true }));\r\n        setIsConnecting(false);\r\n        setConnectingPlatform(null);\r\n        return true;\r\n      }\r\n\r\n      // Immediately reflect selection in UI without spinner while starting OAuth\r\n      setConnectedAccounts((s) => ({ ...s, [name]: true }));\r\n      setIsConnecting(true);\r\n      setConnectingPlatform(name);\r\n      const username = localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com';\r\n\r\n      const res = await fetch(`${sdkConfig.baseUrl}/${plat.connector}/authorize`, {\r\n        method: 'POST', headers: { 'x-api-key': sdkConfig.apiKey, 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ session: { username } }),\r\n      });\r\n      if (!res.ok) throw new Error('auth failed');\r\n      const data = await res.json();\r\n\r\n      const candidates = (\r\n        {\r\n          youtube: ['youtubeURL','youtubeUrl','youtube_url'],\r\n          linkedin: ['linkedinURL','linkedinUrl','linkedin_url'],\r\n          reddit: ['redditURL','redditUrl','reddit_url'],\r\n          pinterest: ['pinterestURL','pinterestUrl','pinterest_url'],\r\n          instagram: ['instagramURL','instagramUrl','instagram_url'],\r\n          github: ['githubURL','githubUrl','github_url'],\r\n          facebook: ['facebookURL','facebookUrl','facebook_url'],\r\n          gmail: ['gmailURL','gmailUrl','gmail_url'],\r\n        }[plat.connector]\r\n      ) || [`${plat.connector}URL`, `${plat.connector}Url`, `${plat.connector}_url`, 'platformURL', 'authUrl', 'url'];\r\n\r\n      let oauthUrl = null; for (const k of candidates) if (data[k]) { oauthUrl = data[k]; break; }\r\n      if (!oauthUrl) throw new Error('no url');\r\n\r\n      const popup = window.open(oauthUrl, `${plat.connector}_oauth`, 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\r\n      if (!popup) throw new Error('popup blocked');\r\n\r\n      let touched = false; const it = setInterval(() => {\r\n        try { if (popup.location && popup.location.hostname === 'onairos.uk') { touched = true; popup.close(); } } catch { if (!touched) touched = true; }\r\n        try { if (popup.closed) { clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } } catch {}\r\n      }, 800);\r\n\r\n      setTimeout(() => { try { if (!popup.closed && touched) popup.close(); } catch {} }, 10000);\r\n      setTimeout(() => { if (!popup.closed) { popup.close(); clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } }, 300000);\r\n      return true;\r\n    } catch {\r\n      // On failure, revert the optimistic toggle\r\n      setConnectedAccounts((s) => ({ ...s, [name]: false }));\r\n      setIsConnecting(false); setConnectingPlatform(null); return false;\r\n    }\r\n  }\r\n\r\n  const handleSwitch = async (name, llmConnectorManager = null) => {\r\n    if (isConnecting && connectingPlatform !== name) return;\r\n    const on = !!connectedAccounts[name];\r\n    \r\n    if (on) {\r\n      // Disconnect\r\n      setConnectedAccounts((s) => ({ ...s, [name]: false }));\r\n    } else {\r\n      // Connect\r\n      const platform = allPlatforms.find(p => p.name === name);\r\n      \r\n      // Check if this is an LLM platform that should use extension detection\r\n      if (platform && platform.directLink && llmConnectorManager) {\r\n        // Use LLM Connector Manager for AI platforms\r\n        const platformKey = platform.connector; // 'chatgpt', 'claude', 'gemini', 'grok'\r\n        \r\n        llmConnectorManager.connectToLLM(\r\n          platformKey,\r\n          (connectedPlatform) => {\r\n            // Success callback\r\n            console.log(`✅ ${connectedPlatform} connected via extension`);\r\n            setConnectedAccounts((s) => ({ ...s, [name]: true }));\r\n          },\r\n          (errorPlatform, error) => {\r\n            // Error callback\r\n            console.error(`❌ ${errorPlatform} connection error:`, error);\r\n            // Don't show alert here as LLM Connector Manager handles UI\r\n          }\r\n        );\r\n      } else {\r\n        // Use traditional OAuth flow for social media platforms\r\n        await connectToPlatform(name);\r\n      }\r\n    }\r\n  };\r\n\r\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\r\n\r\n  useEffect(() => {\r\n    if (!lottieRef.current) return;\r\n    const totalFrames = (personaAnim.op || 0) - (personaAnim.ip || 0);\r\n    const TOTAL_PLATFORMS = 9; // Total number of platforms across all pages\r\n    const progress = connectedCount / TOTAL_PLATFORMS;\r\n    const target = Math.max(0, Math.floor(progress * totalFrames));\r\n    const start = lastFrameRef.current || 0;\r\n    const duration = 420; const startTs = performance.now();\r\n    const step = (now) => {\r\n      const t = Math.min(1, (now - startTs) / duration);\r\n      const eased = t < 0.5 ? 2*t*t : -1 + (4 - 2*t)*t;\r\n      const frame = Math.floor(start + (target - start) * eased);\r\n      lottieRef.current.goToAndStop(frame, true);\r\n      if (t < 1) rafRef.current = requestAnimationFrame(step); else lastFrameRef.current = target;\r\n    };\r\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\r\n    rafRef.current = requestAnimationFrame(step);\r\n    return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); };\r\n  }, [connectedCount]);\r\n\r\n  // swipe handlers for smooth paging\r\n  const onTouchStart = (e) => { touchStartX.current = e.touches[0].clientX; touchDeltaX.current = 0; };\r\n  const onTouchMove  = (e) => { touchDeltaX.current = e.touches[0].clientX - touchStartX.current; };\r\n  const onTouchEnd   = () => {\r\n    const dx = touchDeltaX.current; const THRESH = 40;\r\n    if (dx < -THRESH && currentPage < 3) setCurrentPage(currentPage + 1);\r\n    else if (dx > THRESH && currentPage > 1) setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <LLMConnectorManager \r\n      onConnectionChange={(platform, connected) => {\r\n        // Handle connection changes from LLM Connector Manager\r\n        const platformName = platform.charAt(0).toUpperCase() + platform.slice(1); // 'chatgpt' -> 'ChatGPT'\r\n        const displayName = platformName === 'Chatgpt' ? 'ChatGPT' : platformName;\r\n        setConnectedAccounts((s) => ({ ...s, [displayName]: connected }));\r\n      }}\r\n      username={localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com'}\r\n    >\r\n      <div className=\"w-full h-full relative\" style={{ height: Math.min('90vh', Math.max(600, Math.min(720, vh * 0.9))), minHeight: 580, maxHeight: 720 }}>\r\n        <style>{fadeSlideInKeyframes}</style>\r\n\r\n      {/* persona as background (unchanged) */}\r\n      <div aria-hidden style={{ position: 'absolute', left: '50%', top: PERSONA_TOP, transform: 'translateX(-50%)', width: personaSide, height: personaSide, zIndex: 0, pointerEvents: 'none', opacity: 0.95 }}>\r\n        <div className=\"overflow-hidden rounded-[28px] w-full h-full\">\r\n          <Lottie lottieRef={lottieRef} animationData={personaAnim} autoplay={false} loop={false} style={{ width: '100%', height: '100%' }} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* content above persona */}\r\n      <div className=\"relative z-10 h-full flex flex-col\">\r\n        {/* header (unchanged visuals) */}\r\n        <div className=\"px-6 pt-16 pb-4 text-center\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 leading-tight\">Connect App Data</h1>\r\n          <p className=\"text-gray-600 text-base\">More Connections, Better Personalization.</p>\r\n        </div>\r\n\r\n        {/* icons band — placed LOWER per request */}\r\n        <div className=\"px-6 flex-shrink-0\" style={{ height: ICONS_H, marginTop: ICONS_TOP_OFFSET }}>\r\n          <div className=\"h-full flex items-center justify-center\">\r\n            <div\r\n              className=\"grid w-full box-border relative\"\r\n              onTouchStart={onTouchStart}\r\n              onTouchMove={onTouchMove}\r\n              onTouchEnd={onTouchEnd}\r\n                    style={{\r\n                gridAutoFlow: 'column',\r\n                gridTemplateColumns: `repeat(${platforms.length}, minmax(0,1fr))`,\r\n                columnGap: currentPage === 1 ? GAP_PAGE1 : GAP_PAGE2,\r\n                alignItems: 'center',\r\n                justifyItems: 'center',\r\n                paddingInline: 8,\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              {platforms.map((p, idx) => {\r\n                const on = !!connectedAccounts[p.name];\r\n                const busy = false; // keep icon static visually per request\r\n                const isSel = selected === p.name;\r\n                const shift = (currentPage === 1 ? idx : idx - 2) * 14;\r\n                return (\r\n                  <div key={p.name} className=\"transition-all duration-300\" style={{ opacity: 0, transform: `translateX(${shift}px)`, animation: 'fadeSlideIn 0.28s forwards', ['--slide-x']: `${shift}px` }}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => { \r\n                        setSelected(p.name);\r\n                        handleSwitch(p.name, llmConnectorManager);\r\n                      }}\r\n                      className=\"relative grid place-items-center outline-none\"\r\n                      style={{ width: SLOT, height: SLOT }}\r\n                      title={p.name}\r\n                    >\r\n                      <div className={`rounded-full border-3 transition-all duration-150 ease-out flex items-center justify-center shadow-lg ${on ? 'border-blue-600 bg-white text-black shadow-blue-500/70' : 'border-gray-300 hover:border-gray-400 bg-white text-black'}`}\r\n                           style={{ width: CIRCLE, height: CIRCLE, transform: `scale(${isSel ? ACTIVE_SCALE : 1})`, transformOrigin: 'center' }}>\r\n                        <div className=\"flex items-center justify-center\" style={{ width: 20, height: 20 }}>\r\n                          {p.icon}\r\n                        </div>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* dots navigation (no numbers) - directly under icons, above card */}\r\n        <div className=\"relative flex items-center justify-center gap-4 select-none\" style={{ marginTop: 20, zIndex: 25 }}>\r\n          {[1,2,3].map(n => (\r\n            <button key={n} onClick={() => setCurrentPage(n)} aria-label={`page ${n}`} className=\"relative\" style={{ width: 12, height: 12 }}>\r\n              <span className={`block rounded-full ${currentPage === n ? 'bg-blue-600 scale-110' : 'bg-gray-300'} transition-transform`} style={{ width: 12, height: 12 }} />\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* info sheet — positioned right above the footer */}\r\n        <div className=\"px-6 flex-shrink-0\" style={{ position: 'absolute', bottom: FOOTER_H + 24, left: 0, right: 0, zIndex: 20 }}>\r\n          <div className=\"mx-auto rounded-2xl bg-white shadow-sm border border-gray-200 px-4 py-2.5\" style={{ width: 'min(680px,92%)', maxHeight: vh * 0.2 }}>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-gray-900 font-medium\">{selected}</div>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={!!connectedAccounts[selected]}\r\n                aria-label={`toggle ${selected}`}\r\n                onClick={() => handleSwitch(selected)}\r\n                disabled={isConnecting && connectingPlatform !== selected}\r\n                className={`relative inline-flex items-center transition-colors disabled:opacity-50 ${connectedAccounts[selected] ? 'bg-black' : 'bg-gray-200'} rounded-full`}\r\n                style={{ width: 56, height: 32 }}\r\n              >\r\n                <span className=\"absolute bg-white rounded-full shadow\" style={{ width: 24, height: 24, transform: connectedAccounts[selected] ? 'translateX(26px)' : 'translateX(6px)', transition: 'transform 160ms ease' }} />\r\n              </button>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <div className=\"rounded-2xl bg-gray-50 text-gray-700 text-sm leading-6 px-4 py-3 shadow-[inset_0_0_0_1px_rgba(0,0,0,0.04)]\">\r\n                {descriptions[selected] || null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* footer — fixed near bottom; no change to persona */}\r\n        <div className=\"absolute left-0 right-0 px-6\" style={{ bottom: 0, height: FOOTER_H + 20, paddingBottom: 16, background: 'linear-gradient(to top, white 60%, rgba(255,255,255,0.9) 85%, rgba(255,255,255,0))', zIndex: 30 }}>\r\n          <div className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\" onClick={() => {\r\n            const connected = Object.entries(connectedAccounts).filter(([, v]) => v).map(([k]) => k);\r\n            onComplete?.({ connectedAccounts: connected, totalConnections: connected.length });\r\n          }}>\r\n            Update\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\r\n          </div>\r\n          <div onClick={() => onComplete?.({ connectedAccounts: [], totalConnections: 0 })} className=\"w-full text-gray-600 text-base font-medium py-2 text-center cursor-pointer hover:text-gray-800 transition-colors\">Skip</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </LLMConnectorManager>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\r\n  const [pin, setPin] = useState('');\r\n  const [pinRequirements, setPinRequirements] = useState({\r\n    length: false,\r\n    uppercase: false,\r\n    number: false,\r\n  });\r\n\r\n  // Check PIN requirements\r\n  useEffect(() => {\r\n    setPinRequirements({\r\n      length: pin.length >= 6,\r\n      uppercase: /[A-Z]/.test(pin),\r\n      number: /\\d/.test(pin),\r\n    });\r\n  }, [pin]);\r\n\r\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\r\n\r\n  const handleSubmit = () => {\r\n    if (allRequirementsMet) {\r\n      onComplete({\r\n        pin: pin, // This should be hashed in production\r\n        pinCreated: true,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\r\n        <div className=\"mb-6 flex-shrink-0\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\r\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6 flex-shrink-0\">\r\n          <input\r\n            type=\"password\"\r\n            value={pin}\r\n            onChange={(e) => setPin(e.target.value)}\r\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-gray-50\"\r\n            placeholder=\"Enter your PIN\"\r\n            maxLength={20}\r\n          />\r\n        </div>\r\n\r\n        {/* Scrollable requirements list */}\r\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\r\n          <div className=\"space-y-3 pb-4\">\r\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.length && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.uppercase && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.number && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Contain a number.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buttons - Fixed at bottom */}\r\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\r\n        <div\r\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\r\n            allRequirementsMet \r\n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \r\n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\r\n          }`}\r\n          onClick={allRequirementsMet ? handleSubmit : undefined}\r\n        >\r\n          Continue\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton from './ui/PrimaryButton.jsx';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nconst dataTypes = [\r\n  { \r\n    id: 'basic', \r\n    name: 'Basic Profile', \r\n    description: 'Essential profile information, account details, and basic demographics', \r\n    icon: 'User',\r\n    required: true,\r\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\r\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\r\n  },\r\n  { \r\n    id: 'preferences', \r\n    name: 'User Preferences', \r\n    description: 'User preferences, interests, settings and personal choices', \r\n    icon: 'Grid3X3',\r\n    required: false,\r\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\r\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\r\n  },\r\n  { \r\n    id: 'personality', \r\n    name: 'Personality Traits', \r\n    description: 'Personality traits, behavioral patterns and psychological insights', \r\n    icon: 'Brain',\r\n    required: false,\r\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\r\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\r\n  }\r\n];\r\n\r\n// Data Type Toggle Component with compact checkbox design\r\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\r\n  const handleToggle = () => {\r\n    if (dataType.required) return; // Don't allow toggling required items\r\n    onToggle(dataType.id, !isEnabled);\r\n  };\r\n\r\n  const getIconComponent = (iconName) => {\r\n    const iconProps = { className: \"w-4 h-4 text-gray-600\" };\r\n    \r\n    switch (iconName) {\r\n      case 'User':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n          </svg>\r\n        );\r\n      case 'Grid3X3':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n          </svg>\r\n        );\r\n      case 'Brain':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n          </svg>\r\n        );\r\n      default:\r\n        return <span className=\"text-lg\">{iconName}</span>;\r\n    }\r\n  };\r\n\r\n            return (\r\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                            {getIconComponent(dataType.icon)}\r\n                        </div>\r\n                        <div className=\"min-w-0 flex-1\">\r\n                            <span className=\"font-medium text-gray-900 text-sm\">{dataType.name}</span>\r\n                        </div>\r\n                    </div>\r\n      <div\r\n        onClick={handleToggle}\r\n        className={`w-5 h-5 rounded border-2 flex items-center justify-center cursor-pointer transition-colors flex-shrink-0 ${\r\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\r\n        }`}\r\n      >\r\n        {isEnabled && (\r\n          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DataRequest = ({ \r\n  userEmail = 'user@example.com', \r\n  testMode = true, \r\n  onComplete, \r\n  autoFetch = true,\r\n  appName = 'Test App',\r\n  formatResponse = false,\r\n  responseFormat = 'simple'\r\n}) => {\r\n  const [selectedData, setSelectedData] = useState({\r\n    basic: true, // Always true for required data\r\n    personality: false,\r\n    preferences: false\r\n  });\r\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\r\n  const [apiError, setApiError] = useState(null);\r\n\r\n  const handleDataToggle = (dataId, enabled) => {\r\n    const dataType = dataTypes.find(dt => dt.id === dataId);\r\n    if (dataType?.required) return; // Don't allow toggling required items\r\n\r\n    setSelectedData(prev => ({\r\n      ...prev,\r\n      [dataId]: enabled\r\n    }));\r\n  };\r\n\r\n  const generateUserHash = (email) => {\r\n    let hash = 0;\r\n    const str = email + Date.now().toString();\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return `user_${Math.abs(hash).toString(36)}`;\r\n  };\r\n\r\n  const fetchUserData = async () => {\r\n    console.log('🔥 DataRequest: fetchUserData called');\r\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\r\n    console.log('🔥 DataRequest: selectedData:', selectedData);\r\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\r\n    \r\n    setIsLoadingApi(true);\r\n    setApiError(null);\r\n    \r\n    try {\r\n      const userHash = generateUserHash(userEmail);\r\n      \r\n      // Get selected data types\r\n      const approvedData = Object.entries(selectedData)\r\n        .filter(([key, value]) => value)\r\n        .map(([key]) => key);\r\n\r\n      const mapDataTypesToConfirmations = (approvedData) => {\r\n        const confirmations = [];\r\n        const currentDate = new Date().toISOString();\r\n        \r\n        const dataTypeMapping = {\r\n          'basic': 'Medium',\r\n          'personality': 'Large', \r\n          'preferences': 'Traits'\r\n        };\r\n        \r\n        approvedData.forEach(dataType => {\r\n          if (dataTypeMapping[dataType]) {\r\n            confirmations.push({\r\n              data: dataTypeMapping[dataType],\r\n              date: currentDate\r\n            });\r\n          }\r\n        });\r\n        \r\n        return confirmations;\r\n      };\r\n\r\n      const apiEndpoint = testMode \r\n        ? 'https://api2.onairos.uk/inferenceTest'\r\n        : 'https://api2.onairos.uk/getAPIurlMobile';\r\n      \r\n      const baseResult = {\r\n        userHash,\r\n        appName,\r\n        approvedData,\r\n        apiUrl: apiEndpoint,\r\n        testMode,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      if (autoFetch) {\r\n        if (testMode) {\r\n          // Test mode: Skip API call completely, simulate response\r\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\r\n          \r\n          setTimeout(() => {\r\n            const simulatedApiData = {\r\n              success: true,\r\n              message: \"Data request simulated successfully\",\r\n              data: {\r\n                personalityScores: {\r\n                  openness: 0.75,\r\n                  conscientiousness: 0.68,\r\n                  extraversion: 0.82,\r\n                  agreeableness: 0.71,\r\n                  neuroticism: 0.43\r\n                },\r\n                insights: [\r\n                  \"You show high creativity and openness to new experiences\",\r\n                  \"Strong social tendencies with good interpersonal skills\",\r\n                  \"Well-organized approach to tasks and goals\"\r\n                ],\r\n                dataProcessed: approvedData,\r\n                timestamp: new Date().toISOString(),\r\n                testMode: true\r\n              }\r\n            };\r\n\r\n            const result = {\r\n              ...baseResult,\r\n              apiResponse: simulatedApiData,\r\n              success: true,\r\n              simulated: true\r\n            };\r\n\r\n            setIsLoadingApi(false);\r\n            console.log('🧪 Test mode: Simulated data request completed:', result);\r\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n            if (onComplete && typeof onComplete === 'function') {\r\n              onComplete(result);\r\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\r\n            } else {\r\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\r\n            }\r\n          }, 1200); // Simulate realistic processing time\r\n        } else {\r\n          // Production mode: Make real API call\r\n          try {\r\n            const confirmations = mapDataTypesToConfirmations(approvedData);\r\n            \r\n            const requestBody = {\r\n              approvedData,\r\n              userEmail,\r\n              appName,\r\n              confirmations\r\n            };\r\n\r\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\r\n            console.log('🔥 Request body:', requestBody);\r\n\r\n            const apiResponse = await fetch(apiEndpoint, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(requestBody)\r\n            });\r\n\r\n            if (!apiResponse.ok) {\r\n              throw new Error(`API request failed with status ${apiResponse.status}`);\r\n            }\r\n\r\n            const apiData = await apiResponse.json();\r\n            console.log('🔥 API Response:', apiData);\r\n\r\n            const result = {\r\n              ...baseResult,\r\n              apiResponse: apiData,\r\n              success: true\r\n            };\r\n\r\n            setIsLoadingApi(false);\r\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\r\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n            if (onComplete && typeof onComplete === 'function') {\r\n              onComplete(result);\r\n              console.log('🔥 DataRequest: onComplete called successfully');\r\n            } else {\r\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\r\n            }\r\n\r\n          } catch (apiError) {\r\n            console.error('🔥 API Error:', apiError);\r\n            setApiError(apiError.message);\r\n            setIsLoadingApi(false);\r\n            \r\n            const errorResult = {\r\n              ...baseResult,\r\n              apiResponse: null,\r\n              error: apiError.message,\r\n              success: false\r\n            };\r\n            \r\n            onComplete(errorResult);\r\n          }\r\n        }\r\n      } else {\r\n        setIsLoadingApi(false);\r\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\r\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n        if (onComplete && typeof onComplete === 'function') {\r\n          onComplete(baseResult);\r\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\r\n        } else {\r\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('🔥 DataRequest Error:', error);\r\n      setApiError(error.message);\r\n      setIsLoadingApi(false);\r\n      \r\n      if (onComplete) {\r\n        onComplete({\r\n          error: error.message,\r\n          success: false,\r\n          userEmail,\r\n          appName,\r\n          testMode\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Count selected data types\r\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col min-h-0\">\r\n      {/* Content - Flexible center area with proper constraints */}\r\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0\" style={{ minHeight: 'calc(100vh - 200px)' }}>\r\n        {/* Icon Flow */}\r\n        <div className=\"mb-4 flex justify-center items-center gap-4 flex-shrink-0\">\r\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\r\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n              <path\r\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\r\n                fill=\"black\"\r\n              />\r\n              <path\r\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\r\n                fill=\"black\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\r\n            <span className=\"text-xl font-serif font-bold text-black\">E</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Title Section */}\r\n        <div className=\"mb-4 flex-shrink-0\">\r\n          <h1 className=\"text-xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\r\n            Enoch wants to personalize your experience\r\n          </h1>\r\n          <p className=\"text-gray-600 text-sm\">Choose what to share:</p>\r\n        </div>\r\n\r\n        {/* Consent Options - Scrollable area */}\r\n        <div className=\"flex-1 overflow-y-auto min-h-0\">\r\n          <div className=\"space-y-4 pb-4\">\r\n            {dataTypes.map((dataType, index) => (\r\n              <DataTypeToggle\r\n                key={dataType.id}\r\n                dataType={dataType}\r\n                isEnabled={selectedData[dataType.id]}\r\n                onToggle={handleDataToggle}\r\n                isLast={index === dataTypes.length - 1}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buttons - Fixed at bottom with guaranteed visibility */}\r\n      <div className=\"px-6 pb-6 pt-3 flex-shrink-0 space-y-2 bg-white border-t border-gray-100\">\r\n        <div\r\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-3 text-sm font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          onClick={fetchUserData}\r\n          disabled={isLoadingApi || selectedCount === 0}\r\n        >\r\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n        <div\r\n          onClick={() => onComplete({ cancelled: true })}\r\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-3 text-sm font-medium text-center cursor-pointer transition-colors\"\r\n        >\r\n          Decline\r\n        </div>\r\n\r\n        {/* Error display */}\r\n        {apiError && (\r\n          <div className=\"mt-3 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\r\n            <p className=\"text-xs\">{apiError}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: 'Setting up your personal AI',\r\n      description: 'Initializing your secure data model',\r\n      icon: '🤖',\r\n      duration: testMode ? 800 : 2000 // Much faster in test mode\r\n    },\r\n    {\r\n      title: 'Processing your connections',\r\n      description: 'Analyzing your social media patterns',\r\n      icon: '🔗',\r\n      duration: testMode ? 600 : 2500\r\n    },\r\n    {\r\n      title: 'Training your model',\r\n      description: 'Building your personalized insights',\r\n      icon: '🧠',\r\n      duration: testMode ? 700 : 3000\r\n    },\r\n    {\r\n      title: 'Finalizing setup',\r\n      description: 'Preparing your Onairos experience',\r\n      icon: '✨',\r\n      duration: testMode ? 500 : 2000\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let stepTimeout;\r\n\r\n    if (currentStep < steps.length) {\r\n      const stepDuration = steps[currentStep].duration;\r\n      const stepProgress = 100 / steps.length;\r\n\r\n      // Update progress gradually\r\n      interval = setInterval(() => {\r\n        setProgress(prev => {\r\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\r\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\r\n        });\r\n      }, 100);\r\n\r\n      // Move to next step after duration\r\n      stepTimeout = setTimeout(() => {\r\n        if (currentStep < steps.length - 1) {\r\n          setCurrentStep(prev => prev + 1);\r\n        } else {\r\n          setIsComplete(true);\r\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\r\n          \r\n          if (testMode) {\r\n            console.log('🧪 Test mode: Training simulation completed');\r\n          }\r\n          \r\n          setTimeout(() => {\r\n            onComplete({\r\n              trainingComplete: true,\r\n              timestamp: new Date().toISOString(),\r\n              userEmail: userEmail,\r\n              appName: appName,\r\n              testMode: testMode,\r\n              simulatedTraining: testMode\r\n            });\r\n          }, completionDelay);\r\n        }\r\n      }, stepDuration);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n      if (stepTimeout) clearTimeout(stepTimeout);\r\n    };\r\n  }, [currentStep, onComplete, userEmail, appName]);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center space-y-8\">\r\n      <div className=\"text-center\">\r\n        <div \r\n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\r\n          style={{\r\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\r\n          }}\r\n        >\r\n          <div className=\"text-3xl\">\r\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\r\n          </div>\r\n        </div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-2\"\r\n          style={{ color: COLORS.textPrimary }}\r\n        >\r\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\r\n        </h2>\r\n        <p style={{ color: COLORS.textSecondary }}>\r\n          {isComplete \r\n            ? 'Your personal AI is ready to use' \r\n            : steps[currentStep]?.description\r\n          }\r\n        </p>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"w-full\">\r\n        <div \r\n          className=\"flex justify-between text-sm mb-2\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          <span>Progress</span>\r\n          <span>{Math.round(progress)}%</span>\r\n        </div>\r\n        <div \r\n          className=\"w-full rounded-full h-2\"\r\n          style={{ backgroundColor: COLORS.borderLight }}\r\n        >\r\n          <div \r\n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\r\n            style={{ \r\n              width: `${progress}%`,\r\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Steps Indicator */}\r\n      <div className=\"flex justify-center space-x-2\">\r\n        {steps.map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\r\n            style={{\r\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Current Step Details */}\r\n      <div \r\n        className=\"p-4 rounded-lg w-full\"\r\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\r\n      >\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div \r\n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\r\n            style={{ backgroundColor: '#DBEAFE' }}\r\n          >\r\n            <div className=\"text-sm\">\r\n              {isComplete ? '✅' : steps[currentStep]?.icon}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 \r\n              className=\"font-medium\"\r\n              style={{ color: COLORS.textPrimary }}\r\n            >\r\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\r\n            </h3>\r\n            <p \r\n              className=\"text-sm\"\r\n              style={{ color: COLORS.textSecondary }}\r\n            >\r\n              {isComplete \r\n                ? 'Your Onairos experience is ready' \r\n                : steps[currentStep]?.description\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* App Info */}\r\n      <div className=\"text-center\">\r\n        <p \r\n          className=\"text-sm\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          Setting up for <span className=\"font-medium\">{appName}</span>\r\n        </p>\r\n        {userEmail && (\r\n          <p \r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.textMuted }}\r\n          >\r\n            {userEmail}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from \"react\";\r\nimport Lottie from 'lottie-react';\r\nimport rainAnim from '../../public/rain-anim.json';\r\n\r\nexport default function LoadingScreen({ onComplete }) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [dotCount, setDotCount] = useState(0);\r\n\r\n  const loadingStates = [\r\n    { message: \"Validating PIN and continuing training\", progress: 20 },\r\n    { message: \"Uploading model to secure storage\", progress: 40 },\r\n    { message: \"Running test inference\", progress: 60 },\r\n    { message: \"Storing results in databases\", progress: 80 },\r\n    { message: \"Complete!\", progress: 100 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const stateInterval = setInterval(() => {\r\n      setCurrentStep((prev) => {\r\n        const nextStep = prev + 1;\r\n        if (nextStep >= loadingStates.length) {\r\n          // Loading complete, call onComplete after a short delay\r\n          setTimeout(() => {\r\n            onComplete();\r\n          }, 1000);\r\n          return prev; // Keep at last step\r\n        }\r\n        return nextStep;\r\n      });\r\n    }, 3000); // Change state every 3 seconds\r\n\r\n    return () => clearInterval(stateInterval);\r\n  }, [loadingStates.length, onComplete]);\r\n\r\n  useEffect(() => {\r\n    const dotInterval = setInterval(() => {\r\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\r\n    }, 500); // Change dots every 500ms\r\n\r\n    return () => clearInterval(dotInterval);\r\n  }, []);\r\n\r\n  const currentState = loadingStates[currentStep];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647, pointerEvents: 'auto' }}>\r\n      {/* Modal - Full height from bottom */}\r\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\r\n        {/* Header */}\r\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\r\n        </div>\r\n\r\n        {/* Content - Rain animation and loading state */}\r\n        <div className=\"flex-1 flex flex-col px-6\">\r\n          {/* Rain Animation */}\r\n          <div className=\"flex-1 flex items-center justify-center\">\r\n            <div style={{ width: '100%', maxWidth: '400px', aspectRatio: '1' }}>\r\n              <Lottie\r\n                animationData={rainAnim}\r\n                loop={true}\r\n                autoplay={true}\r\n                style={{ width: '100%', height: '100%' }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Loading State - Positioned at bottom */}\r\n          <div className=\"flex-shrink-0 pb-12\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"font-bold text-gray-900 leading-tight mb-6\" style={{ fontSize: 'clamp(16px, 4vw, 20px)' }}>\r\n                {currentState.message}\r\n                {currentState.message !== \"Complete!\" && (\r\n                  <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\r\n                )}\r\n              </h1>\r\n\r\n              <div className=\"mx-auto\" style={{ width: 'clamp(200px, 50vw, 300px)' }}>\r\n                <div className=\"w-full h-2 bg-gray-200 rounded-full\">\r\n                  <div\r\n                    className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\r\n                    style={{ width: `${currentState.progress}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom spacing */}\r\n        <div className=\"h-20 flex-shrink-0\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Response formatter utility for Onairos SDK\r\n * Converts array-based responses to dictionary format for better developer experience\r\n */\r\n\r\n// Standard 16 personality types in order that the API returns them\r\nexport const PERSONALITY_TYPES = [\r\n  'Analyst',\r\n  'Diplomat', \r\n  'Sentinel',\r\n  'Explorer',\r\n  'Architect',\r\n  'Logician',\r\n  'Commander',\r\n  'Debater',\r\n  'Advocate',\r\n  'Mediator',\r\n  'Protagonist',\r\n  'Campaigner',\r\n  'Logistician',\r\n  'Defender',\r\n  'Executive',\r\n  'Consul'\r\n];\r\n\r\n// Standard trait categories that might be returned\r\nexport const TRAIT_CATEGORIES = [\r\n  'Openness',\r\n  'Conscientiousness',\r\n  'Extraversion',\r\n  'Agreeableness',\r\n  'Neuroticism'\r\n];\r\n\r\n/**\r\n * Formats API response to include both array and dictionary formats\r\n * @param {Object} apiResponse - Raw API response from Onairos\r\n * @param {Object} options - Formatting options\r\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\r\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\r\n * @returns {Object} Formatted response with both formats\r\n */\r\nexport function formatOnairosResponse(apiResponse, options = {}) {\r\n  const { includeDictionary = true, includeArray = true } = options;\r\n  \r\n  if (!apiResponse) {\r\n    return apiResponse;\r\n  }\r\n\r\n  const formatted = { ...apiResponse };\r\n\r\n  // Handle personality scores if present\r\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\r\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\r\n    \r\n    if (Array.isArray(scores) && scores.length >= 16) {\r\n      if (includeDictionary) {\r\n        // Create personality dictionary\r\n        const personalityDict = {};\r\n        PERSONALITY_TYPES.forEach((type, index) => {\r\n          personalityDict[type] = scores[index];\r\n        });\r\n        \r\n        // Add to formatted response\r\n        if (formatted.InferenceResult) {\r\n          formatted.InferenceResult.personalityDict = personalityDict;\r\n        } else {\r\n          formatted.personalityDict = personalityDict;\r\n        }\r\n      }\r\n      \r\n      if (!includeArray) {\r\n        // Remove array format if not requested\r\n        if (formatted.InferenceResult?.traits) {\r\n          delete formatted.InferenceResult.traits;\r\n        }\r\n        if (formatted.traits) {\r\n          delete formatted.traits;\r\n        }\r\n        if (formatted.scores) {\r\n          delete formatted.scores;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle trait data if present (for preferences/traits)\r\n  if (apiResponse.traitResult || apiResponse.traits) {\r\n    const traits = apiResponse.traitResult || apiResponse.traits;\r\n    \r\n    if (Array.isArray(traits) && includeDictionary) {\r\n      const traitDict = {};\r\n      TRAIT_CATEGORIES.forEach((category, index) => {\r\n        if (traits[index] !== undefined) {\r\n          traitDict[category] = traits[index];\r\n        }\r\n      });\r\n      \r\n      formatted.traitDict = traitDict;\r\n    }\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Legacy formatter for backward compatibility\r\n * Converts scores array to personality dictionary only\r\n * @param {Array} scores - Array of personality scores\r\n * @returns {Object} Dictionary with personality type names as keys\r\n */\r\nexport function formatPersonalityScores(scores) {\r\n  if (!Array.isArray(scores) || scores.length < 16) {\r\n    console.warn('Invalid scores array provided to formatPersonalityScores');\r\n    return {};\r\n  }\r\n\r\n  const personalityDict = {};\r\n  PERSONALITY_TYPES.forEach((type, index) => {\r\n    personalityDict[type] = scores[index];\r\n  });\r\n  \r\n  return personalityDict;\r\n}\r\n\r\n/**\r\n * Get personality type names in order\r\n * @returns {Array} Array of personality type names\r\n */\r\nexport function getPersonalityTypes() {\r\n  return [...PERSONALITY_TYPES];\r\n}\r\n\r\n/**\r\n * Get trait category names in order  \r\n * @returns {Array} Array of trait category names\r\n */\r\nexport function getTraitCategories() {\r\n  return [...TRAIT_CATEGORIES];\r\n} ","import React from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Standardized page layout component with white background\r\nconst PageLayout = ({\r\n  children,\r\n  title,\r\n  subtitle,\r\n  icon,\r\n  showHeader = true,\r\n  showCloseButton = false,\r\n  onClose,\r\n  onBack,\r\n  showBackButton = false,\r\n  className = '',\r\n  contentClassName = '',\r\n  centerContent = true,\r\n  style = {},\r\n  ...props\r\n}) => {\r\n  const layoutStyle = {\r\n    backgroundColor: COLORS.background,\r\n    minHeight: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...style\r\n  };\r\n\r\n  const headerStyle = {\r\n    position: 'sticky',\r\n    top: 0,\r\n    backgroundColor: COLORS.background,\r\n    zIndex: 10,\r\n    padding: 'clamp(8px, 2vw, 16px) clamp(16px, 4vw, 32px) clamp(6px, 1.5vw, 12px)'\r\n  };\r\n\r\n  const contentStyle = {\r\n    flex: 1,\r\n    padding: 'clamp(16px, 4vw, 32px)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'auto',\r\n    minHeight: 0, // Allow flex item to shrink below content size\r\n    ...(centerContent && {\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start'\r\n    })\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: 'clamp(20px, 5vw, 28px)',\r\n    fontWeight: '700',\r\n    color: COLORS.textPrimary,\r\n    margin: '0 0 clamp(6px, 1.5vw, 12px) 0',\r\n    textAlign: centerContent ? 'center' : 'left',\r\n    lineHeight: '1.2'\r\n  };\r\n\r\n  const subtitleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: 'clamp(14px, 3.5vw, 18px)',\r\n    fontWeight: '400',\r\n    color: COLORS.textSecondary,\r\n    margin: '0 0 clamp(20px, 5vw, 40px) 0',\r\n    textAlign: centerContent ? 'center' : 'left',\r\n    lineHeight: '1.5'\r\n  };\r\n\r\n  const iconStyle = {\r\n    width: 'clamp(40px, 8vw, 56px)',\r\n    height: 'clamp(40px, 8vw, 56px)',\r\n    margin: '0 auto clamp(16px, 4vw, 32px)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: 'clamp(20px, 5vw, 28px)'\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`onairos-page-layout ${className}`}\r\n      style={layoutStyle}\r\n      {...props}\r\n    >\r\n      {/* Header with navigation */}\r\n      {showHeader && (\r\n        <div style={headerStyle}>\r\n          <div className=\"flex items-center justify-between\">\r\n            {/* Back button */}\r\n            {showBackButton && onBack && (\r\n              <button\r\n                onClick={onBack}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Go back\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\r\n              </button>\r\n            )}\r\n\r\n\r\n            {/* Close button */}\r\n            {showCloseButton && onClose && (\r\n              <button\r\n                onClick={onClose}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main content area */}\r\n      <div \r\n        className={`onairos-page-content ${contentClassName}`}\r\n        style={contentStyle}\r\n      >\r\n        {/* Icon */}\r\n        {icon && (\r\n          <div style={iconStyle}>\r\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\r\n          </div>\r\n        )}\r\n\r\n        {/* Title */}\r\n        {title && (\r\n          <h1 style={titleStyle}>\r\n            {title}\r\n          </h1>\r\n        )}\r\n\r\n        {/* Subtitle */}\r\n        {subtitle && (\r\n          <p style={subtitleStyle}>\r\n            {subtitle}\r\n          </p>\r\n        )}\r\n\r\n        {/* Page content */}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Modal wrapper component for overlay-style pages\r\nconst ModalPageLayout = ({\r\n  children,\r\n  visible = true,\r\n  onClose,\r\n  onBackdropClick,\r\n  backdropStyle = {},\r\n  modalStyle = {},\r\n  ...pageLayoutProps\r\n}) => {\r\n  if (!visible) return null;\r\n\r\n  const backdropStyles = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    zIndex: 2147483647,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transition: 'opacity 200ms ease',\r\n    willChange: 'opacity',\r\n    ...backdropStyle\r\n  };\r\n\r\n  const modalStyles = {\r\n    backgroundColor: COLORS.background,\r\n    borderTopLeftRadius: '24px',\r\n    borderTopRightRadius: '24px',\r\n    borderBottomLeftRadius: '24px',\r\n    borderBottomRightRadius: '24px',\r\n    height: '90vh',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transform: 'translateY(0)',\r\n    transition: 'transform 220ms ease, opacity 220ms ease',\r\n    willChange: 'transform, opacity',\r\n    ...modalStyle\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      if (onBackdropClick) {\r\n        onBackdropClick();\r\n      } else if (onClose) {\r\n        onClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={backdropStyles} onClick={handleBackdropClick}>\r\n      <div style={modalStyles}>\r\n        <PageLayout\r\n          showHeader={true}\r\n          showCloseButton={true}\r\n          onClose={onClose}\r\n          {...pageLayoutProps}\r\n        >\r\n          {children}\r\n        </PageLayout>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ModalPageLayout };\r\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\r\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\r\nimport EmailAuth from './components/EmailAuth.js';\r\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\r\nimport PinSetup from './components/PinSetup.js';\r\nimport DataRequest from './components/DataRequest.js';\r\nimport TrainingComponent from './components/TrainingComponent.jsx';\r\nimport LoadingScreen from './components/LoadingScreen.jsx';\r\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\r\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\r\n\r\nexport function OnairosButton({\r\n  requestData, \r\n  webpageName, \r\n  inferenceData = null, \r\n  onComplete = null, \r\n  autoFetch = true, // Auto-enabled for seamless testing experience\r\n  testMode = true, // Auto-enabled for design testing - set to false for production\r\n  proofMode = false, \r\n  textLayout = 'below', \r\n  textColor = 'white',\r\n  login = false,\r\n  buttonType = 'pill',\r\n  loginReturn = null,\r\n  loginType = 'signIn',\r\n  visualType = 'full',\r\n  appIcon = null,\r\n  enableTraining = true,\r\n  formatResponse = true,\r\n  responseFormat = { includeDictionary: true, includeArray: true },\r\n  priorityPlatform = null // Platform to prioritize (e.g., 'gmail', 'pinterest', 'linkedin')\r\n}) {\r\n\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\r\n  const [userData, setUserData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check for existing user session\r\n  useEffect(() => {\r\n    const checkExistingSession = () => {\r\n      // In test mode, always start fresh to see the full flow\r\n      if (testMode) {\r\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\r\n        localStorage.removeItem('onairosUser');\r\n        setCurrentFlow('welcome');\r\n        return;\r\n      }\r\n      \r\n      const savedUser = localStorage.getItem('onairosUser');\r\n      if (savedUser) {\r\n        try {\r\n          const user = JSON.parse(savedUser);\r\n          setUserData(user);\r\n          // If user has completed onboarding and PIN setup, go directly to data request\r\n          if (user.onboardingComplete && user.pinCreated) {\r\n            setCurrentFlow('dataRequest');\r\n          } else if (user.verified && !user.onboardingComplete) {\r\n            setCurrentFlow('onboarding');\r\n          } else if (user.onboardingComplete && !user.pinCreated) {\r\n            setCurrentFlow('pin');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing saved user data:', error);\r\n          localStorage.removeItem('onairosUser');\r\n        }\r\n      }\r\n    };\r\n\r\n    checkExistingSession();\r\n  }, [testMode]);\r\n\r\n  const openTerminal = async () => {\r\n    try {\r\n      console.log('🔥 openTerminal called');\r\n        setShowOverlay(true);\r\n    } catch (error) {\r\n      console.error('Error in openTerminal:', error);\r\n    }\r\n  };\r\n\r\n  const handleCloseOverlay = () => {\r\n    setShowOverlay(false);\r\n    setError(null);\r\n  };\r\n\r\n  // Handle clicks on the backdrop to close modal\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      handleCloseOverlay();\r\n    }\r\n  };\r\n\r\n  const handleWelcomeContinue = () => {\r\n    console.log('🔥 Welcome screen continue clicked');\r\n    setCurrentFlow('email');\r\n  };\r\n\r\n  const handleEmailAuthSuccess = (authData) => {\r\n    console.log('🔥 Email auth successful:', authData);\r\n    console.log('🔧 User State:', {\r\n      isNewUser: authData.isNewUser,\r\n      userState: authData.userState,\r\n      flowType: authData.flowType,\r\n      existingUser: authData.existingUser,\r\n      hasAccountInfo: !!authData.accountInfo\r\n    });\r\n    \r\n    // Determine flow based on API response - more explicit checking\r\n    const isNewUser = authData.isNewUser === true || \r\n                     authData.existingUser === false || \r\n                     authData.flowType === 'onboarding' || \r\n                     authData.userState === 'new' ||\r\n                     !authData.accountInfo; // No account info means new user\r\n    \r\n    console.log('🔍 Flow determination:', {\r\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\r\n      reasoning: {\r\n        isNewUser: authData.isNewUser,\r\n        existingUserFalse: authData.existingUser === false,\r\n        flowTypeOnboarding: authData.flowType === 'onboarding',\r\n        noAccountInfo: !authData.accountInfo\r\n      }\r\n    });\r\n    \r\n    const newUserData = {\r\n      ...authData,\r\n      verified: true,\r\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\r\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\r\n    };\r\n    \r\n    setUserData(newUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\r\n    \r\n    // Flow decision logic - prioritize new user detection\r\n    if (isNewUser) {\r\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\r\n      setCurrentFlow('onboarding');\r\n    } else {\r\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\r\n      setCurrentFlow('dataRequest');\r\n    }\r\n  };\r\n\r\n  const handleOnboardingComplete = (onboardingData) => {\r\n    console.log('Onboarding completed:', onboardingData);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      onboardingComplete: true,\r\n      connectedAccounts: onboardingData.connectedAccounts || []\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    setCurrentFlow('pin');\r\n  };\r\n\r\n  const handlePinSetupComplete = (pinData) => {\r\n    console.log('PIN setup completed:', pinData);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      ...pinData,\r\n      pinCreated: true\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    \r\n    // Move to loading flow\r\n    setCurrentFlow('loading');\r\n  };\r\n\r\n  const handleLoadingComplete = () => {\r\n    setCurrentFlow('dataRequest');\r\n  };\r\n\r\n  const handleTrainingComplete = (trainingResult) => {\r\n    console.log('🎓 Training completed:', trainingResult);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      trainingCompleted: true,\r\n      ...trainingResult\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    \r\n    // Move to data request after training\r\n    setCurrentFlow('dataRequest');\r\n  };\r\n\r\n  const handleDataRequestComplete = (requestResult) => {\r\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\r\n    \r\n    // Update user data with request result\r\n    const updatedUserData = {\r\n      ...userData,\r\n      lastDataRequest: requestResult\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n\r\n    // Close overlay immediately\r\n    console.log('🔥 Closing overlay after data request completion');\r\n    setShowOverlay(false);\r\n\r\n    // Format response if requested and API response is present\r\n    let formattedResult = requestResult;\r\n    if (formatResponse && requestResult?.apiResponse) {\r\n      try {\r\n        formattedResult = {\r\n          ...requestResult,\r\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\r\n        };\r\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\r\n      } catch (error) {\r\n        console.warn('🔥 Error formatting response:', error);\r\n        // Continue with original result if formatting fails\r\n      }\r\n    }\r\n\r\n    // Enhanced user data formatting for better display\r\n    const { logFormattedUserData } = require('./utils/userDataFormatter');\r\n    \r\n    // Add user data to the result for comprehensive formatting\r\n    const completeResult = {\r\n      ...formattedResult,\r\n      userData: updatedUserData\r\n    };\r\n\r\n    // Log formatted user data for better readability\r\n    const enhancedResult = logFormattedUserData(completeResult);\r\n\r\n    // Call onComplete callback if provided\r\n    console.log('🔥 Calling onComplete callback with enhanced result');\r\n    if (onComplete) {\r\n      try {\r\n        onComplete(enhancedResult);\r\n        console.log('🔥 onComplete callback executed successfully with enhanced formatting');\r\n      } catch (error) {\r\n        console.error('🔥 Error in onComplete callback:', error);\r\n      }\r\n    } else {\r\n      console.log('🔥 No onComplete callback provided');\r\n    }\r\n  };\r\n\r\n  const getFlowTitle = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own titles\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own titles\r\n      case 'onboarding':\r\n        return 'Connect Your Data';\r\n      case 'pin':\r\n        return 'Secure Your Account';\r\n      case 'training':\r\n        return 'Training Your Model';\r\n      case 'dataRequest':\r\n        return 'Data Request';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getFlowSubtitle = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own subtitles\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own subtitles\r\n      case 'onboarding':\r\n        return 'Choose which accounts to connect for a personalized experience';\r\n      case 'pin':\r\n        return 'Create a secure PIN to protect your data';\r\n      case 'training':\r\n        return 'Building your personalized insights';\r\n      case 'dataRequest':\r\n        return `Select the data you want to share with ${webpageName}`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getFlowIcon = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own layout\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own layout\r\n      case 'onboarding':\r\n        return '🔗';\r\n      case 'pin':\r\n        return '🔒';\r\n      case 'training':\r\n        return '⚡';\r\n      case 'dataRequest':\r\n        return '📊';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const renderCurrentFlow = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return (\r\n          <WelcomeScreen \r\n            onContinue={handleWelcomeContinue}\r\n            onClose={handleCloseOverlay}\r\n            webpageName={webpageName}\r\n            appIcon={appIcon}\r\n            testMode={testMode}\r\n          />\r\n        );\r\n      case 'email':\r\n        return (\r\n          <div className=\"h-[min(85vh,700px)]\">\r\n          <EmailAuth \r\n            onSuccess={handleEmailAuthSuccess}\r\n            testMode={testMode} // Use the testMode prop from initialization\r\n          />\r\n          </div>\r\n        );\r\n      \r\n      case 'onboarding':\r\n        return (\r\n          <UniversalOnboarding \r\n            onComplete={handleOnboardingComplete}\r\n            onBack={() => setCurrentFlow('email')}\r\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n            appName={webpageName}\r\n            username={userData?.email || userData?.username}\r\n            testMode={testMode}\r\n            priorityPlatform={priorityPlatform}\r\n          />\r\n        );\r\n      \r\n      case 'pin':\r\n        return (\r\n          <PinSetup \r\n            onComplete={handlePinSetupComplete}\r\n            userEmail={userData?.email}\r\n          />\r\n        );\r\n      \r\n      case 'training':\r\n        return (\r\n          <TrainingComponent \r\n            onComplete={handleTrainingComplete}\r\n            userEmail={userData?.email}\r\n            appName={webpageName}\r\n            connectedAccounts={userData?.connectedAccounts || []}\r\n            testMode={testMode}\r\n          />\r\n        );\r\n      \r\n      case 'dataRequest':\r\n        return (\r\n          <DataRequest \r\n            onComplete={handleDataRequestComplete}\r\n            userEmail={userData?.email}\r\n            requestData={requestData}\r\n            appName={webpageName}\r\n            autoFetch={autoFetch}\r\n            testMode={testMode}\r\n            appIcon={appIcon}\r\n            connectedAccounts={userData?.connectedAccounts || {}}\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return (\r\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\r\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\r\n            <p className=\"text-gray-600\">Loading...</p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Styling and button class based on visual type\r\n  const buttonClass = \r\n    `flex items-center justify-center font-bold rounded cursor-pointer ${\r\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\r\n    } bg-transparent OnairosConnect`;\r\n\r\n  const buttonStyle = {\r\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\r\n    backgroundColor: 'transparent',\r\n    color: textColor,\r\n    border: '1px solid transparent',\r\n  };\r\n\r\n  // Icon and text style based on the visualType\r\n  const logoStyle = {\r\n    width: '20px',\r\n    height: '20px',\r\n    marginRight: visualType === 'full' ? '12px' : '0',\r\n  };\r\n\r\n  const getText = () => {\r\n    switch (loginType) {\r\n      case 'signUp':\r\n        return 'Sign Up with Onairos';\r\n      case 'signOut':\r\n        return 'Sign Out of Onairos';\r\n      default:\r\n        return 'Sign In with Onairos';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={buttonClass}\r\n        onClick={openTerminal}\r\n        style={buttonStyle}\r\n      >\r\n        {(visualType === 'full' || visualType === 'icon') && (\r\n          <img\r\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n            alt=\"Onairos Logo\"\r\n            style={logoStyle}\r\n          />\r\n        )}\r\n        {visualType !== 'icon' && (\r\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\r\n            {getText()}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Modal with New Design */}\r\n      {showOverlay && (\r\n        <>\r\n          {currentFlow === 'email' ? (\r\n            // Special case for email - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={handleCloseOverlay}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Email Content */}\r\n                <div className=\"h-[min(85vh,700px)]\">\r\n                  <EmailAuth \r\n                    onSuccess={handleEmailAuthSuccess}\r\n                    testMode={testMode}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'onboarding' ? (\r\n            // Special case for onboarding - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('email')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Onboarding Content */}\r\n                <UniversalOnboarding \r\n                  onComplete={handleOnboardingComplete}\r\n                  onBack={() => setCurrentFlow('email')}\r\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n                  appName={webpageName}\r\n                  username={userData?.email || userData?.username}\r\n                  testMode={testMode}\r\n                  priorityPlatform={priorityPlatform}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'dataRequest' ? (\r\n            // Special case for dataRequest - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('loading')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* DataRequest Content */}\r\n                <DataRequest \r\n                  onComplete={handleDataRequestComplete}\r\n                  userEmail={userData?.email}\r\n                  requestData={requestData}\r\n                  appName={webpageName}\r\n                  autoFetch={autoFetch}\r\n                  testMode={testMode}\r\n                  appIcon={appIcon}\r\n                  connectedAccounts={userData?.connectedAccounts || {}}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'pin' ? (\r\n            // Special case for pin - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('onboarding')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* PinSetup Content - Must take remaining height */}\r\n                <div className=\"flex-1 min-h-0\">\r\n                  <PinSetup \r\n                    onComplete={handlePinSetupComplete}\r\n                    onBack={() => setCurrentFlow('onboarding')}\r\n                    userEmail={userData?.email}\r\n                  />\r\n                </div>\r\n            </div>\r\n          </div>\r\n          ) : currentFlow === 'loading' ? (\r\n            // Loading screen\r\n            <LoadingScreen onComplete={handleLoadingComplete} />\r\n        ) : (\r\n            // All other flows use PageLayout wrapper\r\n          <ModalPageLayout\r\n            visible={showOverlay}\r\n            onClose={handleCloseOverlay}\r\n              showBackButton={currentFlow === 'training'}\r\n            onBack={() => {\r\n                if (currentFlow === 'email') setCurrentFlow('welcome');\r\n              if (currentFlow === 'onboarding') setCurrentFlow('email');\r\n              if (currentFlow === 'pin') setCurrentFlow('onboarding'); \r\n              if (currentFlow === 'training') setCurrentFlow('pin');\r\n            }}\r\n            title={getFlowTitle()}\r\n            subtitle={getFlowSubtitle()}\r\n            icon={getFlowIcon()}\r\n            centerContent={true}\r\n          >\r\n            {renderCurrentFlow()}\r\n          </ModalPageLayout>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OnairosButton;","/**\r\n * Enhanced User Data Formatter for onComplete Callback\r\n * Provides structured, readable formatting of Onairos user data\r\n */\r\n\r\n/**\r\n * Formats user data for better readability in onComplete callback\r\n * @param {Object} result - The complete result object from data request\r\n * @returns {Object} Enhanced result with formatted user data display\r\n */\r\nexport function formatUserDataForDisplay(result) {\r\n  if (!result) return result;\r\n\r\n  const formatted = { ...result };\r\n  \r\n  // Create a structured summary of the user data\r\n  const userDataSummary = {\r\n    // Basic request information\r\n    requestInfo: {\r\n      timestamp: result.timestamp || new Date().toISOString(),\r\n      appName: result.appName || 'Unknown App',\r\n      userHash: result.userHash || 'Unknown User',\r\n      testMode: result.testMode || false,\r\n      dataTypesRequested: result.approvedData || []\r\n    },\r\n    \r\n    // User authentication and profile data\r\n    userProfile: {\r\n      email: result.userData?.email || 'Not provided',\r\n      userType: result.userData?.userType || 'Unknown',\r\n      onboardingComplete: result.userData?.onboardingComplete || false,\r\n      pinCreated: result.userData?.pinCreated || false,\r\n      trainingComplete: result.userData?.trainingComplete || false,\r\n      modelReady: result.userData?.modelReady || false\r\n    },\r\n    \r\n    // Connected platforms/accounts\r\n    connectedAccounts: formatConnectedAccounts(result.userData?.connectedAccounts || []),\r\n    \r\n    // API response data (personality, preferences, etc.)\r\n    aiData: formatAIResponseData(result.apiResponse),\r\n    \r\n    // Success status and any errors\r\n    status: {\r\n      success: result.success || false,\r\n      hasApiResponse: !!result.apiResponse,\r\n      hasErrors: !!result.error || !!result.apiError\r\n    }\r\n  };\r\n\r\n  // Add the formatted summary to the result\r\n  formatted.userDataSummary = userDataSummary;\r\n  \r\n  // Create a pretty-printed version for console logging\r\n  formatted.prettyPrint = createPrettyPrintVersion(userDataSummary);\r\n  \r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Formats connected accounts data\r\n * @param {Array} accounts - Array of connected account objects\r\n * @returns {Object} Formatted accounts summary\r\n */\r\nfunction formatConnectedAccounts(accounts) {\r\n  if (!Array.isArray(accounts) || accounts.length === 0) {\r\n    return {\r\n      count: 0,\r\n      platforms: [],\r\n      summary: 'No connected accounts'\r\n    };\r\n  }\r\n\r\n  return {\r\n    count: accounts.length,\r\n    platforms: accounts.map(account => ({\r\n      name: account.platform || account.name || 'Unknown Platform',\r\n      status: account.status || 'Unknown',\r\n      connectedAt: account.connectedAt || 'Unknown date',\r\n      hasData: account.hasData || false\r\n    })),\r\n    summary: `${accounts.length} platform(s) connected: ${accounts.map(a => a.platform || a.name).join(', ')}`\r\n  };\r\n}\r\n\r\n/**\r\n * Formats AI response data (personality scores, traits, etc.)\r\n * @param {Object} apiResponse - The API response containing AI data\r\n * @returns {Object} Formatted AI data summary\r\n */\r\nfunction formatAIResponseData(apiResponse) {\r\n  if (!apiResponse) {\r\n    return {\r\n      available: false,\r\n      summary: 'No AI data available'\r\n    };\r\n  }\r\n\r\n  const aiData = {\r\n    available: true,\r\n    dataTypes: []\r\n  };\r\n\r\n  // Check for personality data\r\n  if (apiResponse.InferenceResult?.traits || apiResponse.personalityDict || apiResponse.traits) {\r\n    const personalityData = {\r\n      type: 'personality',\r\n      available: true\r\n    };\r\n\r\n    // If we have dictionary format, use it for better readability\r\n    if (apiResponse.personalityDict) {\r\n      personalityData.data = apiResponse.personalityDict;\r\n      personalityData.summary = `Personality analysis with ${Object.keys(apiResponse.personalityDict).length} traits`;\r\n    } else if (apiResponse.InferenceResult?.traits) {\r\n      personalityData.data = apiResponse.InferenceResult.traits;\r\n      personalityData.summary = `Personality scores array with ${apiResponse.InferenceResult.traits.length} values`;\r\n    } else if (apiResponse.traits) {\r\n      personalityData.data = apiResponse.traits;\r\n      personalityData.summary = `Personality traits with ${Array.isArray(apiResponse.traits) ? apiResponse.traits.length : Object.keys(apiResponse.traits).length} items`;\r\n    }\r\n\r\n    aiData.dataTypes.push(personalityData);\r\n  }\r\n\r\n  // Check for preferences/traits data\r\n  if (apiResponse.traitResult || apiResponse.traitDict) {\r\n    const preferencesData = {\r\n      type: 'preferences',\r\n      available: true\r\n    };\r\n\r\n    if (apiResponse.traitDict) {\r\n      preferencesData.data = apiResponse.traitDict;\r\n      preferencesData.summary = `Preferences analysis with ${Object.keys(apiResponse.traitDict).length} categories`;\r\n    } else if (apiResponse.traitResult) {\r\n      preferencesData.data = apiResponse.traitResult;\r\n      preferencesData.summary = `Trait results with ${Array.isArray(apiResponse.traitResult) ? apiResponse.traitResult.length : Object.keys(apiResponse.traitResult).length} items`;\r\n    }\r\n\r\n    aiData.dataTypes.push(preferencesData);\r\n  }\r\n\r\n  // Check for basic info/output\r\n  if (apiResponse.InferenceResult?.output || apiResponse.output) {\r\n    aiData.dataTypes.push({\r\n      type: 'basic_info',\r\n      available: true,\r\n      data: apiResponse.InferenceResult?.output || apiResponse.output,\r\n      summary: 'Basic user information and insights'\r\n    });\r\n  }\r\n\r\n  // Create overall summary\r\n  aiData.summary = aiData.dataTypes.length > 0 \r\n    ? `AI analysis complete with ${aiData.dataTypes.length} data type(s): ${aiData.dataTypes.map(d => d.type).join(', ')}`\r\n    : 'AI data structure present but no recognized data types found';\r\n\r\n  return aiData;\r\n}\r\n\r\n/**\r\n * Creates a pretty-printed version for console logging\r\n * @param {Object} userDataSummary - The formatted user data summary\r\n * @returns {string} Pretty-printed string for console output\r\n */\r\nfunction createPrettyPrintVersion(userDataSummary) {\r\n  const lines = [];\r\n  \r\n  lines.push('🎉 ONAIROS USER DATA SUMMARY');\r\n  lines.push('=' .repeat(50));\r\n  \r\n  // Request Info\r\n  lines.push('\\n📋 REQUEST INFORMATION:');\r\n  lines.push(`   App: ${userDataSummary.requestInfo.appName}`);\r\n  lines.push(`   User: ${userDataSummary.requestInfo.userHash}`);\r\n  lines.push(`   Mode: ${userDataSummary.requestInfo.testMode ? 'Test' : 'Production'}`);\r\n  lines.push(`   Data Types: ${userDataSummary.requestInfo.dataTypesRequested.join(', ') || 'None'}`);\r\n  lines.push(`   Timestamp: ${new Date(userDataSummary.requestInfo.timestamp).toLocaleString()}`);\r\n  \r\n  // User Profile\r\n  lines.push('\\n👤 USER PROFILE:');\r\n  lines.push(`   Email: ${userDataSummary.userProfile.email}`);\r\n  lines.push(`   Type: ${userDataSummary.userProfile.userType}`);\r\n  lines.push(`   Onboarding: ${userDataSummary.userProfile.onboardingComplete ? '✅' : '❌'}`);\r\n  lines.push(`   PIN Setup: ${userDataSummary.userProfile.pinCreated ? '✅' : '❌'}`);\r\n  lines.push(`   Training: ${userDataSummary.userProfile.trainingComplete ? '✅' : '❌'}`);\r\n  lines.push(`   Model Ready: ${userDataSummary.userProfile.modelReady ? '✅' : '❌'}`);\r\n  \r\n  // Connected Accounts\r\n  lines.push('\\n🔗 CONNECTED ACCOUNTS:');\r\n  lines.push(`   ${userDataSummary.connectedAccounts.summary}`);\r\n  if (userDataSummary.connectedAccounts.platforms.length > 0) {\r\n    userDataSummary.connectedAccounts.platforms.forEach(platform => {\r\n      lines.push(`   • ${platform.name}: ${platform.status} ${platform.hasData ? '(has data)' : '(no data)'}`);\r\n    });\r\n  }\r\n  \r\n  // AI Data\r\n  lines.push('\\n🤖 AI ANALYSIS DATA:');\r\n  lines.push(`   ${userDataSummary.aiData.summary}`);\r\n  if (userDataSummary.aiData.dataTypes.length > 0) {\r\n    userDataSummary.aiData.dataTypes.forEach(dataType => {\r\n      lines.push(`   • ${dataType.type.toUpperCase()}: ${dataType.summary}`);\r\n    });\r\n  }\r\n  \r\n  // Status\r\n  lines.push('\\n✅ STATUS:');\r\n  lines.push(`   Success: ${userDataSummary.status.success ? '✅' : '❌'}`);\r\n  lines.push(`   API Response: ${userDataSummary.status.hasApiResponse ? '✅' : '❌'}`);\r\n  lines.push(`   Errors: ${userDataSummary.status.hasErrors ? '❌ Yes' : '✅ None'}`);\r\n  \r\n  lines.push('\\n' + '=' .repeat(50));\r\n  \r\n  return lines.join('\\n');\r\n}\r\n\r\n/**\r\n * Console logging helper that prints formatted user data\r\n * @param {Object} result - The result object from onComplete\r\n */\r\nexport function logFormattedUserData(result) {\r\n  const formatted = formatUserDataForDisplay(result);\r\n  \r\n  console.log('\\n' + formatted.prettyPrint + '\\n');\r\n  \r\n  // Also log the structured data for programmatic access\r\n  console.log('📊 Structured User Data Summary:', formatted.userDataSummary);\r\n  \r\n  return formatted;\r\n}\r\n\r\nexport default {\r\n  formatUserDataForDisplay,\r\n  logFormattedUserData\r\n};\r\n"],"names":["WelcomeScreen","_ref","onContinue","onClose","useEffect","script","document","createElement","src","async","head","appendChild","existingScript","querySelector","removeChild","React","className","style","height","alt","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","size","children","concat","width","borderRadius","fontSize","color","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","props","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","setTimeout","firstInput","handleEmailSubmit","e","preventDefault","test","validateEmail","console","log","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleGoogleAuth","_localStorage$getItem","sdkConfig","baseUrl","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","toString","popup","open","checkInterval","setInterval","closed","clearInterval","connectedAccounts","Google","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","type","value","onChange","target","placeholder","required","trim","lineHeight","Array","from","_","index","key","maxLength","newCode","join","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","PrimaryButton","flex","minHeight","Check","detectOnairosExtension","Promise","resolve","onairos","isOnairos","resolved","handleOnairosReady","addEventListener","once","removeEventListener","openExtensionInstallPage","source","arguments","undefined","storeUrl","warn","href","LLM_URLS","chatgpt","claude","gemini","grok","getUserInfoFromStorage","_userData","_userData2","_userData3","_userData4","_userData5","_userData6","_userData7","_userData8","_userData9","_userData0","_userData1","_userData10","_userData11","_userData12","_userData13","userDataStr","legacyToken","userDataSDK","userData","parse","userInfo","userId","sessionToken","onboardingComplete","pinCreated","lastLogin","extractedAt","platform","onInstallClick","platformName","platformUrl","rel","handleInstallClick","handleDirectVisit","onConnectionChange","showInstallPrompt","setShowInstallPrompt","currentPlatform","setCurrentPlatform","isConnecting","setIsConnecting","handleLLMConnect","useCallback","onError","storedUserInfo","connectorVersion","timestamp","onExtensionMissing","url","URL","searchParams","set","encodeURIComponent","finalUrl","openLLMWithExtensionCheck","missingPlatform","handleLLMDisconnect","handleCloseInstallPrompt","handleExtensionInstall","checkExtensionStatus","contextValue","connectToLLM","disconnectFromLLM","map","child","llmConnectorManager","ExtensionInstallPrompt","chatgptIcon","claudeIcon","geminiIcon","grokIcon","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","fadeSlideInKeyframes","UniversalOnboarding","_JSON$parse2","onComplete","lottieRef","useRef","lastFrameRef","rafRef","setConnectedAccounts","connectingPlatform","setConnectingPlatform","selected","setSelected","currentPage","setCurrentPage","touchStartX","touchDeltaX","vh","setVh","innerHeight","onResize","personaSide","Math","min","SLOT","max","floor","ACTIVE_SCALE","ICONS_TOP_OFFSET","round","igGradId","useId","Brand","ChatGPT","objectFit","Claude","Gemini","Grok","Instagram","id","cx","cy","r","offset","stopColor","YouTube","Reddit","LinkedIn","x","y","rx","Twitter","aiLinks","descriptions","allPlatforms","name","connector","icon","directLink","platforms","page","slice","p","removeItem","s","handleSwitch","find","platformKey","connectedPlatform","errorPlatform","plat","_JSON$parse","res","session","candidates","youtube","linkedin","reddit","pinterest","instagram","github","facebook","gmail","oauthUrl","k","touched","it","hostname","close","_unused","_unused2","_unused3","_unused4","connectToPlatform","connectedCount","Object","values","filter","Boolean","current","totalFrames","personaAnim","progress","start","startTs","performance","t","eased","frame","goToAndStop","requestAnimationFrame","cancelAnimationFrame","LLMConnectorManager","connected","charAt","toUpperCase","displayName","maxHeight","transform","zIndex","pointerEvents","Lottie","animationData","autoplay","loop","marginTop","onTouchStart","touches","clientX","onTouchMove","onTouchEnd","dx","gridAutoFlow","gridTemplateColumns","columnGap","justifyItems","paddingInline","idx","on","isSel","shift","animation","title","transformOrigin","n","FOOTER_H","role","paddingBottom","entries","v","_ref3","totalConnections","xmlns","PinSetup","onBack","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","handleSubmit","dataTypes","description","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","iconName","iconProps","getIconComponent","handleToggle","fillRule","clipRule","autoFetch","appName","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","prev","selectedCount","userHash","hash","str","i","charCodeAt","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","status","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","setProgress","isComplete","setIsComplete","steps","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","completionDelay","trainingComplete","simulatedTraining","clearTimeout","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","aspectRatio","rainAnim","repeat","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","isArray","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","padding","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","willChange","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","appIcon","enableTraining","priorityPlatform","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","setUserData","checkExistingSession","savedUser","user","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","logFormattedUserData","require","enhancedResult","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","formatUserDataForDisplay","_result$userData","_result$userData2","_result$userData3","_result$userData4","_result$userData5","_result$userData6","_result$userData7","userDataSummary","requestInfo","dataTypesRequested","userProfile","userType","modelReady","formatConnectedAccounts","aiData","formatAIResponseData","hasApiResponse","hasErrors","prettyPrint","lines","toLocaleString","summary","hasData","createPrettyPrintVersion","accounts","count","account","connectedAt","a","_apiResponse$Inferenc3","available","personalityData","keys","preferencesData","_apiResponse$Inferenc4","output"],"sourceRoot":""}