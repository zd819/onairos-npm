{"version":3,"file":"onairos.bundle.js","mappings":"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","sources":["webpack://Onairos/webpack/universalModuleDefinition","webpack://Onairos/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack://Onairos/webpack/bootstrap","webpack://Onairos/webpack/runtime/compat get default export","webpack://Onairos/webpack/runtime/define property getters","webpack://Onairos/webpack/runtime/hasOwnProperty shorthand","webpack://Onairos/webpack/runtime/make namespace object","webpack://Onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/icons/mail.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/icons/arrow-right.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://Onairos/./src/components/EmailAuth.js","webpack://Onairos/./src/components/connectors/YoutubeConnector.js","webpack://Onairos/./src/components/connectors/LinkedInConnector.js","webpack://Onairos/./src/components/connectors/InstagramConnector.js","webpack://Onairos/./src/components/connectors/PinterestConnector.js","webpack://Onairos/./src/components/connectors/RedditConnector.js","webpack://Onairos/./src/components/connectors/GmailConnector.js","webpack://Onairos/./src/components/UniversalOnboarding.js","webpack://Onairos/./src/components/PinSetup.js","webpack://Onairos/./src/components/DataRequest.js","webpack://Onairos/./src/onairosButton.jsx","webpack://Onairos/./src/onairos.jsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Onairos\", [\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Onairos\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Onairos\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__639__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__639__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }],\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\n];\nconst Mail = createLucideIcon(\"mail\", __iconNode);\n\nexport { __iconNode, Mail as default };\n//# sourceMappingURL=mail.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","import React, { useState } from 'react';\r\nimport { Mail, ArrowRight, Check } from 'lucide-react';\r\n\r\nexport default function EmailAuth({ onSuccess, testMode = true }) {\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!validateEmail(email)) {\r\n      setError('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (testMode) {\r\n        // In test mode, skip email sending and go directly to code step\r\n        setTimeout(() => {\r\n          setStep('code');\r\n          setIsLoading(false);\r\n        }, 1000);\r\n      } else {\r\n        // In production, send actual email\r\n        const response = await fetch('https://api2.onairos.uk/auth/send-code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to send verification code');\r\n        }\r\n\r\n        setStep('code');\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCodeSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (testMode && code === '123456') {\r\n      // Test mode - accept 123456 as valid code\r\n      setStep('success');\r\n      setTimeout(() => {\r\n        onSuccess({ email, verified: true });\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    if (!testMode) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch('https://api2.onairos.uk/auth/verify-code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, code }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Invalid verification code');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setStep('success');\r\n        setTimeout(() => {\r\n          onSuccess({ email, verified: true, token: data.token });\r\n        }, 1000);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      setError('Invalid code. Use 123456 for testing.');\r\n    }\r\n  };\r\n\r\n  const renderEmailStep = () => (\r\n    <div className=\"flex flex-col items-center space-y-6 w-full\">\r\n      <div className=\"flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full\">\r\n        <Mail className=\"w-8 h-8 text-blue-600\" />\r\n      </div>\r\n      \r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Sign in to Onairos</h2>\r\n        <p className=\"text-gray-600\">Enter your email address to continue</p>\r\n        {testMode && (\r\n          <p className=\"text-sm text-blue-600 mt-2\">Test mode: Any valid email will work</p>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleEmailSubmit} className=\"w-full max-w-md space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {error && (\r\n          <p className=\"text-sm text-red-600\">{error}</p>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className=\"w-full py-3 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\r\n        >\r\n          {isLoading ? (\r\n            <div className=\"animate-spin h-5 w-5 border-2 border-white rounded-full border-t-transparent\"></div>\r\n          ) : (\r\n            <>\r\n              Continue\r\n              <ArrowRight className=\"ml-2 w-4 h-4\" />\r\n            </>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const renderCodeStep = () => (\r\n    <div className=\"flex flex-col items-center space-y-6 w-full\">\r\n      <div className=\"flex items-center justify-center w-16 h-16 bg-green-100 rounded-full\">\r\n        <Mail className=\"w-8 h-8 text-green-600\" />\r\n      </div>\r\n      \r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Check your email</h2>\r\n        <p className=\"text-gray-600\">We sent a verification code to</p>\r\n        <p className=\"text-gray-900 font-medium\">{email}</p>\r\n        {testMode && (\r\n          <p className=\"text-sm text-blue-600 mt-2\">Test mode: Use code 123456</p>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleCodeSubmit} className=\"w-full max-w-md space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"code\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Verification code\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"code\"\r\n            value={code}\r\n            onChange={(e) => setCode(e.target.value)}\r\n            placeholder=\"Enter 6-digit code\"\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none text-center text-lg tracking-widest\"\r\n            maxLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {error && (\r\n          <p className=\"text-sm text-red-600\">{error}</p>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className=\"w-full py-3 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\r\n        >\r\n          {isLoading ? (\r\n            <div className=\"animate-spin h-5 w-5 border-2 border-white rounded-full border-t-transparent\"></div>\r\n          ) : (\r\n            'Verify Code'\r\n          )}\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setStep('email')}\r\n          className=\"w-full py-2 px-4 text-gray-600 hover:text-gray-800\"\r\n        >\r\n          Use a different email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const renderSuccessStep = () => (\r\n    <div className=\"flex flex-col items-center space-y-6 w-full\">\r\n      <div className=\"flex items-center justify-center w-16 h-16 bg-green-100 rounded-full\">\r\n        <Check className=\"w-8 h-8 text-green-600\" />\r\n      </div>\r\n      \r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Email verified!</h2>\r\n        <p className=\"text-gray-600\">Setting up your account...</p>\r\n      </div>\r\n\r\n      <div className=\"w-8 h-8\">\r\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center space-y-6 p-6 w-full\">\r\n      {step === 'email' && renderEmailStep()}\r\n      {step === 'code' && renderCodeStep()}\r\n      {step === 'success' && renderSuccessStep()}\r\n    </div>\r\n  );\r\n} ","import React, { Component } from 'react';\r\n\r\nclass YoutubeConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.youtubeConnect = this.youtubeConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('YouTube', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    // Call UpdateConnections API to remove connection\r\n    this.updateConnections('Remove', 'Youtube').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('YouTube', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing YouTube connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async youtubeConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/youtube/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.youtubeURL) {\r\n        // Open OAuth URL in current window\r\n        window.location.href = result.youtubeURL;\r\n      } else {\r\n        console.error('No YouTube URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('YouTube connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your YouTube Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your YouTube Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your YouTube:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Account Info</li>\r\n                  <li>Liked and Watched Videos</li>\r\n                  <li>Subscribed Channels and Playlist Videos</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/compliance-google-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos\r\n                </a>{' '}\r\n                complies with{' '}\r\n                <a href=\"https://policies.google.com/privacy\" className=\"text-blue-600 hover:underline\">\r\n                  Google API Services User Data Policy\r\n                </a>\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.youtubeConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YoutubeConnector; ","import React, { Component } from 'react';\r\n\r\nclass LinkedInConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.linkedinConnect = this.linkedinConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('LinkedIn', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    this.updateConnections('Remove', 'LinkedIn').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('LinkedIn', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing LinkedIn connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async linkedinConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/linkedin/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.linkedinURL) {\r\n        window.location.href = result.linkedinURL;\r\n      } else {\r\n        console.error('No LinkedIn URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('LinkedIn connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your LinkedIn Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your LinkedIn Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your LinkedIn:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Profile Information</li>\r\n                  <li>Professional Experience</li>\r\n                  <li>Network Connections</li>\r\n                  <li>Posts and Activity</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/privacy-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos Privacy Policy\r\n                </a>{' '}\r\n                - Your professional data is handled with the highest security standards.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.linkedinConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LinkedInConnector; ","import React, { Component } from 'react';\r\n\r\nclass InstagramConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.instagramConnect = this.instagramConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('Instagram', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    this.updateConnections('Remove', 'Instagram').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('Instagram', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing Instagram connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async instagramConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/instagram/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.instagramURL) {\r\n        window.location.href = result.instagramURL;\r\n      } else {\r\n        console.error('No Instagram URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('Instagram connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your Instagram Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your Instagram Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your Instagram:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Profile Information</li>\r\n                  <li>Posts and Stories</li>\r\n                  <li>Liked Content</li>\r\n                  <li>Following and Followers</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/compliance-meta-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos\r\n                </a>{' '}\r\n                complies with{' '}\r\n                <a href=\"https://developers.facebook.com/policy\" className=\"text-blue-600 hover:underline\">\r\n                  Meta Platform Policy\r\n                </a>\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.instagramConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InstagramConnector; ","import React, { Component } from 'react';\r\n\r\nclass PinterestConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.pinterestConnect = this.pinterestConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('Pinterest', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    this.updateConnections('Remove', 'Pinterest').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('Pinterest', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing Pinterest connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async pinterestConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/pinterest/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.pinterestURL) {\r\n        window.location.href = result.pinterestURL;\r\n      } else {\r\n        console.error('No Pinterest URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('Pinterest connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your Pinterest Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your Pinterest Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your Pinterest:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Profile Information</li>\r\n                  <li>Boards and Pins</li>\r\n                  <li>Saved and Liked Pins</li>\r\n                  <li>Following and Followers</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/privacy-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos Privacy Policy\r\n                </a>{' '}\r\n                - Your creative interests and preferences are securely processed.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.pinterestConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PinterestConnector; ","import React, { Component } from 'react';\r\n\r\nclass RedditConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.redditConnect = this.redditConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('Reddit', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    this.updateConnections('Remove', 'Reddit').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('Reddit', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing Reddit connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async redditConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/reddit/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.redditURL) {\r\n        window.location.href = result.redditURL;\r\n      } else {\r\n        console.error('No Reddit URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('Reddit connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your Reddit Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your Reddit Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your Reddit:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Profile Information</li>\r\n                  <li>Posts and Comments</li>\r\n                  <li>Upvoted and Saved Content</li>\r\n                  <li>Subscribed Subreddits</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/privacy-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos Privacy Policy\r\n                </a>{' '}\r\n                - Your Reddit activity helps us understand your interests and preferences.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.redditConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedditConnector; ","import React, { Component } from 'react';\r\n\r\nclass GmailConnector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      open: false,\r\n      isConnecting: false,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.gmailConnect = this.gmailConnect.bind(this);\r\n    this.setConnected = this.setConnected.bind(this);\r\n    this.setDisconnected = this.setDisconnected.bind(this);\r\n  }\r\n\r\n  setConnected() {\r\n    this.setState({ connected: true });\r\n    if (this.props.onConnectionChange) {\r\n      this.props.onConnectionChange('Gmail', true);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  setDisconnected() {\r\n    this.updateConnections('Remove', 'Gmail').then(() => {\r\n      this.setState({ connected: false });\r\n      if (this.props.onConnectionChange) {\r\n        this.props.onConnectionChange('Gmail', false);\r\n      }\r\n      this.handleClose();\r\n    }).catch((error) => {\r\n      console.error('Error removing Gmail connection:', error);\r\n    });\r\n  }\r\n\r\n  async updateConnections(updateType, newConnection) {\r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n      updateType,\r\n      newConnection\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/connections/update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('UpdateConnections error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  async gmailConnect() {\r\n    this.setState({ isConnecting: true });\r\n    \r\n    const jsonData = {\r\n      session: {\r\n        username: localStorage.getItem(\"username\") || this.props.username\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api2.onairos.uk/gmail/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jsonData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.gmailURL) {\r\n        window.location.href = result.gmailURL;\r\n      } else {\r\n        console.error('No Gmail URL received');\r\n        this.setState({ isConnecting: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('Gmail connection error:', error);\r\n      this.setState({ isConnecting: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open = this.props.open || this.state.open } = this.props;\r\n    \r\n    if (!open) return null;\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n              Grant Onairos Access to your Gmail Account?\r\n            </h2>\r\n            \r\n            <div className=\"space-y-4 text-gray-700\">\r\n              <p>\r\n                Grant Permission to your Gmail Account, so we can build your Data Models.\r\n              </p>\r\n              \r\n              <div>\r\n                <p className=\"font-medium mb-2\">We will access your Gmail:</p>\r\n                <ul className=\"list-disc ml-6 space-y-1\">\r\n                  <li>Basic Account Information</li>\r\n                  <li>Email Metadata (subjects, dates, senders)</li>\r\n                  <li>Email Categories and Labels</li>\r\n                  <li>Communication Patterns</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\r\n                <p className=\"text-yellow-800 text-sm font-medium\">\r\n                  <strong>Note:</strong> We do NOT read the content of your emails. Only metadata is processed.\r\n                </p>\r\n              </div>\r\n              \r\n              <p>\r\n                We will delete all the data used once your Model is Created\r\n              </p>\r\n              \r\n              <p className=\"text-sm\">\r\n                <a href=\"https://onairos.uk/compliance-google-policy\" className=\"text-blue-600 hover:underline\">\r\n                  Onairos\r\n                </a>{' '}\r\n                complies with{' '}\r\n                <a href=\"https://policies.google.com/privacy\" className=\"text-blue-600 hover:underline\">\r\n                  Google API Services User Data Policy\r\n                </a>\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-3 mt-6\">\r\n              <button\r\n                onClick={this.handleClose}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n              >\r\n                Disagree\r\n              </button>\r\n              <button\r\n                onClick={this.gmailConnect}\r\n                disabled={this.state.isConnecting}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {this.state.isConnecting ? 'Connecting...' : 'Agree'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GmailConnector; ","import React, { useState, useEffect } from 'react';\r\nimport YoutubeConnector from './connectors/YoutubeConnector';\r\nimport LinkedInConnector from './connectors/LinkedInConnector';\r\nimport InstagramConnector from './connectors/InstagramConnector';\r\nimport PinterestConnector from './connectors/PinterestConnector';\r\nimport RedditConnector from './connectors/RedditConnector';\r\nimport GmailConnector from './connectors/GmailConnector';\r\n\r\nconst platforms = [\r\n  { name: 'YouTube', icon: '📺', color: 'bg-red-500', connector: 'youtube' },\r\n  { name: 'Reddit', icon: '🔥', color: 'bg-orange-500', connector: 'reddit' },\r\n  { name: 'Instagram', icon: '📷', color: 'bg-pink-500', connector: 'instagram' },\r\n  { name: 'Pinterest', icon: '📌', color: 'bg-red-600', connector: 'pinterest' },\r\n  { name: 'LinkedIn', icon: '💼', color: 'bg-blue-700', connector: 'linkedin' },\r\n  { name: 'Gmail', icon: '📧', color: 'bg-red-500', connector: 'gmail' }\r\n];\r\n\r\nexport default function UniversalOnboarding({ onComplete, appIcon, appName = 'App', username }) {\r\n  const [connectedAccounts, setConnectedAccounts] = useState({});\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [activeConnector, setActiveConnector] = useState(null);\r\n\r\n  const handleConnectionChange = (platformName, isConnected) => {\r\n    setConnectedAccounts(prev => ({\r\n      ...prev,\r\n      [platformName]: isConnected\r\n    }));\r\n    setActiveConnector(null);\r\n  };\r\n\r\n  const handleToggle = async (platformName, connectorType) => {\r\n    if (isConnecting) return;\r\n    \r\n    const isCurrentlyConnected = connectedAccounts[platformName];\r\n    \r\n    if (isCurrentlyConnected) {\r\n      // Disconnect - call the connector's disconnect method\r\n      setConnectedAccounts(prev => ({\r\n        ...prev,\r\n        [platformName]: false\r\n      }));\r\n    } else {\r\n      // Connect - open the OAuth dialog\r\n      setActiveConnector(connectorType);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    const connected = Object.entries(connectedAccounts)\r\n      .filter(([platform, isConnected]) => isConnected)\r\n      .map(([platform]) => platform);\r\n    \r\n    onComplete({\r\n      connectedAccounts: connected,\r\n      totalConnections: connected.length\r\n    });\r\n  };\r\n\r\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto bg-white rounded-lg shadow-xl overflow-hidden\" style={{ maxHeight: '90vh', height: 'auto' }}>\r\n      <div className=\"p-4 sm:p-6 overflow-y-auto\" style={{ maxHeight: 'calc(90vh - 4rem)' }}>\r\n        {/* Header with App Logo and Arrow to Onairos */}\r\n        <div className=\"flex items-center justify-center mb-4 sm:mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <img \r\n              src={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"} \r\n              alt={appName} \r\n              className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-lg\"\r\n            />\r\n            <div className=\"flex items-center text-gray-400\">\r\n              <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n              </svg>\r\n            </div>\r\n            <img \r\n              src=\"https://onairos.sirv.com/Images/OnairosBlack.png\" \r\n              alt=\"Onairos\" \r\n              className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center mb-4 sm:mb-6\">\r\n          <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 mb-2\">Connect Your Accounts</h2>\r\n          <p className=\"text-gray-600 text-xs sm:text-sm\">\r\n            Choose which accounts to connect for a personalized experience\r\n          </p>\r\n        </div>\r\n\r\n        {/* Privacy Notice */}\r\n        <div className=\"mb-4 sm:mb-6 p-2 sm:p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n          <p className=\"text-blue-800 text-xs sm:text-sm\">\r\n            🔒 Your data is never shared with anyone. It's only used to train your personal model and is stored securely.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Platform List - Vertical Layout with Toggles */}\r\n        <div className=\"space-y-2 sm:space-y-3 mb-4 sm:mb-6\">\r\n          {platforms.map((platform) => {\r\n            const isConnected = connectedAccounts[platform.name] || false;\r\n            \r\n            return (\r\n              <div \r\n                key={platform.name}\r\n                className=\"flex items-center justify-between p-3 sm:p-4 border rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`w-8 h-8 sm:w-10 sm:h-10 rounded-lg ${platform.color} flex items-center justify-center text-white text-base sm:text-lg`}>\r\n                    {platform.icon}\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-900 text-sm sm:text-base\">{platform.name}</h3>\r\n                    <p className=\"text-xs sm:text-sm text-gray-500\">\r\n                      {isConnected ? 'Connected' : 'Not connected'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Toggle Switch */}\r\n                <button\r\n                  onClick={() => handleToggle(platform.name, platform.connector)}\r\n                  disabled={isConnecting}\r\n                  className={`relative inline-flex h-5 sm:h-6 w-9 sm:w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\r\n                    isConnected ? 'bg-blue-600' : 'bg-gray-200'\r\n                  } ${isConnecting ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\r\n                >\r\n                  <span\r\n                    className={`inline-block h-3 sm:h-4 w-3 sm:w-4 transform rounded-full bg-white transition-transform ${\r\n                      isConnected ? 'translate-x-5 sm:translate-x-6' : 'translate-x-1'\r\n                    }`}\r\n                  />\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Connection Status */}\r\n        {connectedCount > 0 && (\r\n          <div className=\"mb-3 sm:mb-4 p-2 sm:p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n            <p className=\"text-green-800 text-xs sm:text-sm\">\r\n              ✅ {connectedCount} account{connectedCount > 1 ? 's' : ''} connected\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Continue Button */}\r\n        <button\r\n          onClick={handleContinue}\r\n          disabled={connectedCount === 0}\r\n          className={`w-full py-2 sm:py-3 px-4 rounded-lg font-semibold transition-colors text-sm sm:text-base ${\r\n            connectedCount > 0\r\n              ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n              : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n          }`}\r\n        >\r\n          Continue {connectedCount > 0 ? `with ${connectedCount} account${connectedCount > 1 ? 's' : ''}` : ''}\r\n        </button>\r\n\r\n        {/* Skip Option */}\r\n        <button\r\n          onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\r\n          className=\"w-full mt-2 py-2 text-gray-500 hover:text-gray-700 text-xs sm:text-sm\"\r\n        >\r\n          Skip for now\r\n        </button>\r\n      </div>\r\n\r\n      {/* OAuth Connector Dialogs */}\r\n      <YoutubeConnector \r\n        open={activeConnector === 'youtube'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n      <LinkedInConnector \r\n        open={activeConnector === 'linkedin'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n      <InstagramConnector \r\n        open={activeConnector === 'instagram'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n      <PinterestConnector \r\n        open={activeConnector === 'pinterest'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n      <RedditConnector \r\n        open={activeConnector === 'reddit'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n      <GmailConnector \r\n        open={activeConnector === 'gmail'}\r\n        onClose={() => setActiveConnector(null)}\r\n        onConnectionChange={handleConnectionChange}\r\n        username={username}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function PinSetup({ onComplete, userEmail }) {\r\n  const [pin, setPin] = useState('');\r\n  const [confirmPin, setConfirmPin] = useState('');\r\n  const [requirements, setRequirements] = useState({\r\n    length: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    number: false,\r\n    special: false\r\n  });\r\n\r\n  // Check PIN requirements\r\n  useEffect(() => {\r\n    setRequirements({\r\n      length: pin.length >= 6,\r\n      uppercase: /[A-Z]/.test(pin),\r\n      lowercase: /[a-z]/.test(pin),\r\n      number: /[0-9]/.test(pin),\r\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(pin)\r\n    });\r\n  }, [pin]);\r\n\r\n  const allRequirementsMet = Object.values(requirements).every(req => req);\r\n  const pinsMatch = pin === confirmPin && pin.length > 0;\r\n  const canSubmit = allRequirementsMet && pinsMatch;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (canSubmit) {\r\n      // In a real app, you would hash the PIN before storing\r\n      onComplete({\r\n        pin: pin, // This should be hashed in production\r\n        pinCreated: true,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-white p-6\">\r\n      <div className=\"text-center mb-6\">\r\n        <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-1a2 2 0 00-2-2H6a2 2 0 00-2 2v1a2 2 0 002 2zM12 7V3m0 4l3-3m-3 3L9 4\" />\r\n          </svg>\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Create Your Secure PIN</h2>\r\n        <p className=\"text-gray-600\">Your PIN will be used to securely access your data</p>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {/* PIN Input */}\r\n        <div>\r\n          <label htmlFor=\"pin\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Enter PIN\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"pin\"\r\n            value={pin}\r\n            onChange={(e) => setPin(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter your secure PIN\"\r\n          />\r\n        </div>\r\n\r\n        {/* Confirm PIN Input */}\r\n        <div>\r\n          <label htmlFor=\"confirmPin\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Confirm PIN\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPin\"\r\n            value={confirmPin}\r\n            onChange={(e) => setConfirmPin(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Confirm your PIN\"\r\n          />\r\n          {confirmPin && !pinsMatch && (\r\n            <p className=\"text-red-500 text-sm mt-1\">PINs do not match</p>\r\n          )}\r\n          {confirmPin && pinsMatch && (\r\n            <p className=\"text-green-500 text-sm mt-1\">✅ PINs match</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Requirements */}\r\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-gray-700 mb-3\">PIN Requirements:</h4>\r\n          <div className=\"space-y-2\">\r\n            {Object.entries({\r\n              length: 'At least 6 characters',\r\n              uppercase: 'One uppercase letter (A-Z)',\r\n              lowercase: 'One lowercase letter (a-z)',\r\n              number: 'One number (0-9)',\r\n              special: 'One special character (!@#$%^&*)'\r\n            }).map(([key, label]) => (\r\n              <div key={key} className=\"flex items-center\">\r\n                <div className={`w-4 h-4 rounded-full mr-2 flex items-center justify-center ${\r\n                  requirements[key] ? 'bg-green-500' : 'bg-gray-300'\r\n                }`}>\r\n                  {requirements[key] && (\r\n                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className={`text-sm ${requirements[key] ? 'text-green-600' : 'text-gray-600'}`}>\r\n                  {label}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!canSubmit}\r\n          className={`w-full py-3 px-4 rounded-lg font-semibold transition-colors ${\r\n            canSubmit\r\n              ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n              : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n          }`}\r\n        >\r\n          Create PIN\r\n        </button>\r\n      </form>\r\n\r\n      {userEmail && (\r\n        <p className=\"text-center text-sm text-gray-500 mt-4\">\r\n          Securing account for: <span className=\"font-medium\">{userEmail}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\n\r\nconst dataTypes = [\r\n  { \r\n    id: 'basic', \r\n    name: 'Basic Information', \r\n    description: 'Name, email, and essential account details', \r\n    icon: '👤',\r\n    required: true // Cannot be deselected\r\n  },\r\n  { \r\n    id: 'memories', \r\n    name: 'Memories', \r\n    description: 'Preferences and interests', \r\n    icon: '🧠',\r\n    required: false\r\n  }\r\n];\r\n\r\nexport default function DataRequest({ \r\n  onComplete, \r\n  userEmail, \r\n  appName = 'App', \r\n  autoFetch = true \r\n}) {\r\n  const [selectedData, setSelectedData] = useState({\r\n    basic: true, // Always selected by default\r\n    memories: false\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\r\n  const [apiResponse, setApiResponse] = useState(null);\r\n  const [apiError, setApiError] = useState(null);\r\n\r\n  const handleDataToggle = (dataId) => {\r\n    // Don't allow toggling basic information (it's required)\r\n    if (dataId === 'basic') return;\r\n    \r\n    setSelectedData(prev => ({\r\n      ...prev,\r\n      [dataId]: !prev[dataId]\r\n    }));\r\n  };\r\n\r\n  const generateUserHash = (email) => {\r\n    // Simple hash function for user identification\r\n    let hash = 0;\r\n    const str = email + Date.now().toString();\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n    return `user_${Math.abs(hash).toString(36)}`;\r\n  };\r\n\r\n  const makeApiCall = async (approvedData) => {\r\n    try {\r\n      setIsLoadingApi(true);\r\n      setApiError(null);\r\n      \r\n      const userHash = generateUserHash(userEmail);\r\n      \r\n      const response = await fetch('https://api2.onairos.uk/inferenceTest', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          approvedData,\r\n          userEmail,\r\n          userHash, // Add user hash for backend LLM SDK\r\n          appName,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API call failed with status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Ensure user hash is included in response\r\n      const responseWithHash = {\r\n        ...data,\r\n        userHash\r\n      };\r\n      \r\n      setApiResponse(responseWithHash);\r\n      return responseWithHash;\r\n    } catch (error) {\r\n      console.error('API call error:', error);\r\n      setApiError(error.message);\r\n      throw error;\r\n    } finally {\r\n      setIsLoadingApi(false);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    if (isSubmitting) return;\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      const approved = Object.entries(selectedData)\r\n        .filter(([_, isSelected]) => isSelected)\r\n        .map(([dataId]) => dataId);\r\n\r\n      const userHash = generateUserHash(userEmail);\r\n\r\n      const baseResult = {\r\n        approved: true,\r\n        dataTypes: approved,\r\n        timestamp: new Date().toISOString(),\r\n        userEmail: userEmail,\r\n        userHash: userHash, // Include user hash in response\r\n        appName: appName\r\n      };\r\n\r\n      let finalResult = baseResult;\r\n\r\n      // If autoFetch is enabled, make API call automatically\r\n      if (autoFetch) {\r\n        try {\r\n          const apiData = await makeApiCall(approved);\r\n          finalResult = {\r\n            ...baseResult,\r\n            apiResponse: apiData,\r\n            apiUrl: 'https://api2.onairos.uk/inferenceTest'\r\n          };\r\n        } catch (apiError) {\r\n          finalResult = {\r\n            ...baseResult,\r\n            apiError: apiError.message,\r\n            apiUrl: 'https://api2.onairos.uk/inferenceTest'\r\n          };\r\n        }\r\n      }\r\n\r\n      // Simulate a brief delay for better UX\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      onComplete(finalResult);\r\n    } catch (error) {\r\n      console.error('Error in handleApprove:', error);\r\n      setApiError('Failed to process request');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = () => {\r\n    onComplete({\r\n      approved: false,\r\n      dataTypes: [],\r\n      timestamp: new Date().toISOString(),\r\n      userEmail: userEmail,\r\n      userHash: generateUserHash(userEmail),\r\n      appName: appName\r\n    });\r\n  };\r\n\r\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto bg-white rounded-lg shadow-xl overflow-hidden\" style={{ maxHeight: '90vh', height: 'auto' }}>\r\n      <div className=\"p-4 sm:p-6 overflow-y-auto\" style={{ maxHeight: 'calc(90vh - 4rem)' }}>\r\n        {/* Header */}\r\n        <div className=\"text-center mb-4 sm:mb-6\">\r\n          <div className=\"w-12 h-12 sm:w-16 sm:h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-4\">\r\n            <svg className=\"w-6 h-6 sm:w-8 sm:h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n            </svg>\r\n          </div>\r\n          <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-2\">Data Access Request</h2>\r\n          <p className=\"text-gray-600 text-xs sm:text-sm\">\r\n            <span className=\"font-medium\">{appName}</span> would like to access some of your data.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Data Types Selection */}\r\n        <div className=\"space-y-2 sm:space-y-3 mb-4 sm:mb-6\">\r\n          {dataTypes.map((dataType) => {\r\n            const isSelected = selectedData[dataType.id] || false;\r\n            const isRequired = dataType.required;\r\n            \r\n            return (\r\n              <div \r\n                key={dataType.id}\r\n                className={`flex items-center justify-between p-3 sm:p-4 border rounded-lg transition-colors ${\r\n                  isRequired ? 'bg-blue-50 border-blue-200' : 'hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"text-xl sm:text-2xl\">\r\n                    {dataType.icon}\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-900 text-sm sm:text-base\">\r\n                      {dataType.name}\r\n                      {isRequired && <span className=\"text-blue-600 ml-1\">*</span>}\r\n                    </h3>\r\n                    <p className=\"text-xs sm:text-sm text-gray-500\">{dataType.description}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Toggle Switch or Required Badge */}\r\n                {isRequired ? (\r\n                  <div className=\"px-2 py-1 bg-blue-600 text-white text-xs rounded-full\">\r\n                    Required\r\n                  </div>\r\n                ) : (\r\n                  <button\r\n                    onClick={() => handleDataToggle(dataType.id)}\r\n                    className={`relative inline-flex h-5 sm:h-6 w-9 sm:w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\r\n                      isSelected ? 'bg-blue-600' : 'bg-gray-200'\r\n                    }`}\r\n                  >\r\n                    <span\r\n                      className={`inline-block h-3 sm:h-4 w-3 sm:w-4 transform rounded-full bg-white transition-transform ${\r\n                        isSelected ? 'translate-x-5 sm:translate-x-6' : 'translate-x-1'\r\n                      }`}\r\n                    />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Selection Summary */}\r\n        <div className=\"mb-3 sm:mb-4 p-2 sm:p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n          <p className=\"text-green-800 text-xs sm:text-sm\">\r\n            ✅ {selectedCount} data type{selectedCount > 1 ? 's' : ''} selected for sharing\r\n          </p>\r\n        </div>\r\n\r\n        {/* API Status */}\r\n        {isLoadingApi && (\r\n          <div className=\"mb-3 sm:mb-4 p-2 sm:p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n            <p className=\"text-blue-800 text-xs sm:text-sm\">🔄 Processing your data request...</p>\r\n          </div>\r\n        )}\r\n\r\n        {apiError && (\r\n          <div className=\"mb-3 sm:mb-4 p-2 sm:p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n            <p className=\"text-red-800 text-xs sm:text-sm\">❌ {apiError}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={handleReject}\r\n            disabled={isSubmitting}\r\n            className=\"flex-1 py-2 sm:py-3 px-4 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors disabled:opacity-50 text-sm sm:text-base\"\r\n          >\r\n            Deny\r\n          </button>\r\n          <button\r\n            onClick={handleApprove}\r\n            disabled={isSubmitting}\r\n            className=\"flex-1 py-2 sm:py-3 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 text-sm sm:text-base\"\r\n          >\r\n            {isSubmitting ? 'Processing...' : 'Approve'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useEffect, useState } from 'react';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.js';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true,\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('email'); // 'email' | 'onboarding' | 'pin' | 'dataRequest'\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, []);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('Email auth successful:', authData);\n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: false,\n      pinCreated: false\n    };\n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    setCurrentFlow('onboarding');\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request flow within the same overlay\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay\n    setShowOverlay(false);\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', requestResult);\n    if (onComplete) {\n      try {\n        onComplete(requestResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'email':\n        return (\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={true} // Set to false in production\n          />\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            appIcon={appIcon}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Full-Screen Overlay (Plaid/SendPay Style) */}\n      {showOverlay && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n          onClick={handleBackdropClick}\n        >\n          <div \n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden relative\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Close button */}\n            <button\n              onClick={handleCloseOverlay}\n              className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 z-10\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n\n            {/* Content */}\n            <div className=\"overflow-y-auto max-h-[90vh]\">\n              {renderCurrentFlow()}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","import React from 'react';\r\nimport { OnairosButton } from './onairosButton.jsx';\r\n\r\n// Configuration object for the Telegram SDK\r\n\r\nexport function Onairos(props) {\r\n  return (\r\n    <>\r\n    {/* <DeepLink/> */}\r\n      <OnairosButton {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Onairos;\r\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__639__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","startsWith","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","displayName","Mail","x","y","rx","ArrowRight","Check","EmailAuth","_ref","onSuccess","testMode","email","setEmail","useState","code","setCode","step","setStep","isLoading","setIsLoading","error","setError","handleEmailSubmit","async","e","preventDefault","test","validateEmail","setTimeout","fetch","method","headers","body","JSON","stringify","ok","Error","message","handleCodeSubmit","verified","response","data","json","token","React","onSubmit","htmlFor","type","id","onChange","target","placeholder","required","disabled","maxLength","onClick","YoutubeConnector","constructor","super","state","connected","open","isConnecting","handleClose","bind","handleOpen","youtubeConnect","setConnected","setDisconnected","setState","onConnectionChange","updateConnections","then","catch","console","updateType","newConnection","jsonData","session","username","localStorage","getItem","onClose","result","youtubeURL","window","location","href","render","LinkedInConnector","linkedinConnect","linkedinURL","InstagramConnector","instagramConnect","instagramURL","PinterestConnector","pinterestConnect","pinterestURL","RedditConnector","redditConnect","redditURL","GmailConnector","gmailConnect","gmailURL","platforms","name","icon","connector","UniversalOnboarding","onComplete","appIcon","appName","connectedAccounts","setConnectedAccounts","setIsConnecting","activeConnector","setActiveConnector","handleConnectionChange","platformName","isConnected","prev","_objectSpread","connectedCount","values","length","style","maxHeight","src","alt","platform","concat","connectorType","handleToggle","handleContinue","entries","_ref2","_ref3","totalConnections","PinSetup","userEmail","pin","setPin","confirmPin","setConfirmPin","requirements","setRequirements","uppercase","lowercase","number","special","useEffect","allRequirementsMet","every","req","pinsMatch","canSubmit","pinCreated","timestamp","Date","toISOString","label","dataTypes","description","DataRequest","autoFetch","selectedData","setSelectedData","basic","memories","isSubmitting","setIsSubmitting","isLoadingApi","setIsLoadingApi","apiResponse","setApiResponse","apiError","setApiError","generateUserHash","hash","str","now","toString","i","charCodeAt","Math","abs","selectedCount","dataType","isSelected","isRequired","dataId","handleReject","approved","userHash","_","baseResult","finalResult","apiData","approvedData","status","responseWithHash","makeApiCall","apiUrl","Promise","resolve","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","removeItem","handleCloseOverlay","handleEmailAuthSuccess","authData","log","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleDataRequestComplete","requestResult","lastDataRequest","buttonClass","buttonStyle","flexDirection","backgroundColor","border","logoStyle","marginRight","getText","currentTarget","stopPropagation","renderCurrentFlow","Onairos"],"sourceRoot":""}