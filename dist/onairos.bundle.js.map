{"version":3,"file":"onairos.bundle.js","mappings":"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","sources":["webpack://Onairos/webpack/universalModuleDefinition","webpack://Onairos/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack://Onairos/external umd {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"ReactDOM\",\"root\":\"ReactDOM\"}","webpack://Onairos/webpack/bootstrap","webpack://Onairos/webpack/runtime/compat get default export","webpack://Onairos/webpack/runtime/define property getters","webpack://Onairos/webpack/runtime/hasOwnProperty shorthand","webpack://Onairos/webpack/runtime/make namespace object","webpack://Onairos/./src/components/WelcomeScreen.jsx","webpack://Onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://Onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://Onairos/./src/theme/colors.js","webpack://Onairos/./src/components/ui/PrimaryButton.jsx","webpack://Onairos/./src/components/EmailAuth.js","webpack://Onairos/./src/components/UniversalOnboarding.jsx","webpack://Onairos/./src/components/PinSetup.js","webpack://Onairos/./src/components/DataRequest.js","webpack://Onairos/./src/components/TrainingComponent.jsx","webpack://Onairos/./src/utils/responseFormatter.js","webpack://Onairos/./src/components/ui/PageLayout.jsx","webpack://Onairos/./src/onairosButton.jsx","webpack://Onairos/./src/utils/overlayHandler.js","webpack://Onairos/./src/onairos.jsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Onairos\", [\"React\", \"ReactDOM\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Onairos\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"Onairos\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__156__, __WEBPACK_EXTERNAL_MODULE__318__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__156__;","module.exports = __WEBPACK_EXTERNAL_MODULE__318__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Header with close button */}\n      <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n        <button\n          onClick={onClose}\n          className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n        >\n          <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Avatar */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center\">\n            <div className=\"w-8 h-8 relative\">\n              {/* VR Headset Icon */}\n              <svg viewBox=\"0 0 32 32\" className=\"w-full h-full\">\n                <path\n                  d=\"M4 12c0-2.2 1.8-4 4-4h16c2.2 0 4 1.8 4 4v8c0 2.2-1.8 4-4 4h-4l-2-3h-4l-2 3H8c-2.2 0-4-1.8-4-4v-8z\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                />\n                <circle cx=\"10\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\n                <circle cx=\"22\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\n                <path d=\"M12 24c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, onBack, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'verify',\n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Header */}\n      <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n        <button\n          onClick={onBack}\n          className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n        >\n          <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Your AI persona is getting closer\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#4285F4\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"#34A853\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"#FBBC05\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"#EA4335\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full mb-10\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"text-left mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Use code 123456</p>\n        </div>\n      )}\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-4 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"w-full mb-6\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleCodeSubmit}\n          loading={isLoading}\n          disabled={isLoading || code.length !== 6}\n          testId=\"verify-code-button\"\n        />\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"w-full\">\n        <button\n          type=\"button\"\n          onClick={() => setStep('email')}\n          className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Use a different email\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\n\nconst platforms = [\n  { \n    name: 'Google', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n        <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n        <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n        <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n        <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'gmail',\n    description: \"We use your search, YouTube, and location signals to better understand your interests and routines.\"\n  },\n  { \n    name: 'Reddit', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#FF4500\">\n        <path d=\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\" />\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'reddit',\n    description: \"We use your search history to better understand your interests and routines.\"\n  },\n  { \n    name: 'Instagram', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n        <defs>\n          <radialGradient id=\"instagram-gradient\" cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FD5949\" />\n            <stop offset=\"50%\" stopColor=\"#D6249F\" />\n            <stop offset=\"100%\" stopColor=\"#285AEB\" />\n          </radialGradient>\n        </defs>\n        <path fill=\"url(#instagram-gradient)\" d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.073-1.689-.073-4.849 0-3.204.013-3.583.072-4.948.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'instagram',\n    description: \"We use your search history to better understand your interests and routines.\"\n  },\n  { \n    name: 'LinkedIn', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#0077B5\">\n        <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'linkedin',\n    description: \"We use your search history to better understand your interests and routines.\"\n  }\n];\n\n// Enhanced SDK configuration\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web', // web, mobile, desktop\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true\n};\n\n/**\n * UniversalOnboarding Component - Compact & Enhanced\n * Displays a streamlined onboarding screen for data connections\n */\nexport default function UniversalOnboarding({ onComplete, onBack, appIcon, appName = 'App' }) {\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [connectionErrors, setConnectionErrors] = useState({});\n  const [connectionHealth, setConnectionHealth] = useState({});\n  const [healthScore, setHealthScore] = useState(0);\n\n  // Mobile device detection\n  const isMobileDevice = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n           (window.innerWidth <= 768);\n  };\n\n  // Handle mobile OAuth return\n  useEffect(() => {\n    const handleOAuthReturn = () => {\n      const platform = localStorage.getItem('onairos_oauth_platform');\n      if (platform) {\n        console.log(`📱 OAuth return detected for: ${platform}`);\n        \n        // Clear OAuth state\n        localStorage.removeItem('onairos_oauth_platform');\n        localStorage.removeItem('onairos_oauth_return');\n        \n        // Mark as connected\n        setConnectedAccounts(prev => ({\n          ...prev,\n          [platform]: true\n        }));\n        \n        // Clear any errors\n        setConnectionErrors(prev => ({\n          ...prev,\n          [platform]: null\n        }));\n        \n        console.log(`✅ ${platform} marked as connected from OAuth return`);\n      }\n    };\n\n    handleOAuthReturn();\n  }, []);\n\n  const connectToPlatform = async (platformName) => {\n    console.log(`🚀 connectToPlatform called for: ${platformName}`);\n    \n    const platform = platforms.find(p => p.name === platformName);\n    if (!platform?.connector) {\n      console.error(`❌ No connector found for platform: ${platformName}`);\n      return false;\n    }\n\n    try {\n      setIsConnecting(true);\n      setConnectingPlatform(platformName);\n      \n      // Clear any previous errors\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n      \n      console.log(`🔗 Starting OAuth connection for ${platformName}...`);\n      \n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      // Enhanced authorize endpoint with SDK type\n      const authorizeUrl = `${sdkConfig.baseUrl}/${platform.connector}/authorize`;\n      \n      const response = await fetch(authorizeUrl, {\n        method: 'POST',\n        headers: {\n          'x-api-key': sdkConfig.apiKey,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session: {\n            username: username\n          }\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n             const responseData = await response.json();\n       console.log(`📋 ${platformName} OAuth response:`, responseData);\n       \n       // Check for platform-specific URL keys with multiple fallbacks\n       const platformUrlKeys = {\n         'youtube': ['youtubeURL', 'youtubeUrl', 'youtube_url'],\n         'linkedin': ['linkedinURL', 'linkedinUrl', 'linkedin_url'], \n         'reddit': ['redditURL', 'redditUrl', 'reddit_url'],\n         'pinterest': ['pinterestURL', 'pinterestUrl', 'pinterest_url'],\n         'instagram': ['instagramURL', 'instagramUrl', 'instagram_url'],\n         'github': ['githubURL', 'githubUrl', 'github_url'],\n         'facebook': ['facebookURL', 'facebookUrl', 'facebook_url'],\n         'gmail': ['gmailURL', 'gmailUrl', 'gmail_url']\n       };\n       \n       const possibleKeys = platformUrlKeys[platform.connector] || [\n         `${platform.connector}URL`,\n         `${platform.connector}Url`, \n         `${platform.connector}_url`,\n         'platformURL',\n         'authUrl', \n         'url'\n       ];\n       \n       let oauthUrl = null;\n       let usedKey = null;\n       \n       // Try each possible key\n       for (const key of possibleKeys) {\n         if (responseData[key]) {\n           oauthUrl = responseData[key];\n           usedKey = key;\n           break;\n         }\n       }\n       \n       if (!oauthUrl) {\n         console.error(`❌ No OAuth URL found for ${platformName}:`);\n         console.error(`Expected one of:`, possibleKeys);\n         console.error(`Response keys:`, Object.keys(responseData));\n         console.error(`Full response:`, responseData);\n         throw new Error(`No OAuth URL found. Backend should return one of: ${possibleKeys.join(', ')}`);\n       }\n       \n       console.log(`✅ Found OAuth URL for ${platformName} using key: ${usedKey}`);\n        \n      if (isMobileDevice()) {\n        // Mobile: Use redirect flow\n        localStorage.setItem('onairos_oauth_platform', platformName);\n        localStorage.setItem('onairos_oauth_return', window.location.href);\n        window.location.href = oauthUrl;\n        return true;\n      } else {\n        // Desktop: Use popup flow with enhanced monitoring\n        const popup = window.open(\n          oauthUrl,\n          `${platform.connector}_oauth`,\n          'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no'\n        );\n        \n        if (!popup) {\n          throw new Error('Popup blocked. Please allow popups and try again.');\n        }\n\n                 // Enhanced popup monitoring with onairos.uk detection\n         let hasNavigatedToOnairos = false;\n         const checkInterval = setInterval(() => {\n           try {\n             // Try to detect if popup has navigated to onairos.uk (indicates success)\n             if (popup.location && popup.location.hostname === 'onairos.uk') {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated to onairos.uk - treating as success`);\n               \n               // Close the popup since it shows \"not found\"\n               popup.close();\n               return; // Let the popup.closed check handle the rest\n             }\n           } catch (e) {\n             // Cross-origin error is expected when popup navigates to onairos.uk\n             // This actually indicates the OAuth likely succeeded\n             if (!hasNavigatedToOnairos) {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated (cross-origin) - likely to onairos.uk`);\n             }\n           }\n           \n           try {\n             // Check if popup is closed\n             if (popup.closed) {\n               clearInterval(checkInterval);\n               \n               // Check for success or error signals from callback page\n               const successFlag = localStorage.getItem(`onairos_${platformName}_success`);\n               const errorFlag = localStorage.getItem(`onairos_${platformName}_error`);\n               const timestamp = localStorage.getItem(`onairos_${platformName}_timestamp`);\n               \n               // Only process recent signals (within 30 seconds)\n               const isRecentSignal = timestamp && (Date.now() - parseInt(timestamp) < 30000);\n               \n               if (successFlag && isRecentSignal) {\n                 // Success flow from callback page\n                 console.log(`✅ ${platformName} OAuth completed successfully (callback page)`);\n                 localStorage.removeItem(`onairos_${platformName}_success`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else if (errorFlag && isRecentSignal) {\n                 // Error flow from callback page\n                 console.log(`❌ ${platformName} OAuth failed:`, errorFlag);\n                 localStorage.removeItem(`onairos_${platformName}_error`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: errorFlag\n                 }));\n                 \n               } else if (hasNavigatedToOnairos) {\n                 // Popup navigated to onairos.uk - assume success\n                 console.log(`✅ ${platformName} OAuth likely successful (navigated to onairos.uk)`);\n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else {\n                 // No signal and no onairos navigation - assume user cancelled\n                 console.log(`⚠️ ${platformName} OAuth cancelled or no response`);\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: 'Connection was cancelled'\n                 }));\n               }\n               \n               setIsConnecting(false);\n               setConnectingPlatform(null);\n             }\n           } catch (error) {\n             // Cross-origin error when popup navigates away - this is normal\n             // console.log(`🔄 Popup navigated away for ${platformName}`);\n           }\n         }, 1000);\n\n                 // Auto-close popup if it shows onairos.uk \"not found\" page after 10 seconds\n         setTimeout(() => {\n           try {\n             if (!popup.closed && popup.location && popup.location.hostname === 'onairos.uk') {\n               console.log(`🚪 Auto-closing ${platformName} popup showing onairos.uk (not found)`);\n               popup.close();\n             }\n           } catch (e) {\n             // Cross-origin error is expected - try to close anyway if it's been 10 seconds\n             if (!popup.closed && hasNavigatedToOnairos) {\n               console.log(`🚪 Auto-closing ${platformName} popup (cross-origin, likely onairos.uk)`);\n               popup.close();\n             }\n           }\n         }, 10000);\n\n         // Final timeout after 5 minutes\n         setTimeout(() => {\n           if (!popup.closed) {\n             popup.close();\n             clearInterval(checkInterval);\n             setConnectionErrors(prev => ({\n               ...prev,\n               [platformName]: 'Connection timeout'\n             }));\n             setIsConnecting(false);\n             setConnectingPlatform(null);\n           }\n         }, 300000);\n\n        return true;\n      }\n    } catch (error) {\n      console.error(`❌ Error connecting to ${platformName}:`, error);\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: error.message\n      }));\n      setIsConnecting(false);\n      setConnectingPlatform(null);\n      return false;\n    }\n  };\n\n  const handleToggle = async (platformName) => {\n    console.log(`🔥 TOGGLE CLICKED: ${platformName}`);\n    \n    if (isConnecting && connectingPlatform !== platformName) {\n      console.log(`⚠️ Already connecting to ${connectingPlatform}, ignoring click on ${platformName}`);\n      return;\n    }\n    \n    const isConnected = connectedAccounts[platformName];\n    \n    if (isConnected) {\n      // Disconnect\n      console.log(`🔌 Disconnecting from ${platformName}...`);\n      setConnectedAccounts(prev => ({\n        ...prev,\n        [platformName]: false\n      }));\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n    } else {\n      // Connect\n      await connectToPlatform(platformName);\n    }\n  };\n\n  const handleContinue = () => {\n    const connected = Object.entries(connectedAccounts)\n      .filter(([platform, isConnected]) => isConnected)\n      .map(([platform]) => platform);\n    \n    onComplete({\n      connectedAccounts: connected,\n      totalConnections: connected.length,\n      healthScore: healthScore,\n      connectionHealth: connectionHealth,\n      sdkVersion: '2.1.7',\n      enhancedFeatures: {\n        healthMonitoring: sdkConfig.enableHealthMonitoring,\n        autoRefresh: sdkConfig.enableAutoRefresh,\n        connectionValidation: sdkConfig.enableConnectionValidation\n      }\n    });\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">Connect app data</h1>\n          <p className=\"text-gray-600 text-base\">More connections, better personalization.</p>\n        </div>\n\n        <div className=\"mb-6 flex justify-center flex-shrink-0\">\n          <div className=\"w-32 h-32 rounded-3xl shadow-lg\" style={{\n            background: 'linear-gradient(135deg, #f97316 0%, #ec4899 50%, #8b5cf6 100%)'\n          }}></div>\n        </div>\n\n        {/* Scrollable platform list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-4 pb-4\">\n            {platforms.map((platform) => {\n              const isConnected = connectedAccounts[platform.name] || false;\n              const isCurrentlyConnecting = connectingPlatform === platform.name;\n              const hasError = connectionErrors[platform.name];\n              const isDisabled = isConnecting && !isCurrentlyConnecting;\n              \n              return (\n                <div\n                  key={platform.name}\n                  className=\"flex items-start gap-4 p-4 rounded-xl hover:bg-gray-50 transition-colors\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    border: \"none\",\n                    outline: \"none\",\n                  }}\n                  onClick={() => !isDisabled && handleToggle(platform.name)}\n                >\n                  <div className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center flex-shrink-0 border border-gray-100\">\n                    {isCurrentlyConnecting ? (\n                      <div className=\"animate-spin h-5 w-5 border-2 border-gray-400 rounded-full border-t-transparent\"></div>\n                    ) : (\n                      platform.icon\n                    )}\n                  </div>\n                  <div className=\"flex-1 min-w-0 pr-4\">\n                    <h3\n                      className=\"font-medium mb-1\"\n                      style={{\n                        backgroundColor: \"#ffffff !important\",\n                        color: \"#111827 !important\",\n                        border: \"none\",\n                        outline: \"none\",\n                      }}\n                    >\n                      {platform.name}\n                    </h3>\n                    <p\n                      className=\"text-sm leading-relaxed\"\n                      style={{\n                        backgroundColor: \"#ffffff !important\",\n                        color: \"#4B5563 !important\",\n                        border: \"none\",\n                        outline: \"none\",\n                      }}\n                    >\n                      {platform.description}\n                    </p>\n                    \n                    {/* Error Message */}\n                    {hasError && (\n                      <p className=\"text-xs text-red-600 mt-1\">\n                        {hasError}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <div\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (!isDisabled) handleToggle(platform.name);\n                      }}\n                      className={`relative inline-flex h-7 w-12 items-center rounded-full transition-colors cursor-pointer ${\n                        isConnected ? \"bg-green-500\" : \"bg-gray-300\"\n                      } ${isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n                    >\n                      <span\n                        className={`inline-block h-5 w-5 transform rounded-full bg-white transition-transform shadow-md ${\n                          isConnected ? \"translate-x-6\" : \"translate-x-0.5\"\n                        }`}\n                      />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\"\n          onClick={handleContinue}\n        >\n          Update\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\n          className=\"w-full text-gray-600 text-base font-medium py-3 text-center cursor-pointer hover:text-gray-800 transition-colors\"\n        >\n          Skip\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function PinSetup({ onComplete, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [requirements, setRequirements] = useState({\n    length: false,\n    number: false,\n    special: false\n  });\n\n  // Check PIN requirements (simplified)\n  useEffect(() => {\n    setRequirements({\n      length: pin.length >= 8,\n      number: /[0-9]/.test(pin),\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(pin)\n    });\n  }, [pin]);\n\n  const allRequirementsMet = Object.values(requirements).every(req => req);\n  const canSubmit = allRequirementsMet && pin.length > 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (canSubmit) {\n      // In a real app, you would hash the PIN before storing\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-6\">\n      <form onSubmit={handleSubmit} className=\"w-full space-y-6\">\n        {/* PIN Input */}\n        <div>\n          <label \n            htmlFor=\"pin\" \n            className=\"block text-sm font-medium mb-2\"\n            style={{ color: COLORS.textPrimary }}\n          >\n            Create PIN\n          </label>\n          <input\n            type=\"password\"\n            id=\"pin\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-3 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            style={{ \n              borderColor: COLORS.border,\n              backgroundColor: COLORS.background\n            }}\n            placeholder=\"Enter your secure PIN\"\n          />\n        </div>\n\n        {/* Requirements */}\n        <div \n          className=\"p-4 rounded-lg\"\n          style={{ backgroundColor: COLORS.backgroundSecondary }}\n        >\n          <h4 \n            className=\"text-sm font-medium mb-3\"\n            style={{ color: COLORS.textPrimary }}\n          >\n            PIN Requirements:\n          </h4>\n          <div className=\"space-y-2\">\n            {Object.entries({\n              length: 'At least 8 characters',\n              number: 'One number (0-9)',\n              special: 'One special character (!@#$%^&*)'\n            }).map(([key, label]) => (\n              <div key={key} className=\"flex items-center\">\n                <div \n                  className=\"w-4 h-4 rounded-full mr-2 flex items-center justify-center\"\n                  style={{ \n                    backgroundColor: requirements[key] ? COLORS.success : COLORS.border \n                  }}\n                >\n                  {requirements[key] && (\n                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span \n                  className=\"text-sm\"\n                  style={{ \n                    color: requirements[key] ? COLORS.success : COLORS.textSecondary \n                  }}\n                >\n                  {label}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Submit Button */}\n        <PrimaryButton\n          label=\"Create PIN\"\n          onClick={handleSubmit}\n          disabled={!canSubmit}\n          testId=\"create-pin-button\"\n        />\n      </form>\n\n      {userEmail && (\n        <p \n          className=\"text-center text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Securing account for: <span className=\"font-medium\">{userEmail}</span>\n        </p>\n      )}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Info', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: '👤',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'personality', \n    name: 'Personality', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: '💝',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  },\n  { \n    id: 'preferences', \n    name: 'Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: '⚙️',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  }\n];\n\n// Data Type Toggle Component (similar to PlatformToggle)\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 150);\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  return (\n    <div \n      className={`w-full p-4 border rounded-xl cursor-pointer transition-all duration-200 ${!isLast ? 'mb-3' : ''}`}\n      style={{\n        backgroundColor: isPressed ? COLORS.grey50 : COLORS.surface,\n        borderColor: isEnabled ? COLORS.primary : COLORS.grey200,\n        borderWidth: '1px',\n        transform: isPressed ? 'scale(0.99)' : 'scale(1)',\n        opacity: dataType.required ? 0.6 : 1,\n        cursor: dataType.required ? 'default' : 'pointer'\n      }}\n      onClick={handlePress}\n    >\n      <div className=\"flex items-start justify-between\">\n        {/* Left side - Icon and content */}\n        <div className=\"flex items-start space-x-3 flex-1\">\n          {/* Icon circle */}\n          <div \n            className=\"flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center\"\n            style={{\n              backgroundColor: COLORS.grey100\n            }}\n          >\n            <span className=\"text-xl\">{dataType.icon}</span>\n          </div>\n          \n          {/* Content */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <h3 \n                className=\"font-semibold text-left\"\n                style={{ \n                  fontFamily: 'Inter, system-ui, sans-serif',\n                  fontWeight: '600',\n                  fontSize: '16px',\n                  lineHeight: '20px',\n                  color: COLORS.grey800\n                }}\n              >\n                {dataType.name}\n              </h3>\n              {dataType.required && (\n                <span \n                  className=\"text-xs px-2 py-1 rounded-full\"\n                  style={{\n                    backgroundColor: COLORS.primary,\n                    color: COLORS.surface,\n                    fontFamily: 'Inter, system-ui, sans-serif',\n                    fontWeight: '500'\n                  }}\n                >\n                  Required\n                </span>\n              )}\n            </div>\n            <p \n              className=\"text-left\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '400',\n                fontSize: '14px',\n                lineHeight: '20px',\n                color: COLORS.grey600\n              }}\n            >\n              {dataType.description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Right side - Toggle */}\n        <div className=\"flex-shrink-0 ml-3\">\n          <div \n            className=\"w-12 h-6 rounded-full transition-all duration-200 relative\"\n            style={{\n              backgroundColor: isEnabled ? COLORS.primary : COLORS.grey300\n            }}\n          >\n            <div \n              className=\"w-5 h-5 bg-white rounded-full absolute top-0.5 transition-all duration-200\"\n              style={{\n                left: isEnabled ? '26px' : '2px',\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ backgroundColor: COLORS.surface }}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 px-6 pt-6 pb-4\">\n        {/* Security Notice */}\n        <div \n          className=\"w-full p-4 rounded-xl mb-6 flex items-start space-x-3\"\n          style={{ \n            backgroundColor: '#EBF8FF',\n            border: `1px solid #BEE3F8`\n          }}\n        >\n          <div \n            className=\"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center mt-0.5\"\n            style={{ backgroundColor: '#3182CE' }}\n          >\n            <span className=\"text-white text-sm\">🔒</span>\n          </div>\n          <p \n            className=\"text-left\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '400',\n              fontSize: '14px',\n              lineHeight: '20px',\n              color: '#2B6CB0'\n            }}\n          >\n            Your selected data will be securely processed and used only for the intended purpose.\n          </p>\n        </div>\n\n        {/* Heading */}\n        <div className=\"mb-6\">\n          <h1 \n            className=\"font-bold text-left mb-2\"\n            style={{ \n              fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n              fontWeight: '700',\n              fontSize: '24px',\n              lineHeight: '32px',\n              color: COLORS.grey800\n            }}\n          >\n            Data Types\n          </h1>\n        </div>\n      </div>\n\n      {/* Scrollable Data Types Section */}\n      <div className=\"flex-1 px-6 overflow-y-auto\">\n        <div className=\"pb-32\">\n          {dataTypes.map((dataType, index) => (\n            <DataTypeToggle\n              key={dataType.id}\n              dataType={dataType}\n              isEnabled={selectedData[dataType.id]}\n              onToggle={handleDataToggle}\n              isLast={index === dataTypes.length - 1}\n            />\n          ))}\n\n          {/* Selection Summary */}\n          <div \n            className=\"mt-6 p-4 rounded-xl flex items-center space-x-2\"\n            style={{ backgroundColor: COLORS.grey50 }}\n          >\n            <span \n              className=\"text-sm\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '500',\n                color: COLORS.grey600\n              }}\n            >\n              ✅ {selectedCount} data type{selectedCount !== 1 ? 's' : ''} selected\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Fixed Bottom Buttons */}\n      <div \n        className=\"flex-shrink-0 px-6 pb-6\"\n        style={{ \n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          backgroundColor: COLORS.surface,\n          paddingTop: '24px'\n        }}\n      >\n        <div className=\"mb-4 flex justify-center\">\n          <PrimaryButton\n            label={isLoadingApi ? \"Processing...\" : \"Share Selected Data\"}\n            onClick={fetchUserData}\n            disabled={isLoadingApi || selectedCount === 0}\n            loading={isLoadingApi}\n            centered={true}\n          />\n        </div>\n        \n        <div className=\"text-center\">\n          <button \n            className=\"text-center\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '500',\n              fontSize: '16px',\n              color: COLORS.grey600,\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer'\n            }}\n            onClick={() => onComplete({ cancelled: true })}\n          >\n            Cancel\n          </button>\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div \n            className=\"mt-4 p-3 rounded-lg text-center\"\n            style={{ \n              backgroundColor: '#FEF2F2',\n              borderColor: '#FECACA',\n              color: '#DC2626'\n            }}\n          >\n            <p className=\"text-sm\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: '12px 24px 8px',\n    borderBottom: `1px solid ${COLORS.borderLight}`\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '24px',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 8px 0',\n    textAlign: centerContent ? 'center' : 'left'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '16px',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 32px 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: '48px',\n    height: '48px',\n    margin: '0 auto 24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '24px'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '100vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = true, // Auto-enabled for design testing - set to false for production\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true }\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request flow within the same overlay\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n          />\n        );\n      case 'email':\n        return (\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            onBack={() => setCurrentFlow('welcome')}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh', maxHeight: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n\n                  <button\n                    onClick={handleCloseOverlay}\n                    className=\"absolute right-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n\n                  {/* Progress Bar */}\n                  <div className=\"flex justify-center mb-8\">\n                    <div className=\"w-24 h-1 bg-gray-300 rounded-full\">\n                      <div className=\"w-20 h-1 bg-gray-900 rounded-full\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                />\n              </div>\n            </div>\n          ) : (\n            // All other flows use PageLayout wrapper\n            <ModalPageLayout\n              visible={showOverlay}\n              onClose={handleCloseOverlay}\n              showBackButton={currentFlow !== 'welcome' && currentFlow !== 'email' && currentFlow !== 'dataRequest'}\n              onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n                if (currentFlow === 'onboarding') setCurrentFlow('email');\n                if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n                if (currentFlow === 'training') setCurrentFlow('pin');\n              }}\n              title={getFlowTitle()}\n              subtitle={getFlowSubtitle()}\n              icon={getFlowIcon()}\n              centerContent={true}\n            >\n              {renderCurrentFlow()}\n            </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","/**\n * Standalone Onairos Overlay Handler\n * Allows developers to trigger the Onairos flow programmatically without the button component\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { OnairosButton } from '../onairosButton.jsx';\nimport { formatOnairosResponse } from './responseFormatter.js';\n\n/**\n * Opens the Onairos overlay flow programmatically\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request ['basic', 'personality', 'preferences']\n * @param {string} config.webpageName - Name of your application\n * @param {Function} config.onComplete - Callback function when flow completes\n * @param {boolean} config.autoFetch - Whether to auto-fetch data (default: false)\n * @param {boolean} config.testMode - Whether to use test mode (default: false)\n * @param {string} config.appIcon - URL to your app icon (optional)\n * @param {boolean} config.formatResponse - Whether to format response with dictionary (default: true)\n * @param {Object} config.responseFormat - Response formatting options\n * @returns {Promise<Function>} Promise that resolves to a cleanup function\n */\nexport async function openOnairosOverlay(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    webpageName = 'My App',\n    onComplete = null,\n    autoFetch = false,\n    testMode = false,\n    appIcon = null,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true },\n    ...otherProps\n  } = config;\n\n  return new Promise((resolve, reject) => {\n    try {\n      // Create a container for the overlay\n      const containerId = `onairos-overlay-${Math.random().toString(36).substr(2, 9)}`;\n      const container = document.createElement('div');\n      container.id = containerId;\n      container.style.position = 'fixed';\n      container.style.top = '0';\n      container.style.left = '0';\n      container.style.width = '100%';\n      container.style.height = '100%';\n      container.style.zIndex = '9999';\n      container.style.pointerEvents = 'none'; // Allow clicks to pass through to the button\n      \n      document.body.appendChild(container);\n\n      // Cleanup function\n      const cleanup = () => {\n        if (container && container.parentNode) {\n          try {\n            ReactDOM.unmountComponentAtNode(container);\n          } catch (error) {\n            console.warn('Error unmounting React component:', error);\n          }\n          container.parentNode.removeChild(container);\n        }\n      };\n\n      // Enhanced onComplete handler\n      const handleComplete = (result) => {\n        let formattedResult = result;\n        \n        // Format response if requested\n        if (formatResponse && result?.apiResponse) {\n          try {\n            formattedResult = {\n              ...result,\n              apiResponse: formatOnairosResponse(result.apiResponse, responseFormat)\n            };\n          } catch (error) {\n            console.warn('Error formatting response:', error);\n            // Continue with original result if formatting fails\n          }\n        }\n\n        // Call the original onComplete callback\n        if (onComplete && typeof onComplete === 'function') {\n          try {\n            onComplete(formattedResult);\n          } catch (error) {\n            console.error('Error in onComplete callback:', error);\n          }\n        }\n\n        // Cleanup after a short delay to allow animations\n        setTimeout(cleanup, 100);\n      };\n\n      // Create the Onairos button component with auto-open\n      const OnairosElement = React.createElement(OnairosButton, {\n        requestData,\n        webpageName,\n        onComplete: handleComplete,\n        autoFetch,\n        testMode,\n        appIcon,\n        visualType: 'icon', // Use icon-only to minimize visual footprint\n        buttonType: 'pill',\n        textColor: 'white',\n        style: { opacity: 0, position: 'absolute', top: '-9999px' }, // Hide the button\n        ...otherProps\n      });\n\n      // Render the component\n      ReactDOM.render(OnairosElement, container);\n\n      // Auto-click the button to open overlay after render\n      setTimeout(() => {\n        const button = container.querySelector('button');\n        if (button) {\n          button.click();\n          resolve(cleanup); // Resolve with cleanup function\n        } else {\n          cleanup();\n          reject(new Error('Failed to render Onairos button'));\n        }\n      }, 100);\n\n    } catch (error) {\n      console.error('Error opening Onairos overlay:', error);\n      reject(error);\n    }\n  });\n}\n\n/**\n * Alternative method using React hooks for React applications\n * @param {Object} config - Same configuration as openOnairosOverlay\n * @returns {Object} Hook object with open function and state\n */\nexport function useOnairosOverlay(config = {}) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const cleanupRef = React.useRef(null);\n\n  const open = React.useCallback(async (overrideConfig = {}) => {\n    if (isOpen || isLoading) return;\n    \n    setIsLoading(true);\n    \n    try {\n      const finalConfig = {\n        ...config,\n        ...overrideConfig,\n        onComplete: (result) => {\n          setIsOpen(false);\n          setIsLoading(false);\n          \n          // Call original onComplete if provided\n          if (config.onComplete) {\n            config.onComplete(result);\n          }\n          if (overrideConfig.onComplete) {\n            overrideConfig.onComplete(result);\n          }\n        }\n      };\n\n      const cleanup = await openOnairosOverlay(finalConfig);\n      cleanupRef.current = cleanup;\n      setIsOpen(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error('Error opening overlay:', error);\n    }\n  }, [config, isOpen, isLoading]);\n\n  const close = React.useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n      cleanupRef.current = null;\n    }\n    setIsOpen(false);\n    setIsLoading(false);\n  }, []);\n\n  // Cleanup on unmount\n  React.useEffect(() => {\n    return () => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n      }\n    };\n  }, []);\n\n  return {\n    open,\n    close,\n    isOpen,\n    isLoading\n  };\n}\n\n/**\n * Simple function to get user data without UI (for existing authenticated users)\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request\n * @param {string} config.userEmail - User email (if known)\n * @param {string} config.appName - App name\n * @param {boolean} config.testMode - Whether to use test mode\n * @param {boolean} config.formatResponse - Whether to format response\n * @returns {Promise<Object>} Promise that resolves to user data\n */\nexport async function getOnairosData(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    userEmail = '',\n    appName = 'My App',\n    testMode = false,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true }\n  } = config;\n\n  // This would need to be implemented based on your existing API logic\n  // For now, it's a placeholder that developers can use as a reference\n  throw new Error('getOnairosData requires authenticated user session. Use openOnairosOverlay for the full authentication flow.');\n} ","import React from 'react';\nimport OnairosButton from './onairosButton.jsx';\n\n// Main Onairos component\nexport function Onairos(props) {\n  return (\n    <>\n      <OnairosButton {...props} />\n    </>\n  );\n}\n\n// Export both the main component and individual components\nexport { OnairosButton };\nexport default Onairos;\n\n// Export overlay handler functions for programmatic access\nexport { \n  openOnairosOverlay, \n  useOnairosOverlay, \n  getOnairosData \n} from './utils/overlayHandler.js';\n\n// Export response formatting utilities\nexport { \n  formatOnairosResponse, \n  formatPersonalityScores,\n  getPersonalityTypes,\n  getTraitCategories,\n  PERSONALITY_TYPES,\n  TRAIT_CATEGORIES\n} from './utils/responseFormatter.js';\n\n// Initialize SDK functionality (if needed)\nexport const initializeApiKey = async (config) => {\n  // SDK initialization logic would go here\n  console.log('🔧 SDK initialized with config:', config);\n  return Promise.resolve();\n};\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__156__","__WEBPACK_EXTERNAL_MODULE__318__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","WelcomeScreen","_ref","onContinue","onClose","React","className","style","height","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","startsWith","defaultAttributes","xmlns","width","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","Check","iconName","Component","displayName","createLucideIcon","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","concat","borderRadius","fontSize","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","onBack","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","handleEmailSubmit","async","e","preventDefault","test","validateEmail","console","log","setTimeout","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","type","onChange","target","placeholder","required","lineHeight","borderColor","from","_","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","PrimaryButton","flex","minHeight","platforms","name","icon","connector","description","id","offset","stopColor","sdkConfig","process","env","REACT_APP_ONAIROS_API_KEY","baseUrl","REACT_APP_ONAIROS_BASE_URL","sdkType","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","UniversalOnboarding","onComplete","appIcon","appName","connectedAccounts","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","connectionErrors","setConnectionErrors","connectionHealth","setConnectionHealth","healthScore","setHealthScore","useEffect","handleOAuthReturn","platform","localStorage","getItem","removeItem","prev","connectToPlatform","platformName","find","p","_localStorage$getItem","username","authorizeUrl","session","status","statusText","responseData","possibleKeys","oauthUrl","usedKey","keys","navigator","userAgent","innerWidth","setItem","location","href","popup","open","hasNavigatedToOnairos","checkInterval","setInterval","hostname","close","closed","clearInterval","successFlag","errorFlag","timestamp","isRecentSignal","parseInt","handleToggle","values","isConnected","isCurrentlyConnecting","hasError","isDisabled","outline","stopPropagation","handleContinue","connected","entries","_ref3","totalConnections","sdkVersion","enhancedFeatures","healthMonitoring","autoRefresh","connectionValidation","PinSetup","userEmail","pin","setPin","requirements","setRequirements","number","special","canSubmit","every","req","handleSubmit","pinCreated","onSubmit","htmlFor","dataTypes","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","isPressed","setIsPressed","grey50","surface","primary","grey200","borderWidth","transform","handlePress","grey100","grey800","grey600","grey300","autoFetch","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","selectedCount","paddingTop","userHash","hash","str","toString","i","charCodeAt","Math","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","progress","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","min","completionDelay","trainingComplete","simulatedTraining","clearTimeout","round","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","warn","getPersonalityTypes","getTraitCategories","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","zIndex","padding","borderBottom","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","enableTraining","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","buttonClass","logoStyle","marginRight","src","alt","getText","maxHeight","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","DataRequest","openOnairosOverlay","config","otherProps","Promise","resolve","reject","containerId","random","substr","container","document","pointerEvents","appendChild","cleanup","parentNode","ReactDOM","removeChild","handleComplete","OnairosElement","button","querySelector","click","useOnairosOverlay","isOpen","setIsOpen","cleanupRef","overrideConfig","finalConfig","current","getOnairosData","Onairos","initializeApiKey"],"sourceRoot":""}