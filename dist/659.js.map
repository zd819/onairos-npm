{"version":3,"file":"659.js","mappings":"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","sources":["webpack://OnairosLaravel/./src/utils/userDataFormatter.js","webpack://OnairosLaravel/./src/components/WelcomeScreen.jsx","webpack://OnairosLaravel/./src/theme/colors.js","webpack://OnairosLaravel/./src/components/ui/PrimaryButton.jsx","webpack://OnairosLaravel/./src/components/EmailAuth.js","webpack://OnairosLaravel/./src/components/UniversalOnboarding.jsx","webpack://OnairosLaravel/./src/components/PinSetup.js","webpack://OnairosLaravel/./src/components/DataRequest.js","webpack://OnairosLaravel/./src/components/TrainingComponent.jsx","webpack://OnairosLaravel/./src/components/LoadingScreen.jsx","webpack://OnairosLaravel/./src/utils/responseFormatter.js","webpack://OnairosLaravel/./src/components/ui/PageLayout.jsx","webpack://OnairosLaravel/./src/onairosButton.jsx","webpack://OnairosLaravel/./src/utils/apiResponseLogger.js"],"sourcesContent":["/**\n * Enhanced User Data Formatter for onComplete Callback\n * Provides structured, readable formatting of Onairos user data\n */\n\n/**\n * Formats user data for better readability in onComplete callback\n * @param {Object} result - The complete result object from data request\n * @returns {Object} Enhanced result with formatted user data display\n */\nexport function formatUserDataForDisplay(result) {\n  if (!result) return result;\n\n  const formatted = { ...result };\n  \n  // Create a structured summary of the user data\n  const userDataSummary = {\n    // Basic request information\n    requestInfo: {\n      timestamp: result.timestamp || new Date().toISOString(),\n      appName: result.appName || 'Unknown App',\n      userHash: result.userHash || 'Unknown User',\n      testMode: result.testMode || false,\n      dataTypesRequested: result.approvedData || []\n    },\n    \n    // User authentication and profile data\n    userProfile: {\n      email: result.userData?.email || 'Not provided',\n      userType: result.userData?.userType || 'Unknown',\n      onboardingComplete: result.userData?.onboardingComplete || false,\n      pinCreated: result.userData?.pinCreated || false,\n      trainingComplete: result.userData?.trainingComplete || false,\n      modelReady: result.userData?.modelReady || false\n    },\n    \n    // Connected platforms/accounts\n    connectedAccounts: formatConnectedAccounts(result.userData?.connectedAccounts || []),\n    \n    // API response data (personality, preferences, etc.)\n    aiData: formatAIResponseData(result.apiResponse),\n    \n    // Success status and any errors\n    status: {\n      success: result.success || false,\n      hasApiResponse: !!result.apiResponse,\n      hasErrors: !!result.error || !!result.apiError\n    }\n  };\n\n  // Add the formatted summary to the result\n  formatted.userDataSummary = userDataSummary;\n  \n  // Create a pretty-printed version for console logging\n  formatted.prettyPrint = createPrettyPrintVersion(userDataSummary);\n  \n  return formatted;\n}\n\n/**\n * Formats connected accounts data\n * @param {Array} accounts - Array of connected account objects\n * @returns {Object} Formatted accounts summary\n */\nfunction formatConnectedAccounts(accounts) {\n  if (!Array.isArray(accounts) || accounts.length === 0) {\n    return {\n      count: 0,\n      platforms: [],\n      summary: 'No connected accounts'\n    };\n  }\n\n  return {\n    count: accounts.length,\n    platforms: accounts.map(account => ({\n      name: account.platform || account.name || 'Unknown Platform',\n      status: account.status || 'Unknown',\n      connectedAt: account.connectedAt || 'Unknown date',\n      hasData: account.hasData || false\n    })),\n    summary: `${accounts.length} platform(s) connected: ${accounts.map(a => a.platform || a.name).join(', ')}`\n  };\n}\n\n/**\n * Formats AI response data (personality scores, traits, etc.)\n * @param {Object} apiResponse - The API response containing AI data\n * @returns {Object} Formatted AI data summary\n */\nfunction formatAIResponseData(apiResponse) {\n  if (!apiResponse) {\n    return {\n      available: false,\n      summary: 'No AI data available'\n    };\n  }\n\n  const aiData = {\n    available: true,\n    dataTypes: []\n  };\n\n  // Check for personality data\n  if (apiResponse.InferenceResult?.traits || apiResponse.personalityDict || apiResponse.traits) {\n    const personalityData = {\n      type: 'personality',\n      available: true\n    };\n\n    // If we have dictionary format, use it for better readability\n    if (apiResponse.personalityDict) {\n      personalityData.data = apiResponse.personalityDict;\n      personalityData.summary = `Personality analysis with ${Object.keys(apiResponse.personalityDict).length} traits`;\n    } else if (apiResponse.InferenceResult?.traits) {\n      personalityData.data = apiResponse.InferenceResult.traits;\n      personalityData.summary = `Personality scores array with ${apiResponse.InferenceResult.traits.length} values`;\n    } else if (apiResponse.traits) {\n      personalityData.data = apiResponse.traits;\n      personalityData.summary = `Personality traits with ${Array.isArray(apiResponse.traits) ? apiResponse.traits.length : Object.keys(apiResponse.traits).length} items`;\n    }\n\n    aiData.dataTypes.push(personalityData);\n  }\n\n  // Check for preferences/traits data\n  if (apiResponse.traitResult || apiResponse.traitDict) {\n    const preferencesData = {\n      type: 'preferences',\n      available: true\n    };\n\n    if (apiResponse.traitDict) {\n      preferencesData.data = apiResponse.traitDict;\n      preferencesData.summary = `Preferences analysis with ${Object.keys(apiResponse.traitDict).length} categories`;\n    } else if (apiResponse.traitResult) {\n      preferencesData.data = apiResponse.traitResult;\n      preferencesData.summary = `Trait results with ${Array.isArray(apiResponse.traitResult) ? apiResponse.traitResult.length : Object.keys(apiResponse.traitResult).length} items`;\n    }\n\n    aiData.dataTypes.push(preferencesData);\n  }\n\n  // Check for basic info/output\n  if (apiResponse.InferenceResult?.output || apiResponse.output) {\n    aiData.dataTypes.push({\n      type: 'basic_info',\n      available: true,\n      data: apiResponse.InferenceResult?.output || apiResponse.output,\n      summary: 'Basic user information and insights'\n    });\n  }\n\n  // Create overall summary\n  aiData.summary = aiData.dataTypes.length > 0 \n    ? `AI analysis complete with ${aiData.dataTypes.length} data type(s): ${aiData.dataTypes.map(d => d.type).join(', ')}`\n    : 'AI data structure present but no recognized data types found';\n\n  return aiData;\n}\n\n/**\n * Creates a pretty-printed version for console logging\n * @param {Object} userDataSummary - The formatted user data summary\n * @returns {string} Pretty-printed string for console output\n */\nfunction createPrettyPrintVersion(userDataSummary) {\n  const lines = [];\n  \n  lines.push('🎉 ONAIROS USER DATA SUMMARY');\n  lines.push('=' .repeat(50));\n  \n  // Request Info\n  lines.push('\\n📋 REQUEST INFORMATION:');\n  lines.push(`   App: ${userDataSummary.requestInfo.appName}`);\n  lines.push(`   User: ${userDataSummary.requestInfo.userHash}`);\n  lines.push(`   Mode: ${userDataSummary.requestInfo.testMode ? 'Test' : 'Production'}`);\n  lines.push(`   Data Types: ${userDataSummary.requestInfo.dataTypesRequested.join(', ') || 'None'}`);\n  lines.push(`   Timestamp: ${new Date(userDataSummary.requestInfo.timestamp).toLocaleString()}`);\n  \n  // User Profile\n  lines.push('\\n👤 USER PROFILE:');\n  lines.push(`   Email: ${userDataSummary.userProfile.email}`);\n  lines.push(`   Type: ${userDataSummary.userProfile.userType}`);\n  lines.push(`   Onboarding: ${userDataSummary.userProfile.onboardingComplete ? '✅' : '❌'}`);\n  lines.push(`   PIN Setup: ${userDataSummary.userProfile.pinCreated ? '✅' : '❌'}`);\n  lines.push(`   Training: ${userDataSummary.userProfile.trainingComplete ? '✅' : '❌'}`);\n  lines.push(`   Model Ready: ${userDataSummary.userProfile.modelReady ? '✅' : '❌'}`);\n  \n  // Connected Accounts\n  lines.push('\\n🔗 CONNECTED ACCOUNTS:');\n  lines.push(`   ${userDataSummary.connectedAccounts.summary}`);\n  if (userDataSummary.connectedAccounts.platforms.length > 0) {\n    userDataSummary.connectedAccounts.platforms.forEach(platform => {\n      lines.push(`   • ${platform.name}: ${platform.status} ${platform.hasData ? '(has data)' : '(no data)'}`);\n    });\n  }\n  \n  // AI Data\n  lines.push('\\n🤖 AI ANALYSIS DATA:');\n  lines.push(`   ${userDataSummary.aiData.summary}`);\n  if (userDataSummary.aiData.dataTypes.length > 0) {\n    userDataSummary.aiData.dataTypes.forEach(dataType => {\n      lines.push(`   • ${dataType.type.toUpperCase()}: ${dataType.summary}`);\n    });\n  }\n  \n  // Status\n  lines.push('\\n✅ STATUS:');\n  lines.push(`   Success: ${userDataSummary.status.success ? '✅' : '❌'}`);\n  lines.push(`   API Response: ${userDataSummary.status.hasApiResponse ? '✅' : '❌'}`);\n  lines.push(`   Errors: ${userDataSummary.status.hasErrors ? '❌ Yes' : '✅ None'}`);\n  \n  lines.push('\\n' + '=' .repeat(50));\n  \n  return lines.join('\\n');\n}\n\n/**\n * Console logging helper that prints formatted user data\n * @param {Object} result - The result object from onComplete\n */\nexport function logFormattedUserData(result) {\n  const formatted = formatUserDataForDisplay(result);\n  \n  console.log('\\n' + formatted.prettyPrint + '\\n');\n  \n  // Also log the structured data for programmatic access\n  console.log('📊 Structured User Data Summary:', formatted.userDataSummary);\n  \n  return formatted;\n}\n\nexport default {\n  formatUserDataForDisplay,\n  logFormattedUserData\n};\n","import React, { useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  // Load Sirv script for responsive images\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://scripts.sirv.com/sirvjs/v3/sirv.js';\n    script.async = true;\n    document.head.appendChild(script);\n    \n    return () => {\n      const existingScript = document.querySelector('script[src=\"https://scripts.sirv.com/sirvjs/v3/sirv.js\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Logo */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-20 h-20 flex items-center justify-center\">\n            <img \n              className=\"Sirv w-full h-full object-contain\" \n              data-src=\"https://anushkasirv.sirv.com/OnairosBlack.png\" \n              alt=\"Onairos Logo\"\n            />\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState, useEffect } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Auto-focus first PIN input when code step loads\n  useEffect(() => {\n    if (step === 'code') {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\n        if (firstInput) {\n          firstInput.focus();\n        }\n      }, 100);\n    }\n  }, [step]);\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const baseUrl = (typeof window !== 'undefined' && window.onairosBaseUrl) || 'https://api2.onairos.uk';\n        const apiKey = (typeof window !== 'undefined' && window.onairosApiKey) || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey';\n        \n        const response = await fetch(`${baseUrl}/email/verify`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': apiKey,\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({\n            email: (email || '').trim().toLowerCase()\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      // Use the same Google OAuth logic as UniversalOnboarding\n      const sdkConfig = {\n        baseUrl: 'https://api2.onairos.uk',\n        apiKey: window.onairosApiKey || 'test-key',\n        enableHealthMonitoring: true,\n        enableAutoRefresh: true,\n        enableConnectionValidation: true\n      };\n\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\n      const params = new URLSearchParams({\n        username: username,\n        sdk_type: 'web',\n        return_url: window.location.origin + '/oauth-callback.html'\n      });\n\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\n      console.log('🔗 Starting Google OAuth from email flow...');\n      console.log('📋 Google OAuth URL:', fullUrl);\n\n      // Open popup for OAuth\n      const popup = window.open(\n        fullUrl,\n        'google_oauth',\n        'width=500,height=600,scrollbars=yes,resizable=yes'\n      );\n\n      if (!popup) {\n        throw new Error('Popup blocked. Please allow popups for this site.');\n      }\n\n      // Monitor popup for completion\n      const checkInterval = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(checkInterval);\n          console.log('✅ Google OAuth popup closed');\n          // Simulate successful OAuth for now\n          onSuccess({ \n            email: 'user@gmail.com', \n            method: 'google',\n            connectedAccounts: { Google: true }\n          });\n        }\n      }, 1000);\n\n    } catch (error) {\n      console.error('❌ Google OAuth failed:', error);\n      setError('Google authentication failed. Please try again.');\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const baseUrl = (typeof window !== 'undefined' && window.onairosBaseUrl) || 'https://api2.onairos.uk';\n        const apiKey = (typeof window !== 'undefined' && window.onairosApiKey) || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey';\n        \n        const response = await fetch(`${baseUrl}/email/verify/confirm`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': apiKey,\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({\n            email: (email || '').trim().toLowerCase(),\n            code: code.trim()\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Use pre-existing Persona or create a new one in seconds\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            onClick={handleGoogleAuth}\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#4285F4\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"#34A853\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"#FBBC05\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"#EA4335\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-12 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full max-w-sm mx-auto bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\n        <h1 \n          className=\"font-bold mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-12 mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"max-w-sm mx-auto\">\n          <PrimaryButton\n            label=\"Continue\"\n            onClick={handleCodeSubmit}\n            loading={isLoading}\n            disabled={isLoading || code.length !== 6}\n            testId=\"verify-code-button\"\n          />\n        </div>\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"px-12 w-full\">\n        <div className=\"max-w-sm mx-auto\">\n          <button\n            type=\"button\"\n            onClick={() => setStep('email')}\n            className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n            style={{ color: COLORS.textSecondary }}\n          >\n            Use a different email\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6 pt-16 px-12\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} \n","import React, { useEffect, useId, useState, useRef } from 'react';\nimport Lottie from 'lottie-react';\nimport personaAnim from '../../public/persona-anim.json';\nconst chatgptIcon = 'https://anushkasirv.sirv.com/openai.png';\nconst claudeIcon = 'https://anushkasirv.sirv.com/claude-color.png';\nconst geminiIcon = 'https://anushkasirv.sirv.com/gemini-color.png';\nconst grokIcon = 'https://anushkasirv.sirv.com/grok.png';\n\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web',\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true,\n};\n\nconst fadeSlideInKeyframes = `\n@keyframes fadeSlideIn {\n  from { opacity: 0; transform: translateX(var(--slide-x)); }\n  to { opacity: 1; transform: translateX(0); }\n}\n`;\n\nexport default function UniversalOnboarding({ onComplete }) {\n  const lottieRef = useRef(null);\n  const lastFrameRef = useRef(0);\n  const rafRef = useRef(null);\n\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [selected, setSelected] = useState('Instagram');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // swipe state\n  const touchStartX = useRef(0);\n  const touchDeltaX = useRef(0);\n\n  const [vh, setVh] = useState(() => (typeof window !== 'undefined' ? window.innerHeight : 800));\n  useEffect(() => {\n    const onResize = () => setVh(window.innerHeight);\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const FOOTER_H = 88;\n\n  // persona stays as requested (background, unchanged placement)\n  const personaSide = Math.min(vh * 0.52, 500);\n  const PERSONA_TOP = 96;\n\n  // icon layout (restore tighter spacing on page 1; place the band lower)\n  const SLOT = Math.max(56, Math.min(64, Math.floor(vh * 0.07)));\n  const CIRCLE = 42;\n  const GAP_PAGE1 = 12;\n  const GAP_PAGE2 = 20;\n  const ACTIVE_SCALE = vh < 760 ? 1.12 : 1.22;\n\n  const ICONS_H = 84;\n  const ICONS_TOP_OFFSET = Math.max(180, Math.min(240, Math.round(vh * 0.28))); // ~28vh, clamped for all screens\n\n  const igGradId = useId();\n\n  // ---- official brand SVGs (compact, consistent viewboxes) ----\n  const Brand = {\n    ChatGPT: <img src={chatgptIcon} alt=\"ChatGPT\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Claude: <img src={claudeIcon} alt=\"Claude\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Gemini: <img src={geminiIcon} alt=\"Gemini\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Grok: <img src={grokIcon} alt=\"Grok\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Instagram: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <defs>\n          <radialGradient id={igGradId} cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FDBB4B\"/>\n            <stop offset=\"40%\" stopColor=\"#E95950\"/>\n            <stop offset=\"70%\" stopColor=\"#BC2A8D\"/>\n            <stop offset=\"100%\" stopColor=\"#4C68D7\"/>\n          </radialGradient>\n        </defs>\n        <path fill={`url(#${igGradId})`} d=\"M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5zm5 5.5A4.5 4.5 0 1 0 16.5 12 4.5 4.5 0 0 0 12 7.5zm0 7.4A2.9 2.9 0 1 1 14.9 12 2.9 2.9 0 0 1 12 14.9Zm5.35-8.25a1.15 1.15 0 1 0 1.15 1.15 1.15 1.15 0 0 0-1.15-1.15Z\"/>\n      </svg>\n    ),\n    YouTube: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#FF0000\" d=\"M22.54 6.42a3 3 0 0 0-2.11-2.12C18.49 3.75 12 3.75 12 3.75s-6.49 0-8.43.55A3 3 0 0 0 1.46 6.42 31.63 31.63 0 0 0 1 12a31.63 31.63 0 0 0 .46 5.58 3 3 0 0 0 2.11 2.12C5.51 20.25 12 20.25 12 20.25s6.49 0 8.43-.55a3 3 0 0 0 2.11-2.12A31.63 31.63 0 0 0 23 12a31.63 31.63 0 0 0-.46-5.58z\"/>\n        <path fill=\"#FFF\" d=\"M10 8.75v6.5l6-3.25-6-3.25z\"/>\n        </svg>\n      ),\n    Reddit: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#FF4500\"/>\n        <circle cx=\"8.75\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <circle cx=\"15.25\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M7.9 15c.8.8 2.3 1.05 4.1 1.05S15.3 15.8 16.1 15c.2-.2.2-.5 0-.7-.2-.2-.5-.2-.7 0-.6.6-1.9.85-3.4.85S9.3 14.9 8.7 14.3c-.2-.2-.5-.2-.7 0-.2.2-.2.5 0 .7z\"/>\n        </svg>\n      ),\n    LinkedIn: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"3\" fill=\"#0A66C2\"/>\n        <rect x=\"5\" y=\"9\" width=\"3\" height=\"10\" fill=\"#FFF\"/>\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"1.5\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M16.8 19H13.9v-5c0-1.2-.5-1.8-1.4-1.8-.9 0-1.6.6-1.6 1.8V19H8V9h2.8v1.3c.5-.8 1.4-1.5 2.7-1.5 2 0 3.3 1.3 3.3 3.7V19z\"/>\n        </svg>\n      ),\n    Twitter: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#1DA1F2\" d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"/>\n        </svg>\n      ),\n  };\n\n  const aiLinks = {\n    ChatGPT: 'https://chat.openai.com',\n    Claude: 'https://claude.ai',\n    Gemini: 'https://gemini.google.com',\n    Grok: 'https://grok.x.ai',\n  };\n\n  const descriptions = {\n    ChatGPT: <>We analyze your <strong className=\"font-semibold\">prompt style</strong> and <strong className=\"font-semibold\">chat history</strong> to match your writing and thinking patterns.</>,\n    Claude: <>We learn your <strong className=\"font-semibold\">document workflow</strong> and <strong className=\"font-semibold\">reasoning preferences</strong> to tune output format and detail.</>,\n    Gemini: <>We study your <strong className=\"font-semibold\">search patterns</strong> and <strong className=\"font-semibold\">multimodal usage</strong> to improve response accuracy.</>,\n    Grok: <>We adapt to your <strong className=\"font-semibold\">X posting style</strong> and <strong className=\"font-semibold\">meme literacy</strong> to match your tone.</>,\n    Twitter: <>We analyze your <strong className=\"font-semibold\">tweets</strong> and <strong className=\"font-semibold\">interests</strong> to understand your preferences.</>,\n    YouTube: <>We study your <strong className=\"font-semibold\">watch history</strong> and <strong className=\"font-semibold\">interactions</strong> to learn your interests.</>,\n    Reddit: <>We examine your <strong className=\"font-semibold\">search history</strong> and <strong className=\"font-semibold\">discussions</strong> to understand your interests.</>,\n    Instagram: <>We analyze your <strong className=\"font-semibold\">photos</strong> and <strong className=\"font-semibold\">interactions</strong> to learn visual preferences.</>,\n    LinkedIn: <>We study your <strong className=\"font-semibold\">professional graph</strong> and <strong className=\"font-semibold\">content</strong> to understand career interests.</>,\n  };\n\n  const allPlatforms = [\n    // Page 1\n    { name: 'Instagram', connector: 'instagram', icon: Brand.Instagram },\n    { name: 'YouTube', connector: 'youtube', icon: Brand.YouTube },\n    { name: 'ChatGPT', connector: 'chatgpt', icon: Brand.ChatGPT, directLink: aiLinks.ChatGPT },\n    // Page 2\n    { name: 'Claude', connector: 'claude', icon: Brand.Claude, directLink: aiLinks.Claude },\n    { name: 'Gemini', connector: 'gemini', icon: Brand.Gemini, directLink: aiLinks.Gemini },\n    { name: 'Twitter', connector: 'twitter', icon: Brand.Twitter },\n    // Page 3\n    { name: 'LinkedIn', connector: 'linkedin', icon: Brand.LinkedIn },\n    { name: 'Reddit', connector: 'reddit', icon: Brand.Reddit },\n    { name: 'Grok', connector: 'grok', icon: Brand.Grok, directLink: aiLinks.Grok },\n  ];\n\n  const getPlatformsForPage = (page) => {\n    if (page === 1) return allPlatforms.slice(0, 3);\n    if (page === 2) return allPlatforms.slice(3, 6);\n    return allPlatforms.slice(6);\n  };\n\n  const platforms = getPlatformsForPage(currentPage);\n\n  useEffect(() => {\n    const p = localStorage.getItem('onairos_oauth_platform');\n    if (p) {\n      localStorage.removeItem('onairos_oauth_platform');\n      localStorage.removeItem('onairos_oauth_return');\n      setConnectedAccounts((s) => ({ ...s, [p]: true }));\n    }\n  }, []);\n\n  async function connectToPlatform(name) {\n    const plat = allPlatforms.find((p) => p.name === name);\n    if (!plat) return false;\n    try {\n      // For direct-link platforms (no OAuth), mark connected immediately and return\n      if (plat.directLink) {\n        setConnectedAccounts((s) => ({ ...s, [name]: true }));\n        setIsConnecting(false);\n        setConnectingPlatform(null);\n        return true;\n      }\n\n      // Immediately reflect selection in UI without spinner while starting OAuth\n      setConnectedAccounts((s) => ({ ...s, [name]: true }));\n      setIsConnecting(true);\n      setConnectingPlatform(name);\n      \n      // BYPASS: Twitter endpoint is 404, so just keep toggle ON without API call\n      if (name === 'Twitter') {\n        console.log('🐦 Twitter: Bypassing API call (endpoint not available), keeping toggle ON');\n        setIsConnecting(false);\n        setConnectingPlatform(null);\n        return true;\n      }\n      \n      const username = localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com';\n\n      const res = await fetch(`${sdkConfig.baseUrl}/${plat.connector}/authorize`, {\n        method: 'POST', headers: { 'x-api-key': sdkConfig.apiKey, 'Content-Type': 'application/json' },\n        body: JSON.stringify({ session: { username } }),\n      });\n      if (!res.ok) throw new Error('auth failed');\n      const data = await res.json();\n\n      const candidates = (\n        {\n          youtube: ['youtubeURL','youtubeUrl','youtube_url'],\n          linkedin: ['linkedinURL','linkedinUrl','linkedin_url'],\n          reddit: ['redditURL','redditUrl','reddit_url'],\n          pinterest: ['pinterestURL','pinterestUrl','pinterest_url'],\n          instagram: ['instagramURL','instagramUrl','instagram_url'],\n          github: ['githubURL','githubUrl','github_url'],\n          facebook: ['facebookURL','facebookUrl','facebook_url'],\n          gmail: ['gmailURL','gmailUrl','gmail_url'],\n        }[plat.connector]\n      ) || [`${plat.connector}URL`, `${plat.connector}Url`, `${plat.connector}_url`, 'platformURL', 'authUrl', 'url'];\n\n      let oauthUrl = null; for (const k of candidates) if (data[k]) { oauthUrl = data[k]; break; }\n      if (!oauthUrl) throw new Error('no url');\n\n      const popup = window.open(oauthUrl, `${plat.connector}_oauth`, 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\n      if (!popup) throw new Error('popup blocked');\n\n      let touched = false; const it = setInterval(() => {\n        try { if (popup.location && popup.location.hostname === 'onairos.uk') { touched = true; popup.close(); } } catch { if (!touched) touched = true; }\n        try { if (popup.closed) { clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } } catch {}\n      }, 800);\n\n      setTimeout(() => { try { if (!popup.closed && touched) popup.close(); } catch {} }, 10000);\n      setTimeout(() => { if (!popup.closed) { popup.close(); clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } }, 300000);\n      return true;\n    } catch {\n      // On failure, revert the optimistic toggle\n      setConnectedAccounts((s) => ({ ...s, [name]: false }));\n      setIsConnecting(false); setConnectingPlatform(null); return false;\n    }\n  }\n\n  const handleSwitch = async (name) => {\n    if (isConnecting && connectingPlatform !== name) return;\n    const on = !!connectedAccounts[name];\n    if (on) setConnectedAccounts((s) => ({ ...s, [name]: false }));\n    else await connectToPlatform(name);\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  useEffect(() => {\n    if (!lottieRef.current) return;\n    const totalFrames = (personaAnim.op || 0) - (personaAnim.ip || 0);\n    const TOTAL_PLATFORMS = 9; // Total number of platforms across all pages\n    const progress = connectedCount / TOTAL_PLATFORMS;\n    const target = Math.max(0, Math.floor(progress * totalFrames));\n    const start = lastFrameRef.current || 0;\n    const duration = 420; const startTs = performance.now();\n    const step = (now) => {\n      const t = Math.min(1, (now - startTs) / duration);\n      const eased = t < 0.5 ? 2*t*t : -1 + (4 - 2*t)*t;\n      const frame = Math.floor(start + (target - start) * eased);\n      lottieRef.current.goToAndStop(frame, true);\n      if (t < 1) rafRef.current = requestAnimationFrame(step); else lastFrameRef.current = target;\n    };\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    rafRef.current = requestAnimationFrame(step);\n    return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); };\n  }, [connectedCount]);\n\n  // swipe handlers for smooth paging\n  const onTouchStart = (e) => { touchStartX.current = e.touches[0].clientX; touchDeltaX.current = 0; };\n  const onTouchMove  = (e) => { touchDeltaX.current = e.touches[0].clientX - touchStartX.current; };\n  const onTouchEnd   = () => {\n    const dx = touchDeltaX.current; const THRESH = 40;\n    if (dx < -THRESH && currentPage < 3) setCurrentPage(currentPage + 1);\n    else if (dx > THRESH && currentPage > 1) setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <div className=\"w-full h-full relative\" style={{ height: Math.min('90vh', Math.max(600, Math.min(720, vh * 0.9))), minHeight: 580, maxHeight: 720 }}>\n      <style>{fadeSlideInKeyframes}</style>\n\n      {/* persona as background (unchanged) */}\n      <div aria-hidden style={{ position: 'absolute', left: '50%', top: PERSONA_TOP, transform: 'translateX(-50%)', width: personaSide, height: personaSide, zIndex: 0, pointerEvents: 'none', opacity: 0.95 }}>\n        <div className=\"overflow-hidden rounded-[28px] w-full h-full\">\n          <Lottie lottieRef={lottieRef} animationData={personaAnim} autoplay={false} loop={false} style={{ width: '100%', height: '100%' }} />\n        </div>\n      </div>\n\n      {/* content above persona */}\n      <div className=\"relative z-10 h-full flex flex-col\">\n        {/* header (unchanged visuals) */}\n        <div className=\"px-6 pt-16 pb-4 text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 leading-tight\">Connect App Data</h1>\n          <p className=\"text-gray-600 text-base\">More Connections, Better Personalization.</p>\n        </div>\n\n        {/* icons band — placed LOWER per request */}\n        <div className=\"px-6 flex-shrink-0\" style={{ height: ICONS_H, marginTop: ICONS_TOP_OFFSET }}>\n          <div className=\"h-full flex items-center justify-center\">\n            <div\n              className=\"grid w-full box-border relative\"\n              onTouchStart={onTouchStart}\n              onTouchMove={onTouchMove}\n              onTouchEnd={onTouchEnd}\n                    style={{\n                gridAutoFlow: 'column',\n                gridTemplateColumns: `repeat(${platforms.length}, minmax(0,1fr))`,\n                columnGap: currentPage === 1 ? GAP_PAGE1 : GAP_PAGE2,\n                alignItems: 'center',\n                justifyItems: 'center',\n                paddingInline: 8,\n                overflow: 'hidden',\n              }}\n            >\n              {platforms.map((p, idx) => {\n                const on = !!connectedAccounts[p.name];\n                const busy = false; // keep icon static visually per request\n                const isSel = selected === p.name;\n                const shift = (currentPage === 1 ? idx : idx - 2) * 14;\n                return (\n                  <div key={p.name} className=\"transition-all duration-300\" style={{ opacity: 0, transform: `translateX(${shift}px)`, animation: 'fadeSlideIn 0.28s forwards', ['--slide-x']: `${shift}px` }}>\n                    <button\n                      type=\"button\"\n                      onClick={() => { \n                        setSelected(p.name);\n                        if (p.directLink) {\n                          window.open(p.directLink, '_blank');\n                        } else {\n                          handleSwitch(p.name);\n                        }\n                      }}\n                      className=\"relative grid place-items-center outline-none\"\n                      style={{ width: SLOT, height: SLOT }}\n                      title={p.name}\n                    >\n                      <div className={`rounded-full border-3 transition-all duration-150 ease-out flex items-center justify-center shadow-lg ${on ? 'border-blue-600 bg-white text-black shadow-blue-500/70' : 'border-gray-300 hover:border-gray-400 bg-white text-black'}`}\n                           style={{ width: CIRCLE, height: CIRCLE, transform: `scale(${isSel ? ACTIVE_SCALE : 1})`, transformOrigin: 'center' }}>\n                        <div className=\"flex items-center justify-center\" style={{ width: 20, height: 20 }}>\n                          {p.icon}\n                    </div>\n                      </div>\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* dots navigation (no numbers) - directly under icons, above card */}\n        <div className=\"relative flex items-center justify-center gap-4 select-none\" style={{ marginTop: 20, zIndex: 25 }}>\n          {[1,2,3].map(n => (\n            <button key={n} onClick={() => setCurrentPage(n)} aria-label={`page ${n}`} className=\"relative\" style={{ width: 12, height: 12 }}>\n              <span className={`block rounded-full ${currentPage === n ? 'bg-blue-600 scale-110' : 'bg-gray-300'} transition-transform`} style={{ width: 12, height: 12 }} />\n            </button>\n          ))}\n        </div>\n\n        {/* info sheet — positioned right above the footer */}\n        <div className=\"px-6 flex-shrink-0\" style={{ position: 'absolute', bottom: FOOTER_H + 24, left: 0, right: 0, zIndex: 20 }}>\n          <div className=\"mx-auto rounded-2xl bg-white shadow-sm border border-gray-200 px-4 py-2.5\" style={{ width: 'min(680px,92%)', maxHeight: vh * 0.2 }}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-gray-900 font-medium\">{selected}</div>\n              <button\n                type=\"button\"\n                role=\"switch\"\n                aria-checked={!!connectedAccounts[selected]}\n                aria-label={`toggle ${selected}`}\n                onClick={() => handleSwitch(selected)}\n                disabled={isConnecting && connectingPlatform !== selected}\n                className={`relative inline-flex items-center transition-colors disabled:opacity-50 ${connectedAccounts[selected] ? 'bg-black' : 'bg-gray-200'} rounded-full`}\n                style={{ width: 56, height: 32 }}\n              >\n                <span className=\"absolute bg-white rounded-full shadow\" style={{ width: 24, height: 24, transform: connectedAccounts[selected] ? 'translateX(26px)' : 'translateX(6px)', transition: 'transform 160ms ease' }} />\n              </button>\n            </div>\n            <div className=\"mt-3\">\n              <div className=\"rounded-2xl bg-gray-50 text-gray-700 text-sm leading-6 px-4 py-3 shadow-[inset_0_0_0_1px_rgba(0,0,0,0.04)]\">\n                {descriptions[selected] || null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* footer — fixed near bottom; no change to persona */}\n        <div className=\"absolute left-0 right-0 px-6\" style={{ bottom: 0, height: FOOTER_H + 20, paddingBottom: 16, background: 'linear-gradient(to top, white 60%, rgba(255,255,255,0.9) 85%, rgba(255,255,255,0))', zIndex: 30 }}>\n          <div className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\" onClick={() => {\n            const connected = Object.entries(connectedAccounts).filter(([, v]) => v).map(([k]) => k);\n            onComplete?.({ connectedAccounts: connected, totalConnections: connected.length });\n          }}>\n            Update\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n          </div>\n          <div onClick={() => onComplete?.({ connectedAccounts: [], totalConnections: 0 })} className=\"w-full text-gray-600 text-base font-medium py-2 text-center cursor-pointer hover:text-gray-800 transition-colors\">Skip</div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [pinRequirements, setPinRequirements] = useState({\n    length: false,\n    uppercase: false,\n    number: false,\n  });\n\n  // Check PIN requirements\n  useEffect(() => {\n    setPinRequirements({\n      length: pin.length >= 6,\n      uppercase: /[A-Z]/.test(pin),\n      number: /\\d/.test(pin),\n    });\n  }, [pin]);\n\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\n\n  const handleSubmit = () => {\n    if (allRequirementsMet) {\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\n        </div>\n\n        <div className=\"mb-6 flex-shrink-0\">\n          <input\n            type=\"password\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-white\"\n            placeholder=\"Enter your PIN\"\n            maxLength={20}\n            style={{\n              color: '#000000',\n              WebkitTextFillColor: '#000000',\n              backgroundColor: '#FFFFFF'\n            }}\n          />\n        </div>\n\n        {/* Scrollable requirements list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-3 pb-4\">\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.length && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.uppercase && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.number && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain a number.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\n            allRequirementsMet \n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n          }`}\n          onClick={allRequirementsMet ? handleSubmit : undefined}\n        >\n          Continue\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Profile', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: 'User',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'rawMemories', \n    name: 'Raw Memory Data', \n    description: 'LLM conversation history from ChatGPT, Claude, Gemini, and other AI platforms', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'Your conversation history with AI assistants. Provides rich contextual data about your preferences and communication patterns.',\n    privacyLink: 'https://onairos.uk/privacy#raw-memories-data'\n  },\n  { \n    id: 'preferences', \n    name: 'User Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: 'Grid3X3',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  },\n  { \n    id: 'personality', \n    name: 'Personality Traits', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  }\n];\n\n// Data Type Toggle Component with compact checkbox design\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const handleToggle = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  const getIconComponent = (iconName) => {\n    const iconProps = { className: \"w-4 h-4 text-gray-600\" };\n    \n    switch (iconName) {\n      case 'User':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        );\n      case 'Grid3X3':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n          </svg>\n        );\n      case 'Brain':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return <span className=\"text-lg\">{iconName}</span>;\n    }\n  };\n\n            return (\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center gap-4\">\n                        <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0\">\n                            {getIconComponent(dataType.icon)}\n                        </div>\n                        <div className=\"min-w-0 flex-1\">\n                            <span className=\"font-medium text-gray-900 text-sm\">{dataType.name}</span>\n                        </div>\n                    </div>\n      <div\n        onClick={handleToggle}\n        className={`w-5 h-5 rounded border-2 flex items-center justify-center cursor-pointer transition-colors flex-shrink-0 ${\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\n        }`}\n      >\n        {isEnabled && (\n          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = false, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple',\n  rawMemoriesOnly = false,\n  rawMemoriesConfig = null,\n  requestData = null\n}) => {\n  // Initialize selectedData based on requestData and rawMemoriesOnly mode\n  const getInitialSelectedData = () => {\n    const initial = { basic: true }; // Basic is always included\n    \n    if (requestData && Array.isArray(requestData)) {\n      // Set based on requestData array\n      requestData.forEach(dataType => {\n        if (dataType !== 'basic') { // basic is always true\n          initial[dataType] = true;\n        }\n      });\n    } else if (rawMemoriesOnly) {\n      // RAW memories only mode\n      initial.rawMemories = true;\n    } else {\n      // Default mode\n      initial.personality = false;\n      initial.preferences = false;\n      initial.rawMemories = false;\n    }\n    \n    return initial;\n  };\n\n  const [selectedData, setSelectedData] = useState(getInitialSelectedData());\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              InferenceResult: {\n                output: Array.from({ length: 16 }, () => [Math.random()]),\n                traits: {\n                  personality_traits: {\n                    positive_traits: {\n                      creativity: 85.5,\n                      empathy: 78.2,\n                      leadership: 72.8,\n                      analytical_thinking: 88.9,\n                      communication: 81.3\n                    },\n                    traits_to_improve: {\n                      patience: 45.2,\n                      time_management: 52.7,\n                      delegation: 38.9\n                    }\n                  }\n                }\n              },\n              persona: {\n                id: 1,\n                name: \"Test Persona\",\n                description: \"Simulated persona for testing\"\n              },\n              inference_metadata: {\n                size_used: \"Large\",\n                total_outputs: 16,\n                persona_applied: \"Test Persona\"\n              }\n            };\n\n            // Log detailed test mode response with explanations\n            const { logOnairosResponse } = require('../utils/apiResponseLogger');\n            console.log('🧪 Test Mode: Simulated API Response');\n            logOnairosResponse(simulatedApiData, 'TEST_MODE', { \n              detailed: true, \n              showRawData: false \n            });\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed');\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            \n            // Log detailed API response with explanations\n            const { logOnairosResponse } = require('../utils/apiResponseLogger');\n            console.log('🔥 Raw API Response received from backend');\n            logOnairosResponse(apiData, apiEndpoint, { \n              detailed: true, \n              showRawData: false // Set to true to see raw JSON\n            });\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col min-h-0\">\n      {/* Content - Flexible center area with proper constraints */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0\" style={{ minHeight: 'calc(100vh - 200px)' }}>\n        {/* Icon Flow */}\n        <div className=\"mb-4 flex justify-center items-center gap-4 flex-shrink-0\">\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </div>\n          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <span className=\"text-xl font-serif font-bold text-black\">B</span>\n          </div>\n        </div>\n\n        {/* Title Section */}\n        <div className=\"mb-4 flex-shrink-0\">\n          <h1 className=\"text-xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            {appName} wants to personalize your experience\n          </h1>\n          <p className=\"text-gray-600 text-sm\">Choose what to share:</p>\n        </div>\n\n        {/* Consent Options - Scrollable area */}\n        <div className=\"flex-1 overflow-y-auto min-h-0\">\n          <div className=\"space-y-4 pb-4\">\n            {dataTypes\n              .filter(dataType => {\n                if (rawMemoriesOnly) {\n                  // In RAW memories only mode, show only basic and rawMemories\n                  return dataType.id === 'basic' || dataType.id === 'rawMemories';\n                }\n                // In normal mode, show all data types\n                return true;\n              })\n              .map((dataType, index) => (\n                <DataTypeToggle\n                  key={dataType.id}\n                  dataType={dataType}\n                  isEnabled={selectedData[dataType.id]}\n                  onToggle={handleDataToggle}\n                  isLast={index === dataTypes.length - 1}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom with guaranteed visibility */}\n      <div className=\"px-6 pb-6 pt-3 flex-shrink-0 space-y-2 bg-white border-t border-gray-100\">\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-3 text-sm font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          onClick={fetchUserData}\n          disabled={isLoadingApi || selectedCount === 0}\n        >\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ cancelled: true })}\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-3 text-sm font-medium text-center cursor-pointer transition-colors\"\n        >\n          Decline\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div className=\"mt-3 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\n            <p className=\"text-xs\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = false }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from \"react\";\nimport Lottie from 'lottie-react';\nimport rainAnim from '../../public/rain-anim.json';\n\nexport default function LoadingScreen({ onComplete }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dotCount, setDotCount] = useState(0);\n\n  const loadingStates = [\n    { message: \"Validating PIN and continuing training\", progress: 20 },\n    { message: \"Uploading model to secure storage\", progress: 40 },\n    { message: \"Running test inference\", progress: 60 },\n    { message: \"Storing results in databases\", progress: 80 },\n    { message: \"Complete!\", progress: 100 },\n  ];\n\n  useEffect(() => {\n    const stateInterval = setInterval(() => {\n      setCurrentStep((prev) => {\n        const nextStep = prev + 1;\n        if (nextStep >= loadingStates.length) {\n          // Loading complete, call onComplete after a short delay\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return prev; // Keep at last step\n        }\n        return nextStep;\n      });\n    }, 3000); // Change state every 3 seconds\n\n    return () => clearInterval(stateInterval);\n  }, [loadingStates.length, onComplete]);\n\n  useEffect(() => {\n    const dotInterval = setInterval(() => {\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\n    }, 500); // Change dots every 500ms\n\n    return () => clearInterval(dotInterval);\n  }, []);\n\n  const currentState = loadingStates[currentStep];\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647, pointerEvents: 'auto' }}>\n      {/* Modal - Full height from bottom */}\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n        {/* Header */}\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\n        </div>\n\n        {/* Content - Rain animation and loading state */}\n        <div className=\"flex-1 flex flex-col px-6\">\n          {/* Rain Animation */}\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div style={{ width: '100%', maxWidth: '400px', aspectRatio: '1' }}>\n              <Lottie\n                animationData={rainAnim}\n                loop={true}\n                autoplay={true}\n                style={{ width: '100%', height: '100%' }}\n              />\n            </div>\n          </div>\n\n          {/* Loading State - Positioned at bottom */}\n          <div className=\"flex-shrink-0 pb-12\">\n            <div className=\"text-center\">\n              <h1 className=\"font-bold text-gray-900 leading-tight mb-6\" style={{ fontSize: 'clamp(16px, 4vw, 20px)' }}>\n                {currentState.message}\n                {currentState.message !== \"Complete!\" && (\n                  <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\n                )}\n              </h1>\n\n              <div className=\"mx-auto\" style={{ width: 'clamp(200px, 50vw, 300px)' }}>\n                <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                  <div\n                    className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\n                    style={{ width: `${currentState.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom spacing */}\n        <div className=\"h-20 flex-shrink-0\"></div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: 'clamp(8px, 2vw, 16px) clamp(16px, 4vw, 32px) clamp(6px, 1.5vw, 12px)'\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: 'clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(20px, 5vw, 28px)',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 clamp(6px, 1.5vw, 12px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.2'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(14px, 3.5vw, 18px)',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 clamp(20px, 5vw, 40px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: 'clamp(40px, 8vw, 56px)',\n    height: 'clamp(40px, 8vw, 56px)',\n    margin: '0 auto clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(20px, 5vw, 28px)'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 2147483647,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 200ms ease',\n    willChange: 'opacity',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '90vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    transform: 'translateY(0)',\n    transition: 'transform 220ms ease, opacity 220ms ease',\n    willChange: 'transform, opacity',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport LoadingScreen from './components/LoadingScreen.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = false, // Production mode by default - set to true for testing\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true },\n  priorityPlatform = null, // Platform to prioritize (e.g., 'gmail', 'pinterest', 'linkedin')\n  rawMemoriesOnly = false, // Show only LLM connections when true\n  rawMemoriesConfig = null // Configuration for RAW memories collection\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called - resetting flow');\n      console.log('🔥 testMode prop:', testMode);\n      console.log('🔥 window.onairosApiKey:', window.onairosApiKey);\n      // ALWAYS reset flow on open to start fresh every time\n      setCurrentFlow('welcome');\n      setUserData(null);\n      try { localStorage.removeItem('onairosUser'); } catch {}\n      setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n    // Reset flow and session so next open starts fresh\n    setCurrentFlow('welcome');\n    try { localStorage.removeItem('onairosUser'); } catch {}\n    setUserData(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = async (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Trigger training job if user has connected accounts\n    if (updatedUserData.connectedAccounts && updatedUserData.connectedAccounts.length > 0) {\n      console.log('🎓 Triggering training job for connected accounts:', updatedUserData.connectedAccounts);\n      \n      try {\n        // Use local backend for training if available, otherwise skip\n        const trainingBaseUrl = (typeof window !== 'undefined' && window.onairosTrainingUrl) || 'http://localhost:3001';\n        const apiKey = (typeof window !== 'undefined' && window.onairosApiKey) || 'OnairosIsAUnicorn2025';\n        \n        console.log('🎓 Training endpoint:', `${trainingBaseUrl}/training-queue/queue`);\n        \n        // Use the training-queue endpoint to queue the training job\n        const response = await fetch(`${trainingBaseUrl}/training-queue/queue`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': apiKey,\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({\n            username: updatedUserData.userName || updatedUserData.email?.split('@')[0],\n            modelType: 'FinalMLP',\n            connectedAccounts: updatedUserData.connectedAccounts,\n            priority: 'normal',\n            source: 'web_sdk'\n          })\n        });\n        \n        if (response.ok) {\n          const trainingData = await response.json();\n          console.log('🎓 Training job queued successfully:', trainingData);\n        } else {\n          const errorText = await response.text();\n          console.warn('⚠️ Training job failed to queue (this is expected if training endpoint is not available):', response.status, errorText);\n        }\n      } catch (error) {\n        console.warn('⚠️ Training endpoint not available (this is expected in production):', error.message);\n      }\n    }\n    \n    // Move to loading flow\n    setCurrentFlow('loading');\n  };\n\n  const handleLoadingComplete = () => {\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    // Use centralized close to also reset flow and session\n    handleCloseOverlay();\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Enhanced user data formatting for better display\n    const { logFormattedUserData } = require('./utils/userDataFormatter');\n    \n    // Add user data to the result for comprehensive formatting\n    const completeResult = {\n      ...formattedResult,\n      userData: updatedUserData\n    };\n\n    // Log formatted user data for better readability\n    const enhancedResult = logFormattedUserData(completeResult);\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with enhanced result');\n    if (onComplete) {\n      try {\n        onComplete(enhancedResult);\n        console.log('🔥 onComplete callback executed successfully with enhanced formatting');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n            webpageName={webpageName}\n            appIcon={appIcon}\n            testMode={testMode}\n          />\n        );\n      case 'email':\n        return (\n          <div className=\"h-[min(85vh,700px)]\">\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n          </div>\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n            priorityPlatform={priorityPlatform}\n            rawMemoriesOnly={rawMemoriesOnly}\n            rawMemoriesConfig={rawMemoriesConfig}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n            rawMemoriesOnly={rawMemoriesOnly}\n            rawMemoriesConfig={rawMemoriesConfig}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'email' ? (\n            // Special case for email - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={handleCloseOverlay}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Email Content */}\n                <div className=\"h-[min(85vh,700px)]\">\n                  <EmailAuth \n                    onSuccess={handleEmailAuthSuccess}\n                    testMode={testMode}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                  priorityPlatform={priorityPlatform}\n                  rawMemoriesOnly={rawMemoriesOnly}\n                  rawMemoriesConfig={rawMemoriesConfig}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'dataRequest' ? (\n            // Special case for dataRequest - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* DataRequest Content */}\n                <DataRequest \n                  onComplete={handleDataRequestComplete}\n                  userEmail={userData?.email}\n                  requestData={requestData}\n                  appName={webpageName}\n                  autoFetch={autoFetch}\n                  testMode={testMode}\n                  appIcon={appIcon}\n                  connectedAccounts={userData?.connectedAccounts || {}}\n                  rawMemoriesOnly={rawMemoriesOnly}\n                  rawMemoriesConfig={rawMemoriesConfig}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'pin' ? (\n            // Special case for pin - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* PinSetup Content - Must take remaining height */}\n                <div className=\"flex-1 min-h-0\">\n                  <PinSetup \n                    onComplete={handlePinSetupComplete}\n                    onBack={() => setCurrentFlow('onboarding')}\n                    userEmail={userData?.email}\n                  />\n                </div>\n            </div>\n          </div>\n          ) : currentFlow === 'loading' ? (\n            // Loading screen\n            <LoadingScreen onComplete={handleLoadingComplete} />\n        ) : (\n            // All other flows use PageLayout wrapper\n          <ModalPageLayout\n            visible={showOverlay}\n            onClose={handleCloseOverlay}\n              showBackButton={currentFlow === 'training'}\n            onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n              if (currentFlow === 'onboarding') setCurrentFlow('email');\n              if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n              if (currentFlow === 'training') setCurrentFlow('pin');\n            }}\n            title={getFlowTitle()}\n            subtitle={getFlowSubtitle()}\n            icon={getFlowIcon()}\n            centerContent={true}\n          >\n            {renderCurrentFlow()}\n          </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","/**\n * API Response Logger for Onairos SDK\n * Provides detailed console logging with explanatory labels for API responses\n * \n * Response Format from Backend:\n * {\n *   InferenceResult: {\n *     output: [[0.95], [0.89], ...],  // Content preference scores (0-1 scale)\n *     traits: {\n *       personality_traits: {\n *         positive_traits: {...},      // Strengths (0-100 scale)\n *         traits_to_improve: {...}     // Growth areas (0-100 scale)\n *       }\n *     }\n *   },\n *   persona: {...},                    // Optional: test persona info\n *   inference_metadata: {...},         // Optional: context about inference\n *   llmData: {...},                    // Optional: LLM conversation data\n *   available_personas: [...]          // Optional: persona list\n * }\n */\n\n/**\n * Format a score as a visual bar\n * @param {number} score - Score between 0 and 1\n * @param {number} maxBars - Maximum number of bars to display\n * @returns {string} Visual bar representation\n */\nfunction formatScoreBar(score, maxBars = 10) {\n  const filledBars = Math.round(score * maxBars);\n  const emptyBars = maxBars - filledBars;\n  return '█'.repeat(filledBars) + '░'.repeat(emptyBars);\n}\n\n/**\n * Format a percentage score as a visual bar\n * @param {number} score - Score between 0 and 100\n * @param {number} maxBars - Maximum number of bars to display\n * @returns {string} Visual bar representation\n */\nfunction formatPercentageBar(score, maxBars = 10) {\n  const filledBars = Math.round((score / 100) * maxBars);\n  const emptyBars = maxBars - filledBars;\n  return '█'.repeat(filledBars) + '░'.repeat(emptyBars);\n}\n\n/**\n * Get emoji indicator for score level\n * @param {number} score - Score between 0 and 1\n * @returns {string} Emoji indicator\n */\nfunction getScoreEmoji(score) {\n  if (score >= 0.8) return '🔥';\n  if (score >= 0.6) return '⭐';\n  if (score >= 0.4) return '👍';\n  if (score >= 0.2) return '📊';\n  return '📉';\n}\n\n/**\n * Get emoji indicator for percentage score\n * @param {number} score - Score between 0 and 100\n * @returns {string} Emoji indicator\n */\nfunction getPercentageEmoji(score) {\n  if (score >= 80) return '🔥';\n  if (score >= 60) return '⭐';\n  if (score >= 40) return '👍';\n  if (score >= 20) return '📊';\n  return '📉';\n}\n\n/**\n * Log content preference scores with detailed explanations\n * @param {Array} output - Array of content preference scores\n */\nfunction logContentPreferences(output) {\n  if (!output || !Array.isArray(output)) {\n    console.log('   No content preference data available');\n    return;\n  }\n\n  console.log('   📊 Content Preference Scores (0.0 = Not Interested, 1.0 = Highly Interested)');\n  console.log('   ─────────────────────────────────────────────────────────────────────');\n  \n  // Category names for the 16 content types\n  const categories = [\n    'Technology & Innovation',\n    'Entertainment & Media', \n    'Health & Wellness',\n    'Business & Finance',\n    'Education & Learning',\n    'Travel & Adventure',\n    'Food & Cooking',\n    'Sports & Fitness',\n    'Art & Creativity',\n    'Science & Research',\n    'Fashion & Style',\n    'Gaming & Esports',\n    'Music & Audio',\n    'News & Politics',\n    'Home & Garden',\n    'Automotive & Transport'\n  ];\n\n  const formattedScores = output.map((scoreArray, index) => {\n    const score = Array.isArray(scoreArray) ? scoreArray[0] : scoreArray;\n    const categoryName = categories[index] || `Category ${index + 1}`;\n    return {\n      Category: categoryName,\n      Score: score.toFixed(3),\n      'Visual': `${formatScoreBar(score)} ${getScoreEmoji(score)}`,\n      'Interest Level': score >= 0.8 ? 'Very High' : \n                       score >= 0.6 ? 'High' : \n                       score >= 0.4 ? 'Moderate' : \n                       score >= 0.2 ? 'Low' : 'Very Low'\n    };\n  });\n\n  console.table(formattedScores);\n  \n  // Summary statistics\n  const scores = output.map(s => Array.isArray(s) ? s[0] : s);\n  const avgScore = scores.reduce((a, b) => a + b, 0) / scores.length;\n  const maxScore = Math.max(...scores);\n  const minScore = Math.min(...scores);\n  const topCategory = categories[scores.indexOf(maxScore)];\n  \n  console.log(`   📈 Summary: Avg ${avgScore.toFixed(3)} | Max ${maxScore.toFixed(3)} (${topCategory}) | Min ${minScore.toFixed(3)}`);\n}\n\n/**\n * Log personality traits with detailed explanations\n * @param {Object} traits - Personality traits object\n */\nfunction logPersonalityTraits(traits) {\n  if (!traits || !traits.personality_traits) {\n    console.log('   No personality trait data available');\n    return;\n  }\n\n  const { positive_traits, traits_to_improve } = traits.personality_traits;\n\n  // Log positive traits (strengths)\n  if (positive_traits && Object.keys(positive_traits).length > 0) {\n    console.log('   ✨ Positive Traits (Strengths) - Scale: 0-100');\n    console.log('   ─────────────────────────────────────────────────────────────────────');\n    \n    const positiveData = Object.entries(positive_traits).map(([trait, score]) => ({\n      Trait: trait.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n      Score: score.toFixed(1),\n      'Visual': `${formatPercentageBar(score)} ${getPercentageEmoji(score)}`,\n      'Level': score >= 80 ? 'Exceptional' : \n               score >= 60 ? 'Strong' : \n               score >= 40 ? 'Moderate' : \n               score >= 20 ? 'Developing' : 'Emerging'\n    }));\n    \n    console.table(positiveData);\n  }\n\n  // Log traits to improve (growth areas)\n  if (traits_to_improve && Object.keys(traits_to_improve).length > 0) {\n    console.log('   🎯 Traits to Improve (Growth Areas) - Scale: 0-100');\n    console.log('   ─────────────────────────────────────────────────────────────────────');\n    \n    const improvementData = Object.entries(traits_to_improve).map(([trait, score]) => ({\n      Trait: trait.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n      Score: score.toFixed(1),\n      'Visual': `${formatPercentageBar(score)} ${getPercentageEmoji(score)}`,\n      'Priority': score >= 80 ? 'High Priority' : \n                  score >= 60 ? 'Medium Priority' : \n                  score >= 40 ? 'Low Priority' : \n                  score >= 20 ? 'Optional' : 'Minimal'\n    }));\n    \n    console.table(improvementData);\n  }\n}\n\n/**\n * Log persona information\n * @param {Object} persona - Persona object\n */\nfunction logPersonaInfo(persona) {\n  if (!persona) return;\n\n  console.log('   👤 Applied Persona');\n  console.log('   ─────────────────────────────────────────────────────────────────────');\n  console.log(`   Name: ${persona.name || 'Unknown'}`);\n  console.log(`   ID: ${persona.id || 'N/A'}`);\n  if (persona.description) {\n    console.log(`   Description: ${persona.description}`);\n  }\n}\n\n/**\n * Log inference metadata\n * @param {Object} metadata - Inference metadata object\n */\nfunction logInferenceMetadata(metadata) {\n  if (!metadata) return;\n\n  console.log('   ℹ️  Inference Metadata');\n  console.log('   ─────────────────────────────────────────────────────────────────────');\n  if (metadata.size_used) console.log(`   Model Size: ${metadata.size_used}`);\n  if (metadata.total_outputs) console.log(`   Total Outputs: ${metadata.total_outputs}`);\n  if (metadata.persona_applied) console.log(`   Persona Applied: ${metadata.persona_applied}`);\n  if (metadata.inference_categories) {\n    console.log(`   Categories: ${metadata.inference_categories.join(', ')}`);\n  }\n}\n\n/**\n * Log LLM conversation data\n * @param {Object} llmData - LLM data object\n */\nfunction logLLMData(llmData) {\n  if (!llmData || !llmData.hasLlmData) {\n    console.log('   No LLM conversation data included');\n    return;\n  }\n\n  console.log('   💬 LLM Conversation Data');\n  console.log('   ─────────────────────────────────────────────────────────────────────');\n  console.log(`   Total Interactions: ${llmData.totalInteractions || 0}`);\n  \n  if (llmData.platforms) {\n    console.log('   Platforms:');\n    Object.entries(llmData.platforms).forEach(([platform, count]) => {\n      console.log(`      ${platform}: ${count} interactions`);\n    });\n  }\n  \n  if (llmData.recentInteractions && llmData.recentInteractions.length > 0) {\n    console.log(`   Recent Interactions: ${llmData.recentInteractions.length} available`);\n  }\n}\n\n/**\n * Main logging function for Onairos API responses\n * Logs the complete API response with detailed explanations\n * \n * @param {Object} response - The complete API response object\n * @param {string} endpoint - The endpoint that was called (for context)\n * @param {Object} options - Logging options\n * @param {boolean} options.detailed - Whether to show detailed logs (default: true)\n * @param {boolean} options.showRawData - Whether to show raw response data (default: false)\n */\nexport function logOnairosResponse(response, endpoint = 'unknown', options = {}) {\n  const { detailed = true, showRawData = false } = options;\n\n  console.group('🎯 Onairos API Response');\n  console.log(`📡 Endpoint: ${endpoint}`);\n  console.log(`⏰ Timestamp: ${new Date().toISOString()}`);\n  console.log('═══════════════════════════════════════════════════════════════════════');\n\n  if (!response) {\n    console.error('❌ No response data received');\n    console.groupEnd();\n    return;\n  }\n\n  // Log InferenceResult data\n  if (response.InferenceResult) {\n    console.group('📊 Inference Result');\n    \n    // Log content preferences (output scores)\n    if (response.InferenceResult.output) {\n      console.group('🎯 Content Preferences');\n      logContentPreferences(response.InferenceResult.output);\n      console.groupEnd();\n    }\n    \n    // Log personality traits\n    if (response.InferenceResult.traits) {\n      console.group('🧠 Personality Analysis');\n      logPersonalityTraits(response.InferenceResult.traits);\n      console.groupEnd();\n    }\n    \n    console.groupEnd();\n  }\n\n  // Log persona information (test mode)\n  if (response.persona) {\n    console.group('👤 Persona Information');\n    logPersonaInfo(response.persona);\n    console.groupEnd();\n  }\n\n  // Log inference metadata\n  if (response.inference_metadata) {\n    console.group('ℹ️  Metadata');\n    logInferenceMetadata(response.inference_metadata);\n    console.groupEnd();\n  }\n\n  // Log LLM data if included\n  if (response.llmData) {\n    console.group('💬 LLM Data');\n    logLLMData(response.llmData);\n    console.groupEnd();\n  }\n\n  // Log available personas if present\n  if (response.available_personas && Array.isArray(response.available_personas)) {\n    console.group('👥 Available Personas');\n    console.log(`   Total: ${response.available_personas.length} personas available`);\n    console.table(response.available_personas.map(p => ({\n      ID: p.id,\n      Name: p.name,\n      Description: p.description?.substring(0, 50) + '...'\n    })));\n    console.groupEnd();\n  }\n\n  // Show raw data if requested\n  if (showRawData) {\n    console.group('📦 Raw Response Data');\n    console.log(response);\n    console.groupEnd();\n  }\n\n  console.log('═══════════════════════════════════════════════════════════════════════');\n  console.log('✅ Response logging complete');\n  console.groupEnd();\n}\n\n/**\n * Log a simplified version of the response (for production)\n * @param {Object} response - The API response\n * @param {string} endpoint - The endpoint called\n */\nexport function logOnairosResponseSimple(response, endpoint = 'unknown') {\n  console.log('🎯 Onairos API Response:', {\n    endpoint,\n    timestamp: new Date().toISOString(),\n    hasInferenceResult: !!response?.InferenceResult,\n    hasContentPreferences: !!response?.InferenceResult?.output,\n    hasPersonalityTraits: !!response?.InferenceResult?.traits,\n    hasLLMData: !!response?.llmData?.hasLlmData,\n    contentCategoriesCount: response?.InferenceResult?.output?.length || 0,\n    personalityTraitsCount: response?.InferenceResult?.traits?.personality_traits ? \n      Object.keys(response.InferenceResult.traits.personality_traits.positive_traits || {}).length +\n      Object.keys(response.InferenceResult.traits.personality_traits.traits_to_improve || {}).length : 0\n  });\n}\n\nexport default {\n  logOnairosResponse,\n  logOnairosResponseSimple\n};\n\n\n"],"names":["formatUserDataForDisplay","result","_result$userData","_result$userData2","_result$userData3","_result$userData4","_result$userData5","_result$userData6","_result$userData7","formatted","_objectSpread","userDataSummary","requestInfo","timestamp","Date","toISOString","appName","userHash","testMode","dataTypesRequested","approvedData","userProfile","email","userData","userType","onboardingComplete","pinCreated","trainingComplete","modelReady","connectedAccounts","formatConnectedAccounts","aiData","formatAIResponseData","apiResponse","status","success","hasApiResponse","hasErrors","error","apiError","prettyPrint","lines","push","repeat","concat","join","toLocaleString","summary","platforms","length","forEach","platform","name","hasData","dataTypes","dataType","type","toUpperCase","createPrettyPrintVersion","accounts","Array","isArray","count","map","account","connectedAt","a","_apiResponse$Inferenc","_apiResponse$Inferenc3","available","InferenceResult","traits","personalityDict","_apiResponse$Inferenc2","personalityData","data","Object","keys","traitResult","traitDict","preferencesData","_apiResponse$Inferenc4","output","d","logFormattedUserData","console","log","WelcomeScreen","_ref","onContinue","onClose","useEffect","script","document","createElement","src","async","head","appendChild","existingScript","querySelector","removeChild","React","className","style","height","alt","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","warning","info","hover","pressed","focus","IconCircle","size","children","width","borderRadius","fontSize","color","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","props","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","setTimeout","firstInput","handleEmailSubmit","e","preventDefault","test","validateEmail","baseUrl","window","onairosBaseUrl","apiKey","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","trim","toLowerCase","ok","Error","json","message","handleGoogleAuth","_localStorage$getItem","sdkConfig","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","toString","popup","open","checkInterval","setInterval","closed","clearInterval","Google","handleCodeSubmit","simulatedResponse","verified","token","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","testAccount","jwtToken","value","onChange","target","placeholder","required","lineHeight","from","_","index","key","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","PrimaryButton","flex","minHeight","Check","chatgptIcon","claudeIcon","geminiIcon","grokIcon","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","fadeSlideInKeyframes","UniversalOnboarding","onComplete","lottieRef","useRef","lastFrameRef","rafRef","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","selected","setSelected","currentPage","setCurrentPage","touchStartX","touchDeltaX","vh","setVh","innerHeight","onResize","addEventListener","removeEventListener","personaSide","Math","min","SLOT","max","floor","ACTIVE_SCALE","ICONS_TOP_OFFSET","round","igGradId","useId","Brand","ChatGPT","objectFit","Claude","Gemini","Grok","Instagram","id","cx","cy","r","offset","stopColor","YouTube","Reddit","LinkedIn","x","y","rx","Twitter","aiLinks","descriptions","allPlatforms","connector","icon","directLink","page","slice","p","removeItem","s","handleSwitch","plat","find","_JSON$parse","parse","res","session","candidates","youtube","linkedin","reddit","pinterest","instagram","github","facebook","gmail","oauthUrl","k","touched","it","hostname","close","_unused","_unused2","_unused3","_unused4","connectToPlatform","connectedCount","values","filter","Boolean","current","totalFrames","personaAnim","progress","start","startTs","performance","t","eased","frame","goToAndStop","requestAnimationFrame","cancelAnimationFrame","maxHeight","transform","zIndex","pointerEvents","Lottie","animationData","autoplay","loop","marginTop","onTouchStart","touches","clientX","onTouchMove","onTouchEnd","dx","gridAutoFlow","gridTemplateColumns","columnGap","justifyItems","paddingInline","idx","on","isSel","shift","animation","title","transformOrigin","n","FOOTER_H","role","paddingBottom","connected","entries","v","_ref3","totalConnections","xmlns","PinSetup","onBack","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","WebkitTextFillColor","handleSubmit","undefined","description","tooltip","privacyLink","DataTypeToggle","isEnabled","onToggle","isLast","iconName","iconProps","getIconComponent","handleToggle","fillRule","clipRule","autoFetch","formatResponse","responseFormat","rawMemoriesOnly","rawMemoriesConfig","requestData","selectedData","setSelectedData","getInitialSelectedData","initial","basic","rawMemories","personality","preferences","isLoadingApi","setIsLoadingApi","setApiError","handleDataToggle","dataId","enabled","dt","prev","selectedCount","hash","str","i","charCodeAt","abs","generateUserHash","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","random","personality_traits","positive_traits","creativity","empathy","leadership","analytical_thinking","communication","traits_to_improve","patience","time_management","delegation","persona","inference_metadata","size_used","total_outputs","persona_applied","logOnairosResponse","require","detailed","showRawData","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","setProgress","isComplete","setIsComplete","steps","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","completionDelay","simulatedTraining","clearTimeout","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","aspectRatio","rainAnim","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","options","arguments","includeDictionary","includeArray","scores","_formatted$InferenceR","category","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","padding","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","willChange","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","appIcon","enableTraining","priorityPlatform","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","setUserData","checkExistingSession","savedUser","user","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","_updatedUserData$emai","trainingBaseUrl","onairosTrainingUrl","modelType","priority","source","trainingData","errorText","text","warn","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","enhancedResult","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","formatScoreBar","score","maxBars","filledBars","emptyBars","formatPercentageBar","getScoreEmoji","getPercentageEmoji","endpoint","group","groupEnd","metadata","llmData","categories","formattedScores","scoreArray","Category","Score","toFixed","table","avgScore","reduce","b","maxScore","minScore","topCategory","indexOf","logContentPreferences","positiveData","trait","Trait","replace","l","improvementData","logPersonalityTraits","inference_categories","hasLlmData","totalInteractions","recentInteractions","available_personas","_p$description","ID","Name","Description","substring","logOnairosResponseSimple","_response$InferenceRe","_response$InferenceRe2","_response$llmData","_response$InferenceRe3","_response$InferenceRe4","hasInferenceResult","hasContentPreferences","hasPersonalityTraits","hasLLMData","contentCategoriesCount","personalityTraitsCount"],"sourceRoot":""}