{"version":3,"file":"185.js","mappings":"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","sources":["webpack://OnairosLaravel/./src/components/WelcomeScreen.jsx","webpack://OnairosLaravel/./src/theme/colors.js","webpack://OnairosLaravel/./src/components/ui/PrimaryButton.jsx","webpack://OnairosLaravel/./src/components/EmailAuth.js","webpack://OnairosLaravel/./src/components/UniversalOnboarding.jsx","webpack://OnairosLaravel/./src/components/PinSetup.js","webpack://OnairosLaravel/./src/components/DataRequest.js","webpack://OnairosLaravel/./src/components/TrainingComponent.jsx","webpack://OnairosLaravel/./src/components/LoadingScreen.jsx","webpack://OnairosLaravel/./src/utils/responseFormatter.js","webpack://OnairosLaravel/./src/components/ui/PageLayout.jsx","webpack://OnairosLaravel/./src/onairosButton.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  // Load Sirv script for responsive images\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://scripts.sirv.com/sirvjs/v3/sirv.js';\n    script.async = true;\n    document.head.appendChild(script);\n    \n    return () => {\n      const existingScript = document.querySelector('script[src=\"https://scripts.sirv.com/sirvjs/v3/sirv.js\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Logo */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-20 h-20 flex items-center justify-center\">\n            <img \n              className=\"Sirv w-full h-full object-contain\" \n              data-src=\"https://anushkasirv.sirv.com/OnairosBlack.png\" \n              alt=\"Onairos Logo\"\n            />\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState, useEffect } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Auto-focus first PIN input when code step loads\n  useEffect(() => {\n    if (step === 'code') {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\n        if (firstInput) {\n          firstInput.focus();\n        }\n      }, 100);\n    }\n  }, [step]);\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      // Use the same Google OAuth logic as UniversalOnboarding\n      const sdkConfig = {\n        baseUrl: 'https://api2.onairos.uk',\n        apiKey: window.onairosApiKey || 'test-key',\n        enableHealthMonitoring: true,\n        enableAutoRefresh: true,\n        enableConnectionValidation: true\n      };\n\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\n      const params = new URLSearchParams({\n        username: username,\n        sdk_type: 'web',\n        return_url: window.location.origin + '/oauth-callback.html'\n      });\n\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\n      console.log('🔗 Starting Google OAuth from email flow...');\n      console.log('📋 Google OAuth URL:', fullUrl);\n\n      // Open popup for OAuth\n      const popup = window.open(\n        fullUrl,\n        'google_oauth',\n        'width=500,height=600,scrollbars=yes,resizable=yes'\n      );\n\n      if (!popup) {\n        throw new Error('Popup blocked. Please allow popups for this site.');\n      }\n\n      // Monitor popup for completion\n      const checkInterval = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(checkInterval);\n          console.log('✅ Google OAuth popup closed');\n          // Simulate successful OAuth for now\n          onSuccess({ \n            email: 'user@gmail.com', \n            method: 'google',\n            connectedAccounts: { Google: true }\n          });\n        }\n      }, 1000);\n\n    } catch (error) {\n      console.error('❌ Google OAuth failed:', error);\n      setError('Google authentication failed. Please try again.');\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'verify',\n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Use pre-existing Persona or create a new one in seconds\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            onClick={handleGoogleAuth}\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#4285F4\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"#34A853\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"#FBBC05\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"#EA4335\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-12 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full max-w-sm mx-auto bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\n        <h1 \n          className=\"font-bold mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-12 mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"max-w-sm mx-auto\">\n          <PrimaryButton\n            label=\"Continue\"\n            onClick={handleCodeSubmit}\n            loading={isLoading}\n            disabled={isLoading || code.length !== 6}\n            testId=\"verify-code-button\"\n          />\n        </div>\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"px-12 w-full\">\n        <div className=\"max-w-sm mx-auto\">\n          <button\n            type=\"button\"\n            onClick={() => setStep('email')}\n            className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n            style={{ color: COLORS.textSecondary }}\n          >\n            Use a different email\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6 pt-16 px-12\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} \n","import React, { useEffect, useId, useState, useRef } from 'react';\nimport Lottie from 'lottie-react';\nimport personaAnim from '../../public/persona-anim.json';\nimport chatgptIcon from '../../public/chatgpt.png';\nimport claudeIcon from '../../public/claude-color.png';\nimport geminiIcon from '../../public/gemini-color.png';\nimport grokIcon from '../../public/grok.png';\n\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web',\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true,\n};\n\nconst fadeSlideInKeyframes = `\n@keyframes fadeSlideIn {\n  from { opacity: 0; transform: translateX(var(--slide-x)); }\n  to { opacity: 1; transform: translateX(0); }\n}\n`;\n\nexport default function UniversalOnboarding({ onComplete }) {\n  const lottieRef = useRef(null);\n  const lastFrameRef = useRef(0);\n  const rafRef = useRef(null);\n\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [selected, setSelected] = useState('Instagram');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // swipe state\n  const touchStartX = useRef(0);\n  const touchDeltaX = useRef(0);\n\n  const [vh, setVh] = useState(() => (typeof window !== 'undefined' ? window.innerHeight : 800));\n  useEffect(() => {\n    const onResize = () => setVh(window.innerHeight);\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const FOOTER_H = 88;\n\n  // persona stays as requested (background, unchanged placement)\n  const personaSide = Math.min(vh * 0.52, 500);\n  const PERSONA_TOP = 96;\n\n  // icon layout (restore tighter spacing on page 1; place the band lower)\n  const SLOT = Math.max(56, Math.min(64, Math.floor(vh * 0.07)));\n  const CIRCLE = 42;\n  const GAP_PAGE1 = 12;\n  const GAP_PAGE2 = 20;\n  const ACTIVE_SCALE = vh < 760 ? 1.12 : 1.22;\n\n  const ICONS_H = 84;\n  const ICONS_TOP_OFFSET = Math.max(160, Math.min(220, Math.round(vh * 0.26))); // ~26vh, clamped for all screens\n\n  const igGradId = useId();\n\n  // ---- official brand SVGs (compact, consistent viewboxes) ----\n  const Brand = {\n    ChatGPT: <img src={chatgptIcon} alt=\"ChatGPT\" style={{ width: 24, height: 24, objectFit: 'contain' }} />,\n    Claude: <img src={claudeIcon} alt=\"Claude\" style={{ width: 24, height: 24, objectFit: 'contain' }} />,\n    Gemini: <img src={geminiIcon} alt=\"Gemini\" style={{ width: 24, height: 24, objectFit: 'contain' }} />,\n    Grok: <img src={grokIcon} alt=\"Grok\" style={{ width: 24, height: 24, objectFit: 'contain' }} />,\n    Instagram: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <defs>\n          <radialGradient id={igGradId} cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FDBB4B\"/>\n            <stop offset=\"40%\" stopColor=\"#E95950\"/>\n            <stop offset=\"70%\" stopColor=\"#BC2A8D\"/>\n            <stop offset=\"100%\" stopColor=\"#4C68D7\"/>\n          </radialGradient>\n        </defs>\n        <path fill={`url(#${igGradId})`} d=\"M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5zm5 5.5A4.5 4.5 0 1 0 16.5 12 4.5 4.5 0 0 0 12 7.5zm0 7.4A2.9 2.9 0 1 1 14.9 12 2.9 2.9 0 0 1 12 14.9Zm5.35-8.25a1.15 1.15 0 1 0 1.15 1.15 1.15 1.15 0 0 0-1.15-1.15Z\"/>\n      </svg>\n    ),\n    YouTube: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#FF0000\" d=\"M22.54 6.42a3 3 0 0 0-2.11-2.12C18.49 3.75 12 3.75 12 3.75s-6.49 0-8.43.55A3 3 0 0 0 1.46 6.42 31.63 31.63 0 0 0 1 12a31.63 31.63 0 0 0 .46 5.58 3 3 0 0 0 2.11 2.12C5.51 20.25 12 20.25 12 20.25s6.49 0 8.43-.55a3 3 0 0 0 2.11-2.12A31.63 31.63 0 0 0 23 12a31.63 31.63 0 0 0-.46-5.58z\"/>\n        <path fill=\"#FFF\" d=\"M10 8.75v6.5l6-3.25-6-3.25z\"/>\n        </svg>\n      ),\n    Reddit: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#FF4500\"/>\n        <circle cx=\"8.75\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <circle cx=\"15.25\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M7.9 15c.8.8 2.3 1.05 4.1 1.05S15.3 15.8 16.1 15c.2-.2.2-.5 0-.7-.2-.2-.5-.2-.7 0-.6.6-1.9.85-3.4.85S9.3 14.9 8.7 14.3c-.2-.2-.5-.2-.7 0-.2.2-.2.5 0 .7z\"/>\n        </svg>\n      ),\n    LinkedIn: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"3\" fill=\"#0A66C2\"/>\n        <rect x=\"5\" y=\"9\" width=\"3\" height=\"10\" fill=\"#FFF\"/>\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"1.5\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M16.8 19H13.9v-5c0-1.2-.5-1.8-1.4-1.8-.9 0-1.6.6-1.6 1.8V19H8V9h2.8v1.3c.5-.8 1.4-1.5 2.7-1.5 2 0 3.3 1.3 3.3 3.7V19z\"/>\n        </svg>\n      ),\n    Twitter: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#1DA1F2\" d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"/>\n        </svg>\n      ),\n  };\n\n  const aiLinks = {\n    ChatGPT: 'https://chat.openai.com',\n    Claude: 'https://claude.ai',\n    Gemini: 'https://gemini.google.com',\n    Grok: 'https://grok.x.ai',\n  };\n\n  const descriptions = {\n    ChatGPT: (\n      <>we profile your <strong className=\"font-semibold\">prompt style</strong>\n      (tone, length, structure), your <strong className=\"font-semibold\">pinned chats</strong>,\n      and common <strong className=\"font-semibold\">tool uses</strong> (code, browse, data) to bias responses toward how you actually write and work.</>\n    ),\n    Claude: (\n      <>we learn your <strong className=\"font-semibold\">document workflow</strong>\n      (pdfs, long notes, citations), your <strong className=\"font-semibold\">safety/hedging tolerance</strong>,\n      and preferred <strong className=\"font-semibold\">reasoning format</strong> (lists vs narrative) to tune verbosity and structure.</>\n    ),\n    Gemini: (\n      <>we read your <strong className=\"font-semibold\">search-adjacent usage</strong>\n      (follow-up queries, link-click patterns) and <strong className=\"font-semibold\">multimodal habits</strong>\n      to improve grounding and reduce hallucinations on your topics of interest.</>\n    ),\n    Grok: (\n      <>we infer your <strong className=\"font-semibold\">x posting cadence</strong>,\n      <strong className=\"font-semibold\"> reply tone</strong>, and <strong className=\"font-semibold\">meme literacy</strong>\n      to make outputs match your style (spicier when you are, dry when you aren't).</>\n    ),\n    Twitter: <>We use your <strong className=\"font-semibold\">tweets</strong> and <strong className=\"font-semibold\">interests</strong> to understand your preferences.</>,\n    YouTube: <>We use your <strong className=\"font-semibold\">watch history</strong> and <strong className=\"font-semibold\">interactions</strong> to understand your interests and routines.</>,\n    Reddit: <>We use your <strong className=\"font-semibold\">search history</strong> to better understand your interests and routines.</>,\n    Instagram: <>We use your <strong className=\"font-semibold\">photos</strong> and <strong className=\"font-semibold\">interactions</strong> to learn visual preferences.</>,\n    LinkedIn: <>We use your <strong className=\"font-semibold\">professional graph</strong> and <strong className=\"font-semibold\">content</strong> to infer career interests.</>,\n  };\n\n  const allPlatforms = [\n    // Page 1\n    { name: 'Instagram', connector: 'instagram', icon: Brand.Instagram },\n    { name: 'YouTube', connector: 'youtube', icon: Brand.YouTube },\n    { name: 'ChatGPT', connector: 'chatgpt', icon: Brand.ChatGPT, directLink: aiLinks.ChatGPT },\n    // Page 2\n    { name: 'Claude', connector: 'claude', icon: Brand.Claude, directLink: aiLinks.Claude },\n    { name: 'Gemini', connector: 'gemini', icon: Brand.Gemini, directLink: aiLinks.Gemini },\n    { name: 'Twitter', connector: 'twitter', icon: Brand.Twitter },\n    // Page 3\n    { name: 'LinkedIn', connector: 'linkedin', icon: Brand.LinkedIn },\n    { name: 'Reddit', connector: 'reddit', icon: Brand.Reddit },\n    { name: 'Grok', connector: 'grok', icon: Brand.Grok, directLink: aiLinks.Grok },\n  ];\n\n  const getPlatformsForPage = (page) => {\n    if (page === 1) return allPlatforms.slice(0, 3);\n    if (page === 2) return allPlatforms.slice(3, 6);\n    return allPlatforms.slice(6);\n  };\n\n  const platforms = getPlatformsForPage(currentPage);\n\n  useEffect(() => {\n    const p = localStorage.getItem('onairos_oauth_platform');\n    if (p) {\n      localStorage.removeItem('onairos_oauth_platform');\n      localStorage.removeItem('onairos_oauth_return');\n      setConnectedAccounts((s) => ({ ...s, [p]: true }));\n    }\n  }, []);\n\n  async function connectToPlatform(name) {\n    const plat = allPlatforms.find((p) => p.name === name);\n    if (!plat) return false;\n    try {\n      setIsConnecting(true);\n      setConnectingPlatform(name);\n      const username = localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com';\n\n      const res = await fetch(`${sdkConfig.baseUrl}/${plat.connector}/authorize`, {\n        method: 'POST', headers: { 'x-api-key': sdkConfig.apiKey, 'Content-Type': 'application/json' },\n        body: JSON.stringify({ session: { username } }),\n      });\n      if (!res.ok) throw new Error('auth failed');\n      const data = await res.json();\n\n      const candidates = (\n        {\n          youtube: ['youtubeURL','youtubeUrl','youtube_url'],\n          linkedin: ['linkedinURL','linkedinUrl','linkedin_url'],\n          reddit: ['redditURL','redditUrl','reddit_url'],\n          pinterest: ['pinterestURL','pinterestUrl','pinterest_url'],\n          instagram: ['instagramURL','instagramUrl','instagram_url'],\n          github: ['githubURL','githubUrl','github_url'],\n          facebook: ['facebookURL','facebookUrl','facebook_url'],\n          gmail: ['gmailURL','gmailUrl','gmail_url'],\n        }[plat.connector]\n      ) || [`${plat.connector}URL`, `${plat.connector}Url`, `${plat.connector}_url`, 'platformURL', 'authUrl', 'url'];\n\n      let oauthUrl = null; for (const k of candidates) if (data[k]) { oauthUrl = data[k]; break; }\n      if (!oauthUrl) throw new Error('no url');\n\n      const popup = window.open(oauthUrl, `${plat.connector}_oauth`, 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\n      if (!popup) throw new Error('popup blocked');\n\n      let touched = false; const it = setInterval(() => {\n        try { if (popup.location && popup.location.hostname === 'onairos.uk') { touched = true; popup.close(); } } catch { if (!touched) touched = true; }\n        try { if (popup.closed) { clearInterval(it); setConnectedAccounts((s) => ({ ...s, [name]: true })); setIsConnecting(false); setConnectingPlatform(null); } } catch {}\n      }, 800);\n\n      setTimeout(() => { try { if (!popup.closed && touched) popup.close(); } catch {} }, 10000);\n      setTimeout(() => { if (!popup.closed) { popup.close(); clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } }, 300000);\n      return true;\n    } catch {\n      setIsConnecting(false); setConnectingPlatform(null); return false;\n    }\n  }\n\n  const handleSwitch = async (name) => {\n    if (isConnecting && connectingPlatform !== name) return;\n    const on = !!connectedAccounts[name];\n    if (on) setConnectedAccounts((s) => ({ ...s, [name]: false }));\n    else await connectToPlatform(name);\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  useEffect(() => {\n    if (!lottieRef.current) return;\n    const totalFrames = (personaAnim.op || 0) - (personaAnim.ip || 0);\n    const progress = connectedCount / allPlatforms.length;\n    const target = Math.max(0, Math.floor(progress * totalFrames));\n    const start = lastFrameRef.current || 0;\n    const duration = 420; const startTs = performance.now();\n    const step = (now) => {\n      const t = Math.min(1, (now - startTs) / duration);\n      const eased = t < 0.5 ? 2*t*t : -1 + (4 - 2*t)*t;\n      const frame = Math.floor(start + (target - start) * eased);\n      lottieRef.current.goToAndStop(frame, true);\n      if (t < 1) rafRef.current = requestAnimationFrame(step); else lastFrameRef.current = target;\n    };\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    rafRef.current = requestAnimationFrame(step);\n    return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); };\n  }, [connectedCount]);\n\n  // swipe handlers for smooth paging\n  const onTouchStart = (e) => { touchStartX.current = e.touches[0].clientX; touchDeltaX.current = 0; };\n  const onTouchMove  = (e) => { touchDeltaX.current = e.touches[0].clientX - touchStartX.current; };\n  const onTouchEnd   = () => {\n    const dx = touchDeltaX.current; const THRESH = 40;\n    if (dx < -THRESH && currentPage < 3) setCurrentPage(currentPage + 1);\n    else if (dx > THRESH && currentPage > 1) setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <div className=\"w-full h-full relative\" style={{ height: Math.min('90vh', Math.max(600, Math.min(720, vh * 0.9))), minHeight: 580, maxHeight: 720 }}>\n      <style>{fadeSlideInKeyframes}</style>\n\n      {/* persona as background (unchanged) */}\n      <div aria-hidden style={{ position: 'absolute', left: '50%', top: PERSONA_TOP, transform: 'translateX(-50%)', width: personaSide, height: personaSide, zIndex: 0, pointerEvents: 'none', opacity: 0.95 }}>\n        <div className=\"overflow-hidden rounded-[28px] w-full h-full\">\n          <Lottie lottieRef={lottieRef} animationData={personaAnim} autoplay={false} loop={false} style={{ width: '100%', height: '100%' }} />\n        </div>\n      </div>\n\n      {/* content above persona */}\n      <div className=\"relative z-10 h-full flex flex-col\">\n        {/* header (unchanged visuals) */}\n        <div className=\"px-6 pt-16 pb-4 text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 leading-tight\">Connect App Data</h1>\n          <p className=\"text-gray-600 text-base\">More Connections, Better Personalization.</p>\n        </div>\n\n        {/* icons band — placed LOWER per request */}\n        <div className=\"px-6 flex-shrink-0\" style={{ height: ICONS_H, marginTop: ICONS_TOP_OFFSET }}>\n          <div className=\"h-full flex items-center justify-center\">\n            <div\n              className=\"grid w-full box-border relative\"\n              onTouchStart={onTouchStart}\n              onTouchMove={onTouchMove}\n              onTouchEnd={onTouchEnd}\n                    style={{\n                gridAutoFlow: 'column',\n                gridTemplateColumns: `repeat(${platforms.length}, minmax(0,1fr))`,\n                columnGap: currentPage === 1 ? GAP_PAGE1 : GAP_PAGE2,\n                alignItems: 'center',\n                justifyItems: 'center',\n                paddingInline: 8,\n                overflow: 'hidden',\n              }}\n            >\n              {platforms.map((p, idx) => {\n                const on = !!connectedAccounts[p.name];\n                const busy = isConnecting && connectingPlatform === p.name;\n                const isSel = selected === p.name;\n                const shift = (currentPage === 1 ? idx : idx - 2) * 14;\n                return (\n                  <div key={p.name} className=\"transition-all duration-300\" style={{ opacity: 0, transform: `translateX(${shift}px)`, animation: 'fadeSlideIn 0.28s forwards', ['--slide-x']: `${shift}px` }}>\n                    <button\n                      type=\"button\"\n                      onClick={() => { \n                        setSelected(p.name);\n                        if (p.directLink) {\n                          window.open(p.directLink, '_blank');\n                        } else {\n                          handleSwitch(p.name);\n                        }\n                      }}\n                      className=\"relative grid place-items-center outline-none\"\n                      style={{ width: SLOT, height: SLOT }}\n                      title={p.name}\n                    >\n                      <div className={`rounded-full border-3 transition-all duration-150 ease-out flex items-center justify-center shadow-lg ${on ? 'border-blue-600 bg-white text-black shadow-blue-500/70' : 'border-gray-300 hover:border-gray-400 bg-white text-black'}`}\n                           style={{ width: CIRCLE, height: CIRCLE, transform: `scale(${isSel ? ACTIVE_SCALE : 1})`, transformOrigin: 'center' }}>\n                        {busy ? (<div className=\"animate-spin h-4 w-4 border-2 border-gray-400 rounded-full border-t-transparent\" />) : (\n                          <div className=\"flex items-center justify-center\" style={{ width: 20, height: 20 }}>\n                            {p.icon}\n                    </div>\n                        )}\n                      </div>\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* dots navigation (no numbers) */}\n        <div className=\"mt-6 flex items-center justify-center gap-4 select-none\">\n          {[1,2,3].map(n => (\n            <button key={n} onClick={() => setCurrentPage(n)} aria-label={`page ${n}`} className=\"relative\" style={{ width: 10, height: 10 }}>\n              <span className={`block rounded-full ${currentPage === n ? 'bg-blue-600 scale-110' : 'bg-gray-300'} transition-transform`} style={{ width: 10, height: 10 }} />\n            </button>\n          ))}\n        </div>\n\n        {/* info sheet — LOWER to match your previous ideal placement */}\n        <div className=\"px-6 flex-shrink-0\" style={{ paddingTop: Math.max(24, Math.min(48, Math.round(vh * 0.06))), marginBottom: FOOTER_H + 32, position: 'relative', zIndex: 20 }}>\n          <div className=\"mx-auto rounded-2xl bg-white shadow-sm border border-gray-200 px-4 py-2.5\" style={{ width: 'min(680px,92%)', maxHeight: vh * 0.2 }}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-gray-900 font-medium\">{selected}</div>\n              <button\n                type=\"button\"\n                role=\"switch\"\n                aria-checked={!!connectedAccounts[selected]}\n                aria-label={`toggle ${selected}`}\n                onClick={() => handleSwitch(selected)}\n                disabled={isConnecting && connectingPlatform !== selected}\n                className={`relative inline-flex items-center transition-colors disabled:opacity-50 ${connectedAccounts[selected] ? 'bg-black' : 'bg-gray-200'} rounded-full`}\n                style={{ width: 56, height: 32 }}\n              >\n                <span className=\"absolute bg-white rounded-full shadow\" style={{ width: 24, height: 24, transform: connectedAccounts[selected] ? 'translateX(26px)' : 'translateX(6px)', transition: 'transform 160ms ease' }} />\n              </button>\n            </div>\n            <div className=\"mt-3\">\n              <div className=\"rounded-2xl bg-gray-50 text-gray-700 text-sm leading-6 px-4 py-3 shadow-[inset_0_0_0_1px_rgba(0,0,0,0.04)]\">\n                {descriptions[selected] || null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* footer — fixed near bottom; no change to persona */}\n        <div className=\"absolute left-0 right-0 px-6\" style={{ bottom: 0, height: FOOTER_H + 20, paddingBottom: 16, background: 'linear-gradient(to top, white 60%, rgba(255,255,255,0.9) 85%, rgba(255,255,255,0))', zIndex: 30 }}>\n          <div className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\" onClick={() => {\n            const connected = Object.entries(connectedAccounts).filter(([, v]) => v).map(([k]) => k);\n            onComplete?.({ connectedAccounts: connected, totalConnections: connected.length });\n          }}>\n            Update\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n          </div>\n          <div onClick={() => onComplete?.({ connectedAccounts: [], totalConnections: 0 })} className=\"w-full text-gray-600 text-base font-medium py-2 text-center cursor-pointer hover:text-gray-800 transition-colors\">Skip</div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [pinRequirements, setPinRequirements] = useState({\n    length: false,\n    uppercase: false,\n    number: false,\n  });\n\n  // Check PIN requirements\n  useEffect(() => {\n    setPinRequirements({\n      length: pin.length >= 6,\n      uppercase: /[A-Z]/.test(pin),\n      number: /\\d/.test(pin),\n    });\n  }, [pin]);\n\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\n\n  const handleSubmit = () => {\n    if (allRequirementsMet) {\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\n        </div>\n\n        <div className=\"mb-6 flex-shrink-0\">\n          <input\n            type=\"password\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-gray-50\"\n            placeholder=\"Enter your PIN\"\n            maxLength={20}\n          />\n        </div>\n\n        {/* Scrollable requirements list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-3 pb-4\">\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.length && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.uppercase && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.number && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain a number.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\n            allRequirementsMet \n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n          }`}\n          onClick={allRequirementsMet ? handleSubmit : undefined}\n        >\n          Continue\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Profile', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: 'User',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'preferences', \n    name: 'User Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: 'Grid3X3',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  },\n  { \n    id: 'personality', \n    name: 'Personality Traits', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  }\n];\n\n// Data Type Toggle Component with compact checkbox design\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const handleToggle = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  const getIconComponent = (iconName) => {\n    const iconProps = { className: \"w-4 h-4 text-gray-600\" };\n    \n    switch (iconName) {\n      case 'User':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        );\n      case 'Grid3X3':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n          </svg>\n        );\n      case 'Brain':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return <span className=\"text-lg\">{iconName}</span>;\n    }\n  };\n\n            return (\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center gap-4\">\n                        <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0\">\n                            {getIconComponent(dataType.icon)}\n                        </div>\n                        <div className=\"min-w-0 flex-1\">\n                            <span className=\"font-medium text-gray-900 text-sm\">{dataType.name}</span>\n                        </div>\n                    </div>\n      <div\n        onClick={handleToggle}\n        className={`w-5 h-5 rounded border-2 flex items-center justify-center cursor-pointer transition-colors flex-shrink-0 ${\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\n        }`}\n      >\n        {isEnabled && (\n          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col min-h-0\">\n      {/* Content - Flexible center area with proper constraints */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0\" style={{ minHeight: 'calc(100vh - 200px)' }}>\n        {/* Icon Flow */}\n        <div className=\"mb-4 flex justify-center items-center gap-4 flex-shrink-0\">\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </div>\n          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <span className=\"text-xl font-serif font-bold text-black\">E</span>\n          </div>\n        </div>\n\n        {/* Title Section */}\n        <div className=\"mb-4 flex-shrink-0\">\n          <h1 className=\"text-xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Enoch wants to personalize your experience\n          </h1>\n          <p className=\"text-gray-600 text-sm\">Choose what to share:</p>\n        </div>\n\n        {/* Consent Options - Scrollable area */}\n        <div className=\"flex-1 overflow-y-auto min-h-0\">\n          <div className=\"space-y-4 pb-4\">\n            {dataTypes.map((dataType, index) => (\n              <DataTypeToggle\n                key={dataType.id}\n                dataType={dataType}\n                isEnabled={selectedData[dataType.id]}\n                onToggle={handleDataToggle}\n                isLast={index === dataTypes.length - 1}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom with guaranteed visibility */}\n      <div className=\"px-6 pb-6 pt-3 flex-shrink-0 space-y-2 bg-white border-t border-gray-100\">\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-3 text-sm font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          onClick={fetchUserData}\n          disabled={isLoadingApi || selectedCount === 0}\n        >\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ cancelled: true })}\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-3 text-sm font-medium text-center cursor-pointer transition-colors\"\n        >\n          Decline\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div className=\"mt-3 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\n            <p className=\"text-xs\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from \"react\";\nimport Lottie from 'lottie-react';\nimport rainAnim from '../../public/rain-anim.json';\n\nexport default function LoadingScreen({ onComplete }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dotCount, setDotCount] = useState(0);\n\n  const loadingStates = [\n    { message: \"Validating PIN and continuing training\", progress: 20 },\n    { message: \"Uploading model to secure storage\", progress: 40 },\n    { message: \"Running test inference\", progress: 60 },\n    { message: \"Storing results in databases\", progress: 80 },\n    { message: \"Complete!\", progress: 100 },\n  ];\n\n  useEffect(() => {\n    const stateInterval = setInterval(() => {\n      setCurrentStep((prev) => {\n        const nextStep = prev + 1;\n        if (nextStep >= loadingStates.length) {\n          // Loading complete, call onComplete after a short delay\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return prev; // Keep at last step\n        }\n        return nextStep;\n      });\n    }, 3000); // Change state every 3 seconds\n\n    return () => clearInterval(stateInterval);\n  }, [loadingStates.length, onComplete]);\n\n  useEffect(() => {\n    const dotInterval = setInterval(() => {\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\n    }, 500); // Change dots every 500ms\n\n    return () => clearInterval(dotInterval);\n  }, []);\n\n  const currentState = loadingStates[currentStep];\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\">\n      {/* Modal - Full height from bottom */}\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n        {/* Header */}\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\n        </div>\n\n        {/* Content - Rain animation and loading state */}\n        <div className=\"flex-1 flex flex-col px-6\">\n          {/* Rain Animation */}\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div style={{ width: '100%', maxWidth: '400px', aspectRatio: '1' }}>\n              <Lottie\n                animationData={rainAnim}\n                loop={true}\n                autoplay={true}\n                style={{ width: '100%', height: '100%' }}\n              />\n            </div>\n          </div>\n\n          {/* Loading State - Positioned at bottom */}\n          <div className=\"flex-shrink-0 pb-12\">\n            <div className=\"text-center\">\n              <h1 className=\"font-bold text-gray-900 leading-tight mb-6\" style={{ fontSize: 'clamp(16px, 4vw, 20px)' }}>\n                {currentState.message}\n                {currentState.message !== \"Complete!\" && (\n                  <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\n                )}\n              </h1>\n\n              <div className=\"mx-auto\" style={{ width: 'clamp(200px, 50vw, 300px)' }}>\n                <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                  <div\n                    className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\n                    style={{ width: `${currentState.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom spacing */}\n        <div className=\"h-20 flex-shrink-0\"></div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: 'clamp(8px, 2vw, 16px) clamp(16px, 4vw, 32px) clamp(6px, 1.5vw, 12px)'\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: 'clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(20px, 5vw, 28px)',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 clamp(6px, 1.5vw, 12px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.2'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(14px, 3.5vw, 18px)',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 clamp(20px, 5vw, 40px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: 'clamp(40px, 8vw, 56px)',\n    height: 'clamp(40px, 8vw, 56px)',\n    margin: '0 auto clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(20px, 5vw, 28px)'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '90vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport LoadingScreen from './components/LoadingScreen.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = true, // Auto-enabled for design testing - set to false for production\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true },\n  priorityPlatform = null // Platform to prioritize (e.g., 'gmail', 'pinterest', 'linkedin')\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to loading flow\n    setCurrentFlow('loading');\n  };\n\n  const handleLoadingComplete = () => {\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n            webpageName={webpageName}\n            appIcon={appIcon}\n            testMode={testMode}\n          />\n        );\n      case 'email':\n        return (\n          <div className=\"h-[min(85vh,700px)]\">\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n          </div>\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n            priorityPlatform={priorityPlatform}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'email' ? (\n            // Special case for email - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={handleCloseOverlay}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Email Content */}\n                <div className=\"h-[min(85vh,700px)]\">\n                  <EmailAuth \n                    onSuccess={handleEmailAuthSuccess}\n                    testMode={testMode}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                  priorityPlatform={priorityPlatform}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'dataRequest' ? (\n            // Special case for dataRequest - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('loading')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* DataRequest Content */}\n                <DataRequest \n                  onComplete={handleDataRequestComplete}\n                  userEmail={userData?.email}\n                  requestData={requestData}\n                  appName={webpageName}\n                  autoFetch={autoFetch}\n                  testMode={testMode}\n                  appIcon={appIcon}\n                  connectedAccounts={userData?.connectedAccounts || {}}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'pin' ? (\n            // Special case for pin - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* PinSetup Content - Must take remaining height */}\n                <div className=\"flex-1 min-h-0\">\n                  <PinSetup \n                    onComplete={handlePinSetupComplete}\n                    onBack={() => setCurrentFlow('onboarding')}\n                    userEmail={userData?.email}\n                  />\n                </div>\n            </div>\n          </div>\n          ) : currentFlow === 'loading' ? (\n            // Loading screen\n            <LoadingScreen onComplete={handleLoadingComplete} />\n        ) : (\n            // All other flows use PageLayout wrapper\n          <ModalPageLayout\n            visible={showOverlay}\n            onClose={handleCloseOverlay}\n              showBackButton={currentFlow === 'training'}\n            onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n              if (currentFlow === 'onboarding') setCurrentFlow('email');\n              if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n              if (currentFlow === 'training') setCurrentFlow('pin');\n            }}\n            title={getFlowTitle()}\n            subtitle={getFlowSubtitle()}\n            icon={getFlowIcon()}\n            centerContent={true}\n          >\n            {renderCurrentFlow()}\n          </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;"],"names":["WelcomeScreen","_ref","onContinue","onClose","useEffect","script","document","createElement","src","async","head","appendChild","existingScript","querySelector","removeChild","React","className","style","height","alt","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","size","children","concat","width","borderRadius","fontSize","color","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","props","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","setTimeout","firstInput","handleEmailSubmit","e","preventDefault","test","validateEmail","console","log","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleGoogleAuth","_localStorage$getItem","sdkConfig","baseUrl","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","toString","popup","open","checkInterval","setInterval","closed","clearInterval","connectedAccounts","Google","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","type","value","onChange","target","placeholder","required","trim","lineHeight","Array","from","_","index","key","maxLength","newCode","join","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","PrimaryButton","flex","minHeight","Check","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","fadeSlideInKeyframes","UniversalOnboarding","onComplete","lottieRef","useRef","lastFrameRef","rafRef","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","selected","setSelected","currentPage","setCurrentPage","touchStartX","touchDeltaX","vh","setVh","innerHeight","onResize","addEventListener","removeEventListener","personaSide","Math","min","SLOT","max","floor","ACTIVE_SCALE","ICONS_TOP_OFFSET","round","igGradId","useId","Brand","ChatGPT","chatgptIcon","objectFit","Claude","claudeIcon","Gemini","geminiIcon","Grok","grokIcon","Instagram","id","cx","cy","r","offset","stopColor","YouTube","Reddit","LinkedIn","x","y","rx","Twitter","aiLinks","descriptions","allPlatforms","name","connector","icon","directLink","platforms","page","slice","p","removeItem","s","handleSwitch","plat","find","_JSON$parse","parse","res","session","candidates","youtube","linkedin","reddit","pinterest","instagram","github","facebook","gmail","oauthUrl","k","touched","it","hostname","close","_unused","_unused2","_unused3","_unused4","connectToPlatform","connectedCount","Object","values","filter","Boolean","current","totalFrames","personaAnim","progress","start","startTs","performance","t","eased","frame","goToAndStop","requestAnimationFrame","cancelAnimationFrame","maxHeight","transform","zIndex","pointerEvents","Lottie","animationData","autoplay","loop","marginTop","onTouchStart","touches","clientX","onTouchMove","onTouchEnd","dx","gridAutoFlow","gridTemplateColumns","columnGap","justifyItems","paddingInline","map","idx","on","busy","isSel","shift","animation","title","transformOrigin","n","paddingTop","marginBottom","FOOTER_H","role","paddingBottom","connected","entries","v","_ref3","totalConnections","xmlns","PinSetup","onBack","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","handleSubmit","pinCreated","timestamp","undefined","dataTypes","description","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","iconName","iconProps","getIconComponent","handleToggle","fillRule","clipRule","autoFetch","appName","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","prev","selectedCount","userHash","hash","str","i","charCodeAt","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","status","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","setProgress","isComplete","setIsComplete","steps","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","completionDelay","trainingComplete","simulatedTraining","clearTimeout","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","aspectRatio","rainAnim","repeat","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","isArray","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","padding","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","appIcon","enableTraining","priorityPlatform","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","onboardingComplete","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","warn","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow"],"sourceRoot":""}