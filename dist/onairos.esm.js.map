{"version":3,"file":"onairos.esm.js","mappings":"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","sources":["webpack://onairos/webpack/bootstrap","webpack://onairos/webpack/runtime/define property getters","webpack://onairos/webpack/runtime/hasOwnProperty shorthand","webpack://onairos/external module \"react\"","webpack://onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://onairos/./src/theme/colors.js","webpack://onairos/./src/components/ui/PrimaryButton.jsx","webpack://onairos/./src/components/EmailAuth.js","webpack://onairos/./src/components/UniversalOnboarding.jsx","webpack://onairos/./src/components/PinSetup.js","webpack://onairos/./src/components/DataRequest.js","webpack://onairos/./src/components/TrainingComponent.jsx","webpack://onairos/./src/utils/responseFormatter.js","webpack://onairos/./src/components/ui/PageLayout.jsx","webpack://onairos/./src/onairosButton.jsx","webpack://onairos/external module \"react-dom\"","webpack://onairos/./src/utils/overlayHandler.js","webpack://onairos/./src/onairos.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createElement\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.createElement, [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_react__[\"default\"], [\"forwardRef\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.forwardRef, [\"useEffect\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useEffect, [\"useState\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useState });","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","// Theme colors for Onairos SDK - derived from mobile design\r\nexport const COLORS = {\r\n  // Button gradient colors\r\n  btnGradStart: '#1A1A1A',\r\n  btnGradEnd: '#000000',\r\n  \r\n  // Button text and icon colors\r\n  btnLabel: '#FFFFFF',\r\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\r\n  \r\n  // Icon circle gradient colors\r\n  iconCircleGradientStart: '#333333',\r\n  iconCircleGradientEnd: '#1A1A1A',\r\n  \r\n  // Background colors\r\n  background: '#FFFFFF',\r\n  backgroundSecondary: '#F8F9FA',\r\n  \r\n  // Text colors\r\n  textPrimary: '#1A1A1A',\r\n  textSecondary: '#6B7280',\r\n  textMuted: '#9CA3AF',\r\n  \r\n  // Border colors\r\n  border: '#E5E7EB',\r\n  borderLight: '#F3F4F6',\r\n  \r\n  // Status colors\r\n  success: '#10B981',\r\n  error: '#EF4444',\r\n  warning: '#F59E0B',\r\n  info: '#3B82F6',\r\n  \r\n  // Interactive states\r\n  hover: 'rgba(0, 0, 0, 0.05)',\r\n  pressed: 'rgba(0, 0, 0, 0.1)',\r\n  focus: 'rgba(59, 130, 246, 0.1)',\r\n};\r\n\r\nexport default COLORS; ","import React, { useState } from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Icon Circle component matching the React Native version\r\nconst IconCircle = ({ \r\n  size = 40, \r\n  children,\r\n  className = ''\r\n}) => {\r\n  return (\r\n    <div \r\n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        borderRadius: size / 2,\r\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\r\n      }}\r\n    >\r\n      {children || (\r\n        <span \r\n          className=\"font-semibold opacity-95\"\r\n          style={{\r\n            fontSize: '20px',\r\n            color: COLORS.btnLabel,\r\n            backgroundColor: 'transparent'\r\n          }}\r\n        >\r\n          →\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Primary Button component matching the React Native design\r\nconst PrimaryButton = ({\r\n  label = \"Get Started\",\r\n  onClick,\r\n  iconRight,\r\n  loading = false,\r\n  disabled = false,\r\n  testId,\r\n  className = '',\r\n  style = {},\r\n  textStyle = {},\r\n  ...props\r\n}) => {\r\n  const [pressed, setPressed] = useState(false);\r\n\r\n  const handleMouseDown = () => setPressed(true);\r\n  const handleMouseUp = () => setPressed(false);\r\n  const handleMouseLeave = () => setPressed(false);\r\n\r\n  const buttonStyle = {\r\n    height: '48px',\r\n    borderRadius: '100px',\r\n    border: `1px solid ${COLORS.btnBorder}`,\r\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    opacity: disabled ? 0.65 : 1,\r\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\r\n    transition: 'all 0.2s ease',\r\n    ...style\r\n  };\r\n\r\n  const pressedOverlayStyle = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.1)',\r\n    borderRadius: '100px',\r\n    opacity: pressed ? 1 : 0,\r\n    transition: 'opacity 0.1s ease'\r\n  };\r\n\r\n  const textContainerStyle = {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const iconPositionStyle = {\r\n    position: 'absolute',\r\n    right: '4px',\r\n    top: '4px',\r\n    bottom: '4px',\r\n    width: '40px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const labelStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontWeight: '600',\r\n    fontSize: '16px',\r\n    color: COLORS.btnLabel,\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    ...textStyle\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`relative ${className}`}\r\n      style={buttonStyle}\r\n      onClick={onClick}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseLeave}\r\n      disabled={disabled || loading}\r\n      data-testid={testId}\r\n      aria-label={label}\r\n      {...props}\r\n    >\r\n      {/* Pressed state overlay */}\r\n      <div style={pressedOverlayStyle} />\r\n\r\n      {/* Centered text container */}\r\n      <div style={textContainerStyle}>\r\n        {loading ? (\r\n          <div \r\n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\r\n            style={{ width: '20px', height: '20px' }}\r\n          />\r\n        ) : (\r\n          <span style={labelStyle}>{label}</span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Icon in fixed position on right */}\r\n      <div style={iconPositionStyle}>\r\n        {!loading && (iconRight || <IconCircle />)}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { IconCircle };\r\nexport default PrimaryButton; ","import React, { useState } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // In test mode, still call API but use admin key for instant verification\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n        }, 1000);\n      } else {\n        // Use proper email verification API from schema\n        const apiKey = testMode ? 'OnairosIsAUnicorn2025' : (window.onairosApiKey || 'test-key');\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      // Use real email verification API from schema\n      const apiKey = testMode ? 'OnairosIsAUnicorn2025' : (window.onairosApiKey || 'test-key');\n      \n      const response = await fetch('https://api2.onairos.uk/email/verification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({ \n          email, \n          action: 'verify',\n          code \n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Invalid verification code');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.error || 'Verification failed');\n      }\n\n      console.log('📧 Email verification response:', data);\n\n      setStep('success');\n      setTimeout(() => {\n        // Pass complete API response for flow determination\n        onSuccess({ \n          email, \n          verified: true, \n          token: data.token || data.jwtToken,\n          userName: data.userName,\n          existingUser: data.existingUser,\n          accountInfo: data.accountInfo,\n          isNewUser: !data.existingUser, // Set based on API response\n          flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n          adminMode: data.adminMode,\n          userCreated: data.userCreated,\n          accountDetails: data.accountDetails\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Email verification error:', error);\n      \n      // Fallback for test mode\n      if (testMode && code === '123456') {\n        setStep('success');\n        setTimeout(() => {\n          onSuccess({ \n            email, \n            verified: true, \n            token: 'test-token',\n            userName: email.split('@')[0],\n            existingUser: false,\n            accountInfo: null,\n            isNewUser: true,\n            flowType: 'onboarding'\n          });\n        }, 1000);\n      } else {\n        setError(error.message || 'Invalid code. Use 123456 for testing.');\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching SignInStep.tsx */}\n      <div className=\"w-full mb-6\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Your AI persona is getting closer\n        </h1>\n        <p \n          className=\"text-left\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          Sign in or create an account\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Any valid email will work</p>\n        </div>\n      )}\n\n      {/* Email Input - matching SignInStep design */}\n      <div className=\"mb-8\">\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your email\"\n          className=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n          style={{ \n            borderColor: COLORS.border,\n            backgroundColor: COLORS.background,\n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontSize: '16px'\n          }}\n          required\n        />\n      </div>\n\n      {/* Divider - matching SignInStep.tsx */}\n      <div className=\"flex items-center mb-8\">\n        <div \n          className=\"flex-1 h-px\"\n          style={{ backgroundColor: '#E5E5E5' }}\n        />\n        <span \n          className=\"px-4 text-sm\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            color: COLORS.textMuted\n          }}\n        >\n          Or\n        </span>\n        <div \n          className=\"flex-1 h-px\"\n          style={{ backgroundColor: '#E5E5E5' }}\n        />\n      </div>\n\n      {/* Google Button - matching design */}\n      <div className=\"mb-8\">\n        <button\n          type=\"button\"\n          className=\"w-full flex items-center justify-center px-4 py-3 border rounded-lg hover:bg-gray-50 transition-colors\"\n          style={{ \n            borderColor: COLORS.border,\n            backgroundColor: COLORS.background,\n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontSize: '16px',\n            fontWeight: '500',\n            color: COLORS.textPrimary\n          }}\n        >\n          <svg className=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n            <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n            <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n            <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n            <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n          </svg>\n          Continue with Google\n        </button>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Continue Button - positioned at bottom */}\n      <div className=\"w-full\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleEmailSubmit}\n          loading={isLoading}\n          disabled={isLoading || !email.trim()}\n          testId=\"email-continue-button\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full mb-10\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"text-left mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Use code 123456</p>\n        </div>\n      )}\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-4 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"w-full mb-6\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleCodeSubmit}\n          loading={isLoading}\n          disabled={isLoading || code.length !== 6}\n          testId=\"verify-code-button\"\n        />\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"w-full\">\n        <button\n          type=\"button\"\n          onClick={() => setStep('email')}\n          className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Use a different email\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\r\n\r\nconst platforms = [\r\n  { name: 'YouTube', icon: '📺', color: 'bg-red-500', connector: 'youtube' },\r\n  { name: 'LinkedIn', icon: '💼', color: 'bg-blue-700', connector: 'linkedin' },\r\n  { name: 'Reddit', icon: '🔥', color: 'bg-orange-500', connector: 'reddit' },\r\n  { name: 'Pinterest', icon: '📌', color: 'bg-red-600', connector: 'pinterest' },\r\n  { name: 'Instagram', icon: '📷', color: 'bg-pink-500', connector: 'instagram' },\r\n  { name: 'GitHub', icon: '⚡', color: 'bg-gray-800', connector: 'github' },\r\n  { name: 'Facebook', icon: '👥', color: 'bg-blue-600', connector: 'facebook' },\r\n  { name: 'Gmail', icon: '✉️', color: 'bg-red-400', connector: 'gmail' }\r\n];\r\n\r\n// Enhanced SDK configuration\r\nconst sdkConfig = {\r\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\r\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\r\n  sdkType: 'web', // web, mobile, desktop\r\n  enableHealthMonitoring: true,\r\n  enableAutoRefresh: true,\r\n  enableConnectionValidation: true\r\n};\r\n\r\n/**\r\n * UniversalOnboarding Component - Compact & Enhanced\r\n * Displays a streamlined onboarding screen for data connections\r\n */\r\nexport default function UniversalOnboarding({ onComplete, appIcon, appName = 'App' }) {\r\n  const [connectedAccounts, setConnectedAccounts] = useState({});\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\r\n  const [connectionErrors, setConnectionErrors] = useState({});\r\n  const [connectionHealth, setConnectionHealth] = useState({});\r\n  const [healthScore, setHealthScore] = useState(0);\r\n\r\n  // Mobile device detection\r\n  const isMobileDevice = () => {\r\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n           (window.innerWidth <= 768);\r\n  };\r\n\r\n  // Handle mobile OAuth return\r\n  useEffect(() => {\r\n    const handleOAuthReturn = () => {\r\n      const platform = localStorage.getItem('onairos_oauth_platform');\r\n      if (platform) {\r\n        console.log(`📱 OAuth return detected for: ${platform}`);\r\n        \r\n        // Clear OAuth state\r\n        localStorage.removeItem('onairos_oauth_platform');\r\n        localStorage.removeItem('onairos_oauth_return');\r\n        \r\n        // Mark as connected\r\n        setConnectedAccounts(prev => ({\r\n          ...prev,\r\n          [platform]: true\r\n        }));\r\n        \r\n        // Clear any errors\r\n        setConnectionErrors(prev => ({\r\n          ...prev,\r\n          [platform]: null\r\n        }));\r\n        \r\n        console.log(`✅ ${platform} marked as connected from OAuth return`);\r\n      }\r\n    };\r\n\r\n    handleOAuthReturn();\r\n  }, []);\r\n\r\n  const connectToPlatform = async (platformName) => {\r\n    console.log(`🚀 connectToPlatform called for: ${platformName}`);\r\n    \r\n    const platform = platforms.find(p => p.name === platformName);\r\n    if (!platform?.connector) {\r\n      console.error(`❌ No connector found for platform: ${platformName}`);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsConnecting(true);\r\n      setConnectingPlatform(platformName);\r\n      \r\n      // Clear any previous errors\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: null\r\n      }));\r\n      \r\n      console.log(`🔗 Starting OAuth connection for ${platformName}...`);\r\n      \r\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\r\n      \r\n      // Enhanced authorize endpoint with SDK type\r\n      const authorizeUrl = `${sdkConfig.baseUrl}/${platform.connector}/authorize`;\r\n      \r\n      const response = await fetch(authorizeUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'x-api-key': sdkConfig.apiKey,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          session: {\r\n            username: username\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n             const responseData = await response.json();\r\n       console.log(`📋 ${platformName} OAuth response:`, responseData);\r\n       \r\n       // Check for platform-specific URL keys with multiple fallbacks\r\n       const platformUrlKeys = {\r\n         'youtube': ['youtubeURL', 'youtubeUrl', 'youtube_url'],\r\n         'linkedin': ['linkedinURL', 'linkedinUrl', 'linkedin_url'], \r\n         'reddit': ['redditURL', 'redditUrl', 'reddit_url'],\r\n         'pinterest': ['pinterestURL', 'pinterestUrl', 'pinterest_url'],\r\n         'instagram': ['instagramURL', 'instagramUrl', 'instagram_url'],\r\n         'github': ['githubURL', 'githubUrl', 'github_url'],\r\n         'facebook': ['facebookURL', 'facebookUrl', 'facebook_url'],\r\n         'gmail': ['gmailURL', 'gmailUrl', 'gmail_url']\r\n       };\r\n       \r\n       const possibleKeys = platformUrlKeys[platform.connector] || [\r\n         `${platform.connector}URL`,\r\n         `${platform.connector}Url`, \r\n         `${platform.connector}_url`,\r\n         'platformURL',\r\n         'authUrl', \r\n         'url'\r\n       ];\r\n       \r\n       let oauthUrl = null;\r\n       let usedKey = null;\r\n       \r\n       // Try each possible key\r\n       for (const key of possibleKeys) {\r\n         if (responseData[key]) {\r\n           oauthUrl = responseData[key];\r\n           usedKey = key;\r\n           break;\r\n         }\r\n       }\r\n       \r\n       if (!oauthUrl) {\r\n         console.error(`❌ No OAuth URL found for ${platformName}:`);\r\n         console.error(`Expected one of:`, possibleKeys);\r\n         console.error(`Response keys:`, Object.keys(responseData));\r\n         console.error(`Full response:`, responseData);\r\n         throw new Error(`No OAuth URL found. Backend should return one of: ${possibleKeys.join(', ')}`);\r\n       }\r\n       \r\n       console.log(`✅ Found OAuth URL for ${platformName} using key: ${usedKey}`);\r\n        \r\n      if (isMobileDevice()) {\r\n        // Mobile: Use redirect flow\r\n        localStorage.setItem('onairos_oauth_platform', platformName);\r\n        localStorage.setItem('onairos_oauth_return', window.location.href);\r\n        window.location.href = oauthUrl;\r\n        return true;\r\n      } else {\r\n        // Desktop: Use popup flow with enhanced monitoring\r\n        const popup = window.open(\r\n          oauthUrl,\r\n          `${platform.connector}_oauth`,\r\n          'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no'\r\n        );\r\n        \r\n        if (!popup) {\r\n          throw new Error('Popup blocked. Please allow popups and try again.');\r\n        }\r\n\r\n                 // Enhanced popup monitoring with onairos.uk detection\r\n         let hasNavigatedToOnairos = false;\r\n         const checkInterval = setInterval(() => {\r\n           try {\r\n             // Try to detect if popup has navigated to onairos.uk (indicates success)\r\n             if (popup.location && popup.location.hostname === 'onairos.uk') {\r\n               hasNavigatedToOnairos = true;\r\n               console.log(`🔄 ${platformName} popup navigated to onairos.uk - treating as success`);\r\n               \r\n               // Close the popup since it shows \"not found\"\r\n               popup.close();\r\n               return; // Let the popup.closed check handle the rest\r\n             }\r\n           } catch (e) {\r\n             // Cross-origin error is expected when popup navigates to onairos.uk\r\n             // This actually indicates the OAuth likely succeeded\r\n             if (!hasNavigatedToOnairos) {\r\n               hasNavigatedToOnairos = true;\r\n               console.log(`🔄 ${platformName} popup navigated (cross-origin) - likely to onairos.uk`);\r\n             }\r\n           }\r\n           \r\n           try {\r\n             // Check if popup is closed\r\n             if (popup.closed) {\r\n               clearInterval(checkInterval);\r\n               \r\n               // Check for success or error signals from callback page\r\n               const successFlag = localStorage.getItem(`onairos_${platformName}_success`);\r\n               const errorFlag = localStorage.getItem(`onairos_${platformName}_error`);\r\n               const timestamp = localStorage.getItem(`onairos_${platformName}_timestamp`);\r\n               \r\n               // Only process recent signals (within 30 seconds)\r\n               const isRecentSignal = timestamp && (Date.now() - parseInt(timestamp) < 30000);\r\n               \r\n               if (successFlag && isRecentSignal) {\r\n                 // Success flow from callback page\r\n                 console.log(`✅ ${platformName} OAuth completed successfully (callback page)`);\r\n                 localStorage.removeItem(`onairos_${platformName}_success`);\r\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\r\n                 \r\n                 setConnectedAccounts(prev => ({\r\n                   ...prev,\r\n                   [platformName]: true\r\n                 }));\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: null\r\n                 }));\r\n                 \r\n               } else if (errorFlag && isRecentSignal) {\r\n                 // Error flow from callback page\r\n                 console.log(`❌ ${platformName} OAuth failed:`, errorFlag);\r\n                 localStorage.removeItem(`onairos_${platformName}_error`);\r\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\r\n                 \r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: errorFlag\r\n                 }));\r\n                 \r\n               } else if (hasNavigatedToOnairos) {\r\n                 // Popup navigated to onairos.uk - assume success\r\n                 console.log(`✅ ${platformName} OAuth likely successful (navigated to onairos.uk)`);\r\n                 setConnectedAccounts(prev => ({\r\n                   ...prev,\r\n                   [platformName]: true\r\n                 }));\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: null\r\n                 }));\r\n                 \r\n               } else {\r\n                 // No signal and no onairos navigation - assume user cancelled\r\n                 console.log(`⚠️ ${platformName} OAuth cancelled or no response`);\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: 'Connection was cancelled'\r\n                 }));\r\n               }\r\n               \r\n               setIsConnecting(false);\r\n               setConnectingPlatform(null);\r\n             }\r\n           } catch (error) {\r\n             // Cross-origin error when popup navigates away - this is normal\r\n             // console.log(`🔄 Popup navigated away for ${platformName}`);\r\n           }\r\n         }, 1000);\r\n\r\n                 // Auto-close popup if it shows onairos.uk \"not found\" page after 10 seconds\r\n         setTimeout(() => {\r\n           try {\r\n             if (!popup.closed && popup.location && popup.location.hostname === 'onairos.uk') {\r\n               console.log(`🚪 Auto-closing ${platformName} popup showing onairos.uk (not found)`);\r\n               popup.close();\r\n             }\r\n           } catch (e) {\r\n             // Cross-origin error is expected - try to close anyway if it's been 10 seconds\r\n             if (!popup.closed && hasNavigatedToOnairos) {\r\n               console.log(`🚪 Auto-closing ${platformName} popup (cross-origin, likely onairos.uk)`);\r\n               popup.close();\r\n             }\r\n           }\r\n         }, 10000);\r\n\r\n         // Final timeout after 5 minutes\r\n         setTimeout(() => {\r\n           if (!popup.closed) {\r\n             popup.close();\r\n             clearInterval(checkInterval);\r\n             setConnectionErrors(prev => ({\r\n               ...prev,\r\n               [platformName]: 'Connection timeout'\r\n             }));\r\n             setIsConnecting(false);\r\n             setConnectingPlatform(null);\r\n           }\r\n         }, 300000);\r\n\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(`❌ Error connecting to ${platformName}:`, error);\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: error.message\r\n      }));\r\n      setIsConnecting(false);\r\n      setConnectingPlatform(null);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleToggle = async (platformName) => {\r\n    console.log(`🔥 TOGGLE CLICKED: ${platformName}`);\r\n    \r\n    if (isConnecting && connectingPlatform !== platformName) {\r\n      console.log(`⚠️ Already connecting to ${connectingPlatform}, ignoring click on ${platformName}`);\r\n      return;\r\n    }\r\n    \r\n    const isConnected = connectedAccounts[platformName];\r\n    \r\n    if (isConnected) {\r\n      // Disconnect\r\n      console.log(`🔌 Disconnecting from ${platformName}...`);\r\n      setConnectedAccounts(prev => ({\r\n        ...prev,\r\n        [platformName]: false\r\n      }));\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: null\r\n      }));\r\n    } else {\r\n      // Connect\r\n      await connectToPlatform(platformName);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    const connected = Object.entries(connectedAccounts)\r\n      .filter(([platform, isConnected]) => isConnected)\r\n      .map(([platform]) => platform);\r\n    \r\n    onComplete({\r\n      connectedAccounts: connected,\r\n      totalConnections: connected.length,\r\n      healthScore: healthScore,\r\n      connectionHealth: connectionHealth,\r\n      sdkVersion: '2.1.7',\r\n      enhancedFeatures: {\r\n        healthMonitoring: sdkConfig.enableHealthMonitoring,\r\n        autoRefresh: sdkConfig.enableAutoRefresh,\r\n        connectionValidation: sdkConfig.enableConnectionValidation\r\n      }\r\n    });\r\n  };\r\n\r\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"max-w-sm mx-auto bg-white p-4 rounded-lg shadow-lg\">\r\n      {/* Compact Header */}\r\n      <div className=\"flex items-center justify-center mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <img \r\n            src={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"} \r\n            alt={appName} \r\n            className=\"w-8 h-8 rounded-lg\"\r\n          />\r\n          <div className=\"flex items-center text-gray-400\">\r\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n            </svg>\r\n          </div>\r\n          <img \r\n            src=\"https://onairos.sirv.com/Images/OnairosBlack.png\" \r\n            alt=\"Onairos\" \r\n            className=\"w-8 h-8 rounded-lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Simple Clear Title */}\r\n      <div className=\"text-center mb-4\">\r\n        <h2 className=\"text-lg font-bold text-gray-900 mb-1\">Connect Data</h2>\r\n        <p className=\"text-gray-600 text-sm\">\r\n          Connect data here to enhance your {appName} experience\r\n        </p>\r\n      </div>\r\n\r\n      {/* Compact Platform Grid */}\r\n      <div className=\"grid grid-cols-2 gap-3 mb-4\">\r\n        {platforms.map((platform) => {\r\n          const isConnected = connectedAccounts[platform.name] || false;\r\n          const isCurrentlyConnecting = connectingPlatform === platform.name;\r\n          const hasError = connectionErrors[platform.name];\r\n          const isDisabled = isConnecting && !isCurrentlyConnecting;\r\n          \r\n          return (\r\n            <div \r\n              key={platform.name}\r\n              className={`relative p-3 border-2 rounded-lg transition-all duration-200 cursor-pointer ${\r\n                isDisabled ? 'opacity-50 cursor-not-allowed' : 'hover:shadow-md'\r\n              } ${\r\n                isConnected ? 'border-green-400 bg-green-50' : \r\n                hasError ? 'border-red-400 bg-red-50' :\r\n                isCurrentlyConnecting ? 'border-blue-400 bg-blue-50' : \r\n                'border-gray-200 bg-white hover:border-gray-300'\r\n              }`}\r\n              onClick={() => !isDisabled && handleToggle(platform.name)}\r\n            >\r\n              {/* Platform Icon */}\r\n              <div className={`w-8 h-8 rounded-lg ${platform.color} flex items-center justify-center text-white text-lg mb-2 mx-auto relative`}>\r\n                {isCurrentlyConnecting ? (\r\n                  <div className=\"animate-spin h-4 w-4 border-2 border-white rounded-full border-t-transparent\"></div>\r\n                ) : (\r\n                  platform.icon\r\n                )}\r\n                \r\n                {/* Connection Status Indicator */}\r\n                {isConnected && !isCurrentlyConnecting && (\r\n                  <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\r\n                    <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n                \r\n                {hasError && !isCurrentlyConnecting && (\r\n                  <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full flex items-center justify-center\">\r\n                    <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Platform Name */}\r\n              <div className=\"text-center\">\r\n                <h3 className=\"font-medium text-gray-900 text-xs\">{platform.name}</h3>\r\n                <p className={`text-xs mt-1 ${\r\n                  isCurrentlyConnecting ? 'text-blue-600' : \r\n                  isConnected ? 'text-green-600' : \r\n                  hasError ? 'text-red-600' :\r\n                  'text-gray-500'\r\n                }`}>\r\n                  {isCurrentlyConnecting ? 'Connecting...' : \r\n                   isConnected ? 'Connected' : \r\n                   hasError ? 'Failed' :\r\n                   'Tap to connect'}\r\n                </p>\r\n                \r\n                {/* Error Message */}\r\n                {hasError && (\r\n                  <p className=\"text-xs text-red-600 mt-1 break-words\">\r\n                    {hasError}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Connection Status Summary */}\r\n      {connectedCount > 0 && (\r\n        <div className=\"mb-4 p-2 bg-green-50 border border-green-200 rounded-lg\">\r\n          <p className=\"text-green-800 text-sm text-center\">\r\n            ✅ {connectedCount} connection{connectedCount > 1 ? 's' : ''} active\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Continue Button */}\r\n      <button\r\n        onClick={handleContinue}\r\n        disabled={connectedCount === 0}\r\n        className={`w-full py-3 px-4 rounded-lg font-semibold transition-colors ${\r\n          connectedCount > 0\r\n            ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n            : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n        }`}\r\n      >\r\n        {connectedCount > 0 ? `Continue with ${connectedCount} connection${connectedCount > 1 ? 's' : ''}` : 'Connect at least one platform'}\r\n      </button>\r\n\r\n      {/* Skip Option */}\r\n      <button\r\n        onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\r\n        className=\"w-full mt-2 py-2 text-gray-500 hover:text-gray-700 text-sm\"\r\n      >\r\n        Skip for now\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton from './ui/PrimaryButton.jsx';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function PinSetup({ onComplete, userEmail }) {\r\n  const [pin, setPin] = useState('');\r\n  const [requirements, setRequirements] = useState({\r\n    length: false,\r\n    number: false,\r\n    special: false\r\n  });\r\n\r\n  // Check PIN requirements (simplified)\r\n  useEffect(() => {\r\n    setRequirements({\r\n      length: pin.length >= 8,\r\n      number: /[0-9]/.test(pin),\r\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(pin)\r\n    });\r\n  }, [pin]);\r\n\r\n  const allRequirementsMet = Object.values(requirements).every(req => req);\r\n  const canSubmit = allRequirementsMet && pin.length > 0;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (canSubmit) {\r\n      // In a real app, you would hash the PIN before storing\r\n      onComplete({\r\n        pin: pin, // This should be hashed in production\r\n        pinCreated: true,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full space-y-6\">\r\n      <form onSubmit={handleSubmit} className=\"w-full space-y-6\">\r\n        {/* PIN Input */}\r\n        <div>\r\n          <label \r\n            htmlFor=\"pin\" \r\n            className=\"block text-sm font-medium mb-2\"\r\n            style={{ color: COLORS.textPrimary }}\r\n          >\r\n            Create PIN\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"pin\"\r\n            value={pin}\r\n            onChange={(e) => setPin(e.target.value)}\r\n            className=\"w-full px-3 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            style={{ \r\n              borderColor: COLORS.border,\r\n              backgroundColor: COLORS.background\r\n            }}\r\n            placeholder=\"Enter your secure PIN\"\r\n          />\r\n        </div>\r\n\r\n        {/* Requirements */}\r\n        <div \r\n          className=\"p-4 rounded-lg\"\r\n          style={{ backgroundColor: COLORS.backgroundSecondary }}\r\n        >\r\n          <h4 \r\n            className=\"text-sm font-medium mb-3\"\r\n            style={{ color: COLORS.textPrimary }}\r\n          >\r\n            PIN Requirements:\r\n          </h4>\r\n          <div className=\"space-y-2\">\r\n            {Object.entries({\r\n              length: 'At least 8 characters',\r\n              number: 'One number (0-9)',\r\n              special: 'One special character (!@#$%^&*)'\r\n            }).map(([key, label]) => (\r\n              <div key={key} className=\"flex items-center\">\r\n                <div \r\n                  className=\"w-4 h-4 rounded-full mr-2 flex items-center justify-center\"\r\n                  style={{ \r\n                    backgroundColor: requirements[key] ? COLORS.success : COLORS.border \r\n                  }}\r\n                >\r\n                  {requirements[key] && (\r\n                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span \r\n                  className=\"text-sm\"\r\n                  style={{ \r\n                    color: requirements[key] ? COLORS.success : COLORS.textSecondary \r\n                  }}\r\n                >\r\n                  {label}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <PrimaryButton\r\n          label=\"Create PIN\"\r\n          onClick={handleSubmit}\r\n          disabled={!canSubmit}\r\n          testId=\"create-pin-button\"\r\n        />\r\n      </form>\r\n\r\n      {userEmail && (\r\n        <p \r\n          className=\"text-center text-sm\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          Securing account for: <span className=\"font-medium\">{userEmail}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Info', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: '👤',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'personality', \n    name: 'Personality', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: '💝',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  },\n  { \n    id: 'preferences', \n    name: 'Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: '⚙️',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  }\n];\n\n// Data Type Toggle Component (similar to PlatformToggle)\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 150);\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  return (\n    <div \n      className={`w-full p-4 border rounded-xl cursor-pointer transition-all duration-200 ${!isLast ? 'mb-3' : ''}`}\n      style={{\n        backgroundColor: isPressed ? COLORS.grey50 : COLORS.surface,\n        borderColor: isEnabled ? COLORS.primary : COLORS.grey200,\n        borderWidth: '1px',\n        transform: isPressed ? 'scale(0.99)' : 'scale(1)',\n        opacity: dataType.required ? 0.6 : 1,\n        cursor: dataType.required ? 'default' : 'pointer'\n      }}\n      onClick={handlePress}\n    >\n      <div className=\"flex items-start justify-between\">\n        {/* Left side - Icon and content */}\n        <div className=\"flex items-start space-x-3 flex-1\">\n          {/* Icon circle */}\n          <div \n            className=\"flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center\"\n            style={{\n              backgroundColor: COLORS.grey100\n            }}\n          >\n            <span className=\"text-xl\">{dataType.icon}</span>\n          </div>\n          \n          {/* Content */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <h3 \n                className=\"font-semibold text-left\"\n                style={{ \n                  fontFamily: 'Inter, system-ui, sans-serif',\n                  fontWeight: '600',\n                  fontSize: '16px',\n                  lineHeight: '20px',\n                  color: COLORS.grey800\n                }}\n              >\n                {dataType.name}\n              </h3>\n              {dataType.required && (\n                <span \n                  className=\"text-xs px-2 py-1 rounded-full\"\n                  style={{\n                    backgroundColor: COLORS.primary,\n                    color: COLORS.surface,\n                    fontFamily: 'Inter, system-ui, sans-serif',\n                    fontWeight: '500'\n                  }}\n                >\n                  Required\n                </span>\n              )}\n            </div>\n            <p \n              className=\"text-left\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '400',\n                fontSize: '14px',\n                lineHeight: '20px',\n                color: COLORS.grey600\n              }}\n            >\n              {dataType.description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Right side - Toggle */}\n        <div className=\"flex-shrink-0 ml-3\">\n          <div \n            className=\"w-12 h-6 rounded-full transition-all duration-200 relative\"\n            style={{\n              backgroundColor: isEnabled ? COLORS.primary : COLORS.grey300\n            }}\n          >\n            <div \n              className=\"w-5 h-5 bg-white rounded-full absolute top-0.5 transition-all duration-200\"\n              style={{\n                left: isEnabled ? '26px' : '2px',\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        try {\n          const confirmations = mapDataTypesToConfirmations(approvedData);\n          \n          const requestBody = testMode ? {\n            approvedData,\n            userEmail,\n            appName,\n            confirmations\n          } : {\n            approvedData,\n            userEmail,\n            appName,\n            confirmations\n          };\n\n          console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n          console.log('🔥 Request body:', requestBody);\n\n          const apiResponse = await fetch(apiEndpoint, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody)\n          });\n\n          if (!apiResponse.ok) {\n            throw new Error(`API request failed with status ${apiResponse.status}`);\n          }\n\n          const apiData = await apiResponse.json();\n          console.log('🔥 API Response:', apiData);\n\n          const result = {\n            ...baseResult,\n            apiResponse: apiData,\n            success: true\n          };\n\n          setIsLoadingApi(false);\n          console.log('🔥 DataRequest: Calling onComplete with result:', result);\n          onComplete(result);\n\n        } catch (apiError) {\n          console.error('🔥 API Error:', apiError);\n          setApiError(apiError.message);\n          setIsLoadingApi(false);\n          \n          const errorResult = {\n            ...baseResult,\n            apiResponse: null,\n            error: apiError.message,\n            success: false\n          };\n          \n          onComplete(errorResult);\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        onComplete(baseResult);\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ backgroundColor: COLORS.surface }}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 px-6 pt-6 pb-4\">\n        {/* Security Notice */}\n        <div \n          className=\"w-full p-4 rounded-xl mb-6 flex items-start space-x-3\"\n          style={{ \n            backgroundColor: '#EBF8FF',\n            border: `1px solid #BEE3F8`\n          }}\n        >\n          <div \n            className=\"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center mt-0.5\"\n            style={{ backgroundColor: '#3182CE' }}\n          >\n            <span className=\"text-white text-sm\">🔒</span>\n          </div>\n          <p \n            className=\"text-left\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '400',\n              fontSize: '14px',\n              lineHeight: '20px',\n              color: '#2B6CB0'\n            }}\n          >\n            Your selected data will be securely processed and used only for the intended purpose.\n          </p>\n        </div>\n\n        {/* Heading */}\n        <div className=\"mb-6\">\n          <h1 \n            className=\"font-bold text-left mb-2\"\n            style={{ \n              fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n              fontWeight: '700',\n              fontSize: '24px',\n              lineHeight: '32px',\n              color: COLORS.grey800\n            }}\n          >\n            Data Types\n          </h1>\n        </div>\n      </div>\n\n      {/* Scrollable Data Types Section */}\n      <div className=\"flex-1 px-6 overflow-y-auto\">\n        <div className=\"pb-32\">\n          {dataTypes.map((dataType, index) => (\n            <DataTypeToggle\n              key={dataType.id}\n              dataType={dataType}\n              isEnabled={selectedData[dataType.id]}\n              onToggle={handleDataToggle}\n              isLast={index === dataTypes.length - 1}\n            />\n          ))}\n\n          {/* Selection Summary */}\n          <div \n            className=\"mt-6 p-4 rounded-xl flex items-center space-x-2\"\n            style={{ backgroundColor: COLORS.grey50 }}\n          >\n            <span \n              className=\"text-sm\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '500',\n                color: COLORS.grey600\n              }}\n            >\n              ✅ {selectedCount} data type{selectedCount !== 1 ? 's' : ''} selected\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Fixed Bottom Buttons */}\n      <div \n        className=\"flex-shrink-0 px-6 pb-6\"\n        style={{ \n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          backgroundColor: COLORS.surface,\n          paddingTop: '24px'\n        }}\n      >\n        <div className=\"mb-4\">\n          <PrimaryButton\n            label={isLoadingApi ? \"Processing...\" : \"Share Selected Data\"}\n            onPress={fetchUserData}\n            disabled={isLoadingApi || selectedCount === 0}\n            loading={isLoadingApi}\n          />\n        </div>\n        \n        <div className=\"text-center\">\n          <button \n            className=\"text-center\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '500',\n              fontSize: '16px',\n              color: COLORS.grey600,\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer'\n            }}\n            onClick={() => onComplete({ cancelled: true })}\n          >\n            Cancel\n          </button>\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div \n            className=\"mt-4 p-3 rounded-lg text-center\"\n            style={{ \n              backgroundColor: '#FEF2F2',\n              borderColor: '#FECACA',\n              color: '#DC2626'\n            }}\n          >\n            <p className=\"text-sm\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App' }) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: 'Setting up your personal AI',\r\n      description: 'Initializing your secure data model',\r\n      icon: '🤖',\r\n      duration: 2000\r\n    },\r\n    {\r\n      title: 'Processing your connections',\r\n      description: 'Analyzing your social media patterns',\r\n      icon: '🔗',\r\n      duration: 2500\r\n    },\r\n    {\r\n      title: 'Training your model',\r\n      description: 'Building your personalized insights',\r\n      icon: '🧠',\r\n      duration: 3000\r\n    },\r\n    {\r\n      title: 'Finalizing setup',\r\n      description: 'Preparing your Onairos experience',\r\n      icon: '✨',\r\n      duration: 2000\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let stepTimeout;\r\n\r\n    if (currentStep < steps.length) {\r\n      const stepDuration = steps[currentStep].duration;\r\n      const stepProgress = 100 / steps.length;\r\n\r\n      // Update progress gradually\r\n      interval = setInterval(() => {\r\n        setProgress(prev => {\r\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\r\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\r\n        });\r\n      }, 100);\r\n\r\n      // Move to next step after duration\r\n      stepTimeout = setTimeout(() => {\r\n        if (currentStep < steps.length - 1) {\r\n          setCurrentStep(prev => prev + 1);\r\n        } else {\r\n          setIsComplete(true);\r\n          setTimeout(() => {\r\n            onComplete({\r\n              trainingComplete: true,\r\n              timestamp: new Date().toISOString(),\r\n              userEmail: userEmail,\r\n              appName: appName\r\n            });\r\n          }, 1000);\r\n        }\r\n      }, stepDuration);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n      if (stepTimeout) clearTimeout(stepTimeout);\r\n    };\r\n  }, [currentStep, onComplete, userEmail, appName]);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center space-y-8\">\r\n      <div className=\"text-center\">\r\n        <div \r\n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\r\n          style={{\r\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\r\n          }}\r\n        >\r\n          <div className=\"text-3xl\">\r\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\r\n          </div>\r\n        </div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-2\"\r\n          style={{ color: COLORS.textPrimary }}\r\n        >\r\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\r\n        </h2>\r\n        <p style={{ color: COLORS.textSecondary }}>\r\n          {isComplete \r\n            ? 'Your personal AI is ready to use' \r\n            : steps[currentStep]?.description\r\n          }\r\n        </p>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"w-full\">\r\n        <div \r\n          className=\"flex justify-between text-sm mb-2\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          <span>Progress</span>\r\n          <span>{Math.round(progress)}%</span>\r\n        </div>\r\n        <div \r\n          className=\"w-full rounded-full h-2\"\r\n          style={{ backgroundColor: COLORS.borderLight }}\r\n        >\r\n          <div \r\n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\r\n            style={{ \r\n              width: `${progress}%`,\r\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Steps Indicator */}\r\n      <div className=\"flex justify-center space-x-2\">\r\n        {steps.map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\r\n            style={{\r\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Current Step Details */}\r\n      <div \r\n        className=\"p-4 rounded-lg w-full\"\r\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\r\n      >\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div \r\n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\r\n            style={{ backgroundColor: '#DBEAFE' }}\r\n          >\r\n            <div className=\"text-sm\">\r\n              {isComplete ? '✅' : steps[currentStep]?.icon}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 \r\n              className=\"font-medium\"\r\n              style={{ color: COLORS.textPrimary }}\r\n            >\r\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\r\n            </h3>\r\n            <p \r\n              className=\"text-sm\"\r\n              style={{ color: COLORS.textSecondary }}\r\n            >\r\n              {isComplete \r\n                ? 'Your Onairos experience is ready' \r\n                : steps[currentStep]?.description\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* App Info */}\r\n      <div className=\"text-center\">\r\n        <p \r\n          className=\"text-sm\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          Setting up for <span className=\"font-medium\">{appName}</span>\r\n        </p>\r\n        {userEmail && (\r\n          <p \r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.textMuted }}\r\n          >\r\n            {userEmail}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ","/**\r\n * Response formatter utility for Onairos SDK\r\n * Converts array-based responses to dictionary format for better developer experience\r\n */\r\n\r\n// Standard 16 personality types in order that the API returns them\r\nexport const PERSONALITY_TYPES = [\r\n  'Analyst',\r\n  'Diplomat', \r\n  'Sentinel',\r\n  'Explorer',\r\n  'Architect',\r\n  'Logician',\r\n  'Commander',\r\n  'Debater',\r\n  'Advocate',\r\n  'Mediator',\r\n  'Protagonist',\r\n  'Campaigner',\r\n  'Logistician',\r\n  'Defender',\r\n  'Executive',\r\n  'Consul'\r\n];\r\n\r\n// Standard trait categories that might be returned\r\nexport const TRAIT_CATEGORIES = [\r\n  'Openness',\r\n  'Conscientiousness',\r\n  'Extraversion',\r\n  'Agreeableness',\r\n  'Neuroticism'\r\n];\r\n\r\n/**\r\n * Formats API response to include both array and dictionary formats\r\n * @param {Object} apiResponse - Raw API response from Onairos\r\n * @param {Object} options - Formatting options\r\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\r\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\r\n * @returns {Object} Formatted response with both formats\r\n */\r\nexport function formatOnairosResponse(apiResponse, options = {}) {\r\n  const { includeDictionary = true, includeArray = true } = options;\r\n  \r\n  if (!apiResponse) {\r\n    return apiResponse;\r\n  }\r\n\r\n  const formatted = { ...apiResponse };\r\n\r\n  // Handle personality scores if present\r\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\r\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\r\n    \r\n    if (Array.isArray(scores) && scores.length >= 16) {\r\n      if (includeDictionary) {\r\n        // Create personality dictionary\r\n        const personalityDict = {};\r\n        PERSONALITY_TYPES.forEach((type, index) => {\r\n          personalityDict[type] = scores[index];\r\n        });\r\n        \r\n        // Add to formatted response\r\n        if (formatted.InferenceResult) {\r\n          formatted.InferenceResult.personalityDict = personalityDict;\r\n        } else {\r\n          formatted.personalityDict = personalityDict;\r\n        }\r\n      }\r\n      \r\n      if (!includeArray) {\r\n        // Remove array format if not requested\r\n        if (formatted.InferenceResult?.traits) {\r\n          delete formatted.InferenceResult.traits;\r\n        }\r\n        if (formatted.traits) {\r\n          delete formatted.traits;\r\n        }\r\n        if (formatted.scores) {\r\n          delete formatted.scores;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle trait data if present (for preferences/traits)\r\n  if (apiResponse.traitResult || apiResponse.traits) {\r\n    const traits = apiResponse.traitResult || apiResponse.traits;\r\n    \r\n    if (Array.isArray(traits) && includeDictionary) {\r\n      const traitDict = {};\r\n      TRAIT_CATEGORIES.forEach((category, index) => {\r\n        if (traits[index] !== undefined) {\r\n          traitDict[category] = traits[index];\r\n        }\r\n      });\r\n      \r\n      formatted.traitDict = traitDict;\r\n    }\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Legacy formatter for backward compatibility\r\n * Converts scores array to personality dictionary only\r\n * @param {Array} scores - Array of personality scores\r\n * @returns {Object} Dictionary with personality type names as keys\r\n */\r\nexport function formatPersonalityScores(scores) {\r\n  if (!Array.isArray(scores) || scores.length < 16) {\r\n    console.warn('Invalid scores array provided to formatPersonalityScores');\r\n    return {};\r\n  }\r\n\r\n  const personalityDict = {};\r\n  PERSONALITY_TYPES.forEach((type, index) => {\r\n    personalityDict[type] = scores[index];\r\n  });\r\n  \r\n  return personalityDict;\r\n}\r\n\r\n/**\r\n * Get personality type names in order\r\n * @returns {Array} Array of personality type names\r\n */\r\nexport function getPersonalityTypes() {\r\n  return [...PERSONALITY_TYPES];\r\n}\r\n\r\n/**\r\n * Get trait category names in order  \r\n * @returns {Array} Array of trait category names\r\n */\r\nexport function getTraitCategories() {\r\n  return [...TRAIT_CATEGORIES];\r\n} ","import React from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Standardized page layout component with white background\r\nconst PageLayout = ({\r\n  children,\r\n  title,\r\n  subtitle,\r\n  icon,\r\n  showHeader = true,\r\n  showCloseButton = false,\r\n  onClose,\r\n  onBack,\r\n  showBackButton = false,\r\n  className = '',\r\n  contentClassName = '',\r\n  centerContent = true,\r\n  style = {},\r\n  ...props\r\n}) => {\r\n  const layoutStyle = {\r\n    backgroundColor: COLORS.background,\r\n    minHeight: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...style\r\n  };\r\n\r\n  const headerStyle = {\r\n    position: 'sticky',\r\n    top: 0,\r\n    backgroundColor: COLORS.background,\r\n    zIndex: 10,\r\n    padding: '12px 24px 8px',\r\n    borderBottom: `1px solid ${COLORS.borderLight}`\r\n  };\r\n\r\n  const contentStyle = {\r\n    flex: 1,\r\n    padding: '24px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...(centerContent && {\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start'\r\n    })\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: '24px',\r\n    fontWeight: '700',\r\n    color: COLORS.textPrimary,\r\n    margin: '0 0 8px 0',\r\n    textAlign: centerContent ? 'center' : 'left'\r\n  };\r\n\r\n  const subtitleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: '16px',\r\n    fontWeight: '400',\r\n    color: COLORS.textSecondary,\r\n    margin: '0 0 32px 0',\r\n    textAlign: centerContent ? 'center' : 'left',\r\n    lineHeight: '1.5'\r\n  };\r\n\r\n  const iconStyle = {\r\n    width: '48px',\r\n    height: '48px',\r\n    margin: '0 auto 24px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '24px'\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`onairos-page-layout ${className}`}\r\n      style={layoutStyle}\r\n      {...props}\r\n    >\r\n      {/* Header with navigation */}\r\n      {showHeader && (\r\n        <div style={headerStyle}>\r\n          <div className=\"flex items-center justify-between\">\r\n            {/* Back button */}\r\n            {showBackButton && onBack && (\r\n              <button\r\n                onClick={onBack}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Go back\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\r\n              </button>\r\n            )}\r\n\r\n            {/* Handle bar for mobile-like experience */}\r\n            <div \r\n              className=\"w-12 h-1.5 rounded-full mx-auto\"\r\n              style={{ backgroundColor: COLORS.border }}\r\n            />\r\n\r\n            {/* Close button */}\r\n            {showCloseButton && onClose && (\r\n              <button\r\n                onClick={onClose}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main content area */}\r\n      <div \r\n        className={`onairos-page-content ${contentClassName}`}\r\n        style={contentStyle}\r\n      >\r\n        {/* Icon */}\r\n        {icon && (\r\n          <div style={iconStyle}>\r\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\r\n          </div>\r\n        )}\r\n\r\n        {/* Title */}\r\n        {title && (\r\n          <h1 style={titleStyle}>\r\n            {title}\r\n          </h1>\r\n        )}\r\n\r\n        {/* Subtitle */}\r\n        {subtitle && (\r\n          <p style={subtitleStyle}>\r\n            {subtitle}\r\n          </p>\r\n        )}\r\n\r\n        {/* Page content */}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Modal wrapper component for overlay-style pages\r\nconst ModalPageLayout = ({\r\n  children,\r\n  visible = true,\r\n  onClose,\r\n  onBackdropClick,\r\n  backdropStyle = {},\r\n  modalStyle = {},\r\n  ...pageLayoutProps\r\n}) => {\r\n  if (!visible) return null;\r\n\r\n  const backdropStyles = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    zIndex: 1000,\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'center',\r\n    ...backdropStyle\r\n  };\r\n\r\n  const modalStyles = {\r\n    backgroundColor: COLORS.background,\r\n    borderTopLeftRadius: '24px',\r\n    borderTopRightRadius: '24px',\r\n    maxHeight: '85vh',\r\n    minHeight: '45vh',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\r\n    overflow: 'hidden',\r\n    ...modalStyle\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      if (onBackdropClick) {\r\n        onBackdropClick();\r\n      } else if (onClose) {\r\n        onClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={backdropStyles} onClick={handleBackdropClick}>\r\n      <div style={modalStyles}>\r\n        <PageLayout\r\n          showHeader={true}\r\n          showCloseButton={true}\r\n          onClose={onClose}\r\n          {...pageLayoutProps}\r\n        >\r\n          {children}\r\n        </PageLayout>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ModalPageLayout };\r\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = false,\n  testMode = false,\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true }\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('email'); // 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('email');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request flow within the same overlay\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'email':\n        return (\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <ModalPageLayout\n          visible={showOverlay}\n          onClose={handleCloseOverlay}\n          showBackButton={currentFlow !== 'email' && currentFlow !== 'dataRequest'}\n          onBack={() => {\n            if (currentFlow === 'onboarding') setCurrentFlow('email');\n            if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n            if (currentFlow === 'training') setCurrentFlow('pin');\n          }}\n          title={getFlowTitle()}\n          subtitle={getFlowSubtitle()}\n          icon={getFlowIcon()}\n          centerContent={true}\n        >\n          {renderCurrentFlow()}\n        </ModalPageLayout>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__[\"default\"] });","/**\r\n * Standalone Onairos Overlay Handler\r\n * Allows developers to trigger the Onairos flow programmatically without the button component\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { OnairosButton } from '../onairosButton.jsx';\r\nimport { formatOnairosResponse } from './responseFormatter.js';\r\n\r\n/**\r\n * Opens the Onairos overlay flow programmatically\r\n * @param {Object} config - Configuration options\r\n * @param {Array} config.requestData - Data types to request ['basic', 'personality', 'preferences']\r\n * @param {string} config.webpageName - Name of your application\r\n * @param {Function} config.onComplete - Callback function when flow completes\r\n * @param {boolean} config.autoFetch - Whether to auto-fetch data (default: false)\r\n * @param {boolean} config.testMode - Whether to use test mode (default: false)\r\n * @param {string} config.appIcon - URL to your app icon (optional)\r\n * @param {boolean} config.formatResponse - Whether to format response with dictionary (default: true)\r\n * @param {Object} config.responseFormat - Response formatting options\r\n * @returns {Promise<Function>} Promise that resolves to a cleanup function\r\n */\r\nexport async function openOnairosOverlay(config = {}) {\r\n  const {\r\n    requestData = ['basic', 'personality'],\r\n    webpageName = 'My App',\r\n    onComplete = null,\r\n    autoFetch = false,\r\n    testMode = false,\r\n    appIcon = null,\r\n    formatResponse = true,\r\n    responseFormat = { includeDictionary: true, includeArray: true },\r\n    ...otherProps\r\n  } = config;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // Create a container for the overlay\r\n      const containerId = `onairos-overlay-${Math.random().toString(36).substr(2, 9)}`;\r\n      const container = document.createElement('div');\r\n      container.id = containerId;\r\n      container.style.position = 'fixed';\r\n      container.style.top = '0';\r\n      container.style.left = '0';\r\n      container.style.width = '100%';\r\n      container.style.height = '100%';\r\n      container.style.zIndex = '9999';\r\n      container.style.pointerEvents = 'none'; // Allow clicks to pass through to the button\r\n      \r\n      document.body.appendChild(container);\r\n\r\n      // Cleanup function\r\n      const cleanup = () => {\r\n        if (container && container.parentNode) {\r\n          try {\r\n            ReactDOM.unmountComponentAtNode(container);\r\n          } catch (error) {\r\n            console.warn('Error unmounting React component:', error);\r\n          }\r\n          container.parentNode.removeChild(container);\r\n        }\r\n      };\r\n\r\n      // Enhanced onComplete handler\r\n      const handleComplete = (result) => {\r\n        let formattedResult = result;\r\n        \r\n        // Format response if requested\r\n        if (formatResponse && result?.apiResponse) {\r\n          try {\r\n            formattedResult = {\r\n              ...result,\r\n              apiResponse: formatOnairosResponse(result.apiResponse, responseFormat)\r\n            };\r\n          } catch (error) {\r\n            console.warn('Error formatting response:', error);\r\n            // Continue with original result if formatting fails\r\n          }\r\n        }\r\n\r\n        // Call the original onComplete callback\r\n        if (onComplete && typeof onComplete === 'function') {\r\n          try {\r\n            onComplete(formattedResult);\r\n          } catch (error) {\r\n            console.error('Error in onComplete callback:', error);\r\n          }\r\n        }\r\n\r\n        // Cleanup after a short delay to allow animations\r\n        setTimeout(cleanup, 100);\r\n      };\r\n\r\n      // Create the Onairos button component with auto-open\r\n      const OnairosElement = React.createElement(OnairosButton, {\r\n        requestData,\r\n        webpageName,\r\n        onComplete: handleComplete,\r\n        autoFetch,\r\n        testMode,\r\n        appIcon,\r\n        visualType: 'icon', // Use icon-only to minimize visual footprint\r\n        buttonType: 'pill',\r\n        textColor: 'white',\r\n        style: { opacity: 0, position: 'absolute', top: '-9999px' }, // Hide the button\r\n        ...otherProps\r\n      });\r\n\r\n      // Render the component\r\n      ReactDOM.render(OnairosElement, container);\r\n\r\n      // Auto-click the button to open overlay after render\r\n      setTimeout(() => {\r\n        const button = container.querySelector('button');\r\n        if (button) {\r\n          button.click();\r\n          resolve(cleanup); // Resolve with cleanup function\r\n        } else {\r\n          cleanup();\r\n          reject(new Error('Failed to render Onairos button'));\r\n        }\r\n      }, 100);\r\n\r\n    } catch (error) {\r\n      console.error('Error opening Onairos overlay:', error);\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Alternative method using React hooks for React applications\r\n * @param {Object} config - Same configuration as openOnairosOverlay\r\n * @returns {Object} Hook object with open function and state\r\n */\r\nexport function useOnairosOverlay(config = {}) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const cleanupRef = React.useRef(null);\r\n\r\n  const open = React.useCallback(async (overrideConfig = {}) => {\r\n    if (isOpen || isLoading) return;\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const finalConfig = {\r\n        ...config,\r\n        ...overrideConfig,\r\n        onComplete: (result) => {\r\n          setIsOpen(false);\r\n          setIsLoading(false);\r\n          \r\n          // Call original onComplete if provided\r\n          if (config.onComplete) {\r\n            config.onComplete(result);\r\n          }\r\n          if (overrideConfig.onComplete) {\r\n            overrideConfig.onComplete(result);\r\n          }\r\n        }\r\n      };\r\n\r\n      const cleanup = await openOnairosOverlay(finalConfig);\r\n      cleanupRef.current = cleanup;\r\n      setIsOpen(true);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error('Error opening overlay:', error);\r\n    }\r\n  }, [config, isOpen, isLoading]);\r\n\r\n  const close = React.useCallback(() => {\r\n    if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = null;\r\n    }\r\n    setIsOpen(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Cleanup on unmount\r\n  React.useEffect(() => {\r\n    return () => {\r\n      if (cleanupRef.current) {\r\n        cleanupRef.current();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    open,\r\n    close,\r\n    isOpen,\r\n    isLoading\r\n  };\r\n}\r\n\r\n/**\r\n * Simple function to get user data without UI (for existing authenticated users)\r\n * @param {Object} config - Configuration options\r\n * @param {Array} config.requestData - Data types to request\r\n * @param {string} config.userEmail - User email (if known)\r\n * @param {string} config.appName - App name\r\n * @param {boolean} config.testMode - Whether to use test mode\r\n * @param {boolean} config.formatResponse - Whether to format response\r\n * @returns {Promise<Object>} Promise that resolves to user data\r\n */\r\nexport async function getOnairosData(config = {}) {\r\n  const {\r\n    requestData = ['basic', 'personality'],\r\n    userEmail = '',\r\n    appName = 'My App',\r\n    testMode = false,\r\n    formatResponse = true,\r\n    responseFormat = { includeDictionary: true, includeArray: true }\r\n  } = config;\r\n\r\n  // This would need to be implemented based on your existing API logic\r\n  // For now, it's a placeholder that developers can use as a reference\r\n  throw new Error('getOnairosData requires authenticated user session. Use openOnairosOverlay for the full authentication flow.');\r\n} ","import React from 'react';\r\nimport OnairosButton from './onairosButton.jsx';\r\n\r\n// Main Onairos component\r\nexport function Onairos(props) {\r\n  return (\r\n    <>\r\n      <OnairosButton {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\n// Export both the main component and individual components\r\nexport { OnairosButton };\r\nexport default Onairos;\r\n\r\n// Export overlay handler functions for programmatic access\r\nexport { \r\n  openOnairosOverlay, \r\n  useOnairosOverlay, \r\n  getOnairosData \r\n} from './utils/overlayHandler.js';\r\n\r\n// Export response formatting utilities\r\nexport { \r\n  formatOnairosResponse, \r\n  formatPersonalityScores,\r\n  getPersonalityTypes,\r\n  getTraitCategories,\r\n  PERSONALITY_TYPES,\r\n  TRAIT_CATEGORIES\r\n} from './utils/responseFormatter.js';\r\n\r\n// Initialize SDK functionality (if needed)\r\nexport const initializeApiKey = async (config) => {\r\n  // SDK initialization logic would go here\r\n  console.log('🔧 SDK initialized with config:', config);\r\n  return Promise.resolve();\r\n};\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_react__","createElement","forwardRef","useEffect","useState","toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","startsWith","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","Number","map","tag","attrs","Array","isArray","Check","iconName","Component","displayName","createLucideIcon","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","_ref","React","concat","style","borderRadius","fontSize","backgroundColor","_ref2","label","onClick","iconRight","loading","disabled","testId","textStyle","_objectWithoutProperties","_excluded","setPressed","buttonStyle","_objectSpread","position","overflow","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","handleEmailSubmit","async","e","preventDefault","test","validateEmail","setTimeout","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","console","log","message","handleCodeSubmit","verified","token","jwtToken","userName","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","split","lineHeight","borderColor","type","value","onChange","target","placeholder","required","flex","minHeight","PrimaryButton","from","length","_","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","platforms","name","icon","connector","sdkConfig","process","env","REACT_APP_ONAIROS_API_KEY","baseUrl","REACT_APP_ONAIROS_BASE_URL","sdkType","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","UniversalOnboarding","onComplete","appIcon","appName","connectedAccounts","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","connectionErrors","setConnectionErrors","connectionHealth","setConnectionHealth","healthScore","setHealthScore","handleOAuthReturn","platform","localStorage","getItem","removeItem","prev","connectToPlatform","platformName","find","p","_localStorage$getItem","username","authorizeUrl","session","status","statusText","responseData","possibleKeys","oauthUrl","usedKey","keys","navigator","userAgent","innerWidth","setItem","location","href","popup","open","hasNavigatedToOnairos","checkInterval","setInterval","hostname","close","closed","clearInterval","successFlag","errorFlag","timestamp","isRecentSignal","Date","now","parseInt","connectedCount","values","src","alt","isConnected","isCurrentlyConnecting","hasError","isDisabled","handleToggle","fillRule","clipRule","handleContinue","connected","entries","_ref3","totalConnections","sdkVersion","enhancedFeatures","healthMonitoring","autoRefresh","connectionValidation","PinSetup","userEmail","pin","setPin","requirements","setRequirements","number","special","canSubmit","every","req","handleSubmit","pinCreated","toISOString","onSubmit","htmlFor","id","dataTypes","description","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","isPressed","setIsPressed","grey50","surface","primary","grey200","borderWidth","transform","handlePress","grey100","grey800","grey600","grey300","autoFetch","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","selectedCount","paddingTop","onPress","userHash","hash","str","toString","i","charCodeAt","Math","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","requestBody","apiResponse","apiData","result","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","progress","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","min","trainingComplete","clearTimeout","round","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","undefined","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","warn","getPersonalityTypes","getTraitCategories","PageLayout","subtitle","showHeader","showCloseButton","onClose","onBack","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","zIndex","padding","borderBottom","contentStyle","titleStyle","margin","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","maxHeight","maxWidth","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","enableTraining","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","handleCloseOverlay","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","buttonClass","logoStyle","marginRight","getText","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","DataRequest","__WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__","openOnairosOverlay","config","otherProps","Promise","resolve","reject","containerId","random","substr","container","document","pointerEvents","appendChild","cleanup","parentNode","ReactDOM","removeChild","handleComplete","OnairosElement","button","querySelector","click","useOnairosOverlay","isOpen","setIsOpen","cleanupRef","overrideConfig","finalConfig","current","getOnairosData","Onairos","initializeApiKey"],"sourceRoot":""}