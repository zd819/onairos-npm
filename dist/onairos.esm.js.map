{"version":3,"file":"onairos.esm.js","mappings":"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","sources":["webpack://onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://onairos/./src/theme/colors.js","webpack://onairos/./src/components/ui/PrimaryButton.jsx","webpack://onairos/./src/components/EmailAuth.js","webpack://onairos/./src/components/UniversalOnboarding.jsx","webpack://onairos/./src/components/PinSetup.js","webpack://onairos/./src/components/DataRequest.js","webpack://onairos/./src/components/TrainingComponent.jsx","webpack://onairos/./src/utils/responseFormatter.js","webpack://onairos/./src/components/ui/PageLayout.jsx","webpack://onairos/./src/onairosButton.jsx","webpack://onairos/./src/utils/overlayHandler.js","webpack://onairos/./src/onairos.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'verify',\n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching SignInStep.tsx */}\n      <div className=\"w-full mb-6\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Your AI persona is getting closer\n        </h1>\n        <p \n          className=\"text-left\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          Sign in or create an account\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Any valid email will work</p>\n        </div>\n      )}\n\n      {/* Email Input - matching SignInStep design */}\n      <div className=\"mb-8\">\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your email\"\n          className=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n          style={{ \n            borderColor: COLORS.border,\n            backgroundColor: COLORS.background,\n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontSize: '16px'\n          }}\n          required\n        />\n      </div>\n\n      {/* Divider - matching SignInStep.tsx */}\n      <div className=\"flex items-center mb-8\">\n        <div \n          className=\"flex-1 h-px\"\n          style={{ backgroundColor: '#E5E5E5' }}\n        />\n        <span \n          className=\"px-4 text-sm\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            color: COLORS.textMuted\n          }}\n        >\n          Or\n        </span>\n        <div \n          className=\"flex-1 h-px\"\n          style={{ backgroundColor: '#E5E5E5' }}\n        />\n      </div>\n\n      {/* Google Button - matching design */}\n      <div className=\"mb-8\">\n        <button\n          type=\"button\"\n          className=\"w-full flex items-center justify-center px-4 py-3 border rounded-lg hover:bg-gray-50 transition-colors\"\n          style={{ \n            borderColor: COLORS.border,\n            backgroundColor: COLORS.background,\n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontSize: '16px',\n            fontWeight: '500',\n            color: COLORS.textPrimary\n          }}\n        >\n          <svg className=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n            <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n            <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n            <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n            <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n          </svg>\n          Continue with Google\n        </button>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Continue Button - positioned at bottom */}\n      <div className=\"w-full\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleEmailSubmit}\n          loading={isLoading}\n          disabled={isLoading || !email.trim()}\n          testId=\"email-continue-button\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full mb-10\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"text-left mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Use code 123456</p>\n        </div>\n      )}\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-4 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"w-full mb-6\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleCodeSubmit}\n          loading={isLoading}\n          disabled={isLoading || code.length !== 6}\n          testId=\"verify-code-button\"\n        />\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"w-full\">\n        <button\n          type=\"button\"\n          onClick={() => setStep('email')}\n          className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Use a different email\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\n\nconst platforms = [\n  { name: 'YouTube', icon: '📺', color: 'bg-red-500', connector: 'youtube' },\n  { name: 'LinkedIn', icon: '💼', color: 'bg-blue-700', connector: 'linkedin' },\n  { name: 'Reddit', icon: '🔥', color: 'bg-orange-500', connector: 'reddit' },\n  { name: 'Pinterest', icon: '📌', color: 'bg-red-600', connector: 'pinterest' },\n  { name: 'Instagram', icon: '📷', color: 'bg-pink-500', connector: 'instagram' },\n  { name: 'GitHub', icon: '⚡', color: 'bg-gray-800', connector: 'github' },\n  { name: 'Facebook', icon: '👥', color: 'bg-blue-600', connector: 'facebook' },\n  { name: 'Gmail', icon: '✉️', color: 'bg-red-400', connector: 'gmail' }\n];\n\n// Enhanced SDK configuration\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web', // web, mobile, desktop\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true\n};\n\n/**\n * UniversalOnboarding Component - Compact & Enhanced\n * Displays a streamlined onboarding screen for data connections\n */\nexport default function UniversalOnboarding({ onComplete, appIcon, appName = 'App' }) {\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [connectionErrors, setConnectionErrors] = useState({});\n  const [connectionHealth, setConnectionHealth] = useState({});\n  const [healthScore, setHealthScore] = useState(0);\n\n  // Mobile device detection\n  const isMobileDevice = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n           (window.innerWidth <= 768);\n  };\n\n  // Handle mobile OAuth return\n  useEffect(() => {\n    const handleOAuthReturn = () => {\n      const platform = localStorage.getItem('onairos_oauth_platform');\n      if (platform) {\n        console.log(`📱 OAuth return detected for: ${platform}`);\n        \n        // Clear OAuth state\n        localStorage.removeItem('onairos_oauth_platform');\n        localStorage.removeItem('onairos_oauth_return');\n        \n        // Mark as connected\n        setConnectedAccounts(prev => ({\n          ...prev,\n          [platform]: true\n        }));\n        \n        // Clear any errors\n        setConnectionErrors(prev => ({\n          ...prev,\n          [platform]: null\n        }));\n        \n        console.log(`✅ ${platform} marked as connected from OAuth return`);\n      }\n    };\n\n    handleOAuthReturn();\n  }, []);\n\n  const connectToPlatform = async (platformName) => {\n    console.log(`🚀 connectToPlatform called for: ${platformName}`);\n    \n    const platform = platforms.find(p => p.name === platformName);\n    if (!platform?.connector) {\n      console.error(`❌ No connector found for platform: ${platformName}`);\n      return false;\n    }\n\n    try {\n      setIsConnecting(true);\n      setConnectingPlatform(platformName);\n      \n      // Clear any previous errors\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n      \n      console.log(`🔗 Starting OAuth connection for ${platformName}...`);\n      \n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      // Enhanced authorize endpoint with SDK type\n      const authorizeUrl = `${sdkConfig.baseUrl}/${platform.connector}/authorize`;\n      \n      const response = await fetch(authorizeUrl, {\n        method: 'POST',\n        headers: {\n          'x-api-key': sdkConfig.apiKey,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session: {\n            username: username\n          }\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n             const responseData = await response.json();\n       console.log(`📋 ${platformName} OAuth response:`, responseData);\n       \n       // Check for platform-specific URL keys with multiple fallbacks\n       const platformUrlKeys = {\n         'youtube': ['youtubeURL', 'youtubeUrl', 'youtube_url'],\n         'linkedin': ['linkedinURL', 'linkedinUrl', 'linkedin_url'], \n         'reddit': ['redditURL', 'redditUrl', 'reddit_url'],\n         'pinterest': ['pinterestURL', 'pinterestUrl', 'pinterest_url'],\n         'instagram': ['instagramURL', 'instagramUrl', 'instagram_url'],\n         'github': ['githubURL', 'githubUrl', 'github_url'],\n         'facebook': ['facebookURL', 'facebookUrl', 'facebook_url'],\n         'gmail': ['gmailURL', 'gmailUrl', 'gmail_url']\n       };\n       \n       const possibleKeys = platformUrlKeys[platform.connector] || [\n         `${platform.connector}URL`,\n         `${platform.connector}Url`, \n         `${platform.connector}_url`,\n         'platformURL',\n         'authUrl', \n         'url'\n       ];\n       \n       let oauthUrl = null;\n       let usedKey = null;\n       \n       // Try each possible key\n       for (const key of possibleKeys) {\n         if (responseData[key]) {\n           oauthUrl = responseData[key];\n           usedKey = key;\n           break;\n         }\n       }\n       \n       if (!oauthUrl) {\n         console.error(`❌ No OAuth URL found for ${platformName}:`);\n         console.error(`Expected one of:`, possibleKeys);\n         console.error(`Response keys:`, Object.keys(responseData));\n         console.error(`Full response:`, responseData);\n         throw new Error(`No OAuth URL found. Backend should return one of: ${possibleKeys.join(', ')}`);\n       }\n       \n       console.log(`✅ Found OAuth URL for ${platformName} using key: ${usedKey}`);\n        \n      if (isMobileDevice()) {\n        // Mobile: Use redirect flow\n        localStorage.setItem('onairos_oauth_platform', platformName);\n        localStorage.setItem('onairos_oauth_return', window.location.href);\n        window.location.href = oauthUrl;\n        return true;\n      } else {\n        // Desktop: Use popup flow with enhanced monitoring\n        const popup = window.open(\n          oauthUrl,\n          `${platform.connector}_oauth`,\n          'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no'\n        );\n        \n        if (!popup) {\n          throw new Error('Popup blocked. Please allow popups and try again.');\n        }\n\n                 // Enhanced popup monitoring with onairos.uk detection\n         let hasNavigatedToOnairos = false;\n         const checkInterval = setInterval(() => {\n           try {\n             // Try to detect if popup has navigated to onairos.uk (indicates success)\n             if (popup.location && popup.location.hostname === 'onairos.uk') {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated to onairos.uk - treating as success`);\n               \n               // Close the popup since it shows \"not found\"\n               popup.close();\n               return; // Let the popup.closed check handle the rest\n             }\n           } catch (e) {\n             // Cross-origin error is expected when popup navigates to onairos.uk\n             // This actually indicates the OAuth likely succeeded\n             if (!hasNavigatedToOnairos) {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated (cross-origin) - likely to onairos.uk`);\n             }\n           }\n           \n           try {\n             // Check if popup is closed\n             if (popup.closed) {\n               clearInterval(checkInterval);\n               \n               // Check for success or error signals from callback page\n               const successFlag = localStorage.getItem(`onairos_${platformName}_success`);\n               const errorFlag = localStorage.getItem(`onairos_${platformName}_error`);\n               const timestamp = localStorage.getItem(`onairos_${platformName}_timestamp`);\n               \n               // Only process recent signals (within 30 seconds)\n               const isRecentSignal = timestamp && (Date.now() - parseInt(timestamp) < 30000);\n               \n               if (successFlag && isRecentSignal) {\n                 // Success flow from callback page\n                 console.log(`✅ ${platformName} OAuth completed successfully (callback page)`);\n                 localStorage.removeItem(`onairos_${platformName}_success`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else if (errorFlag && isRecentSignal) {\n                 // Error flow from callback page\n                 console.log(`❌ ${platformName} OAuth failed:`, errorFlag);\n                 localStorage.removeItem(`onairos_${platformName}_error`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: errorFlag\n                 }));\n                 \n               } else if (hasNavigatedToOnairos) {\n                 // Popup navigated to onairos.uk - assume success\n                 console.log(`✅ ${platformName} OAuth likely successful (navigated to onairos.uk)`);\n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else {\n                 // No signal and no onairos navigation - assume user cancelled\n                 console.log(`⚠️ ${platformName} OAuth cancelled or no response`);\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: 'Connection was cancelled'\n                 }));\n               }\n               \n               setIsConnecting(false);\n               setConnectingPlatform(null);\n             }\n           } catch (error) {\n             // Cross-origin error when popup navigates away - this is normal\n             // console.log(`🔄 Popup navigated away for ${platformName}`);\n           }\n         }, 1000);\n\n                 // Auto-close popup if it shows onairos.uk \"not found\" page after 10 seconds\n         setTimeout(() => {\n           try {\n             if (!popup.closed && popup.location && popup.location.hostname === 'onairos.uk') {\n               console.log(`🚪 Auto-closing ${platformName} popup showing onairos.uk (not found)`);\n               popup.close();\n             }\n           } catch (e) {\n             // Cross-origin error is expected - try to close anyway if it's been 10 seconds\n             if (!popup.closed && hasNavigatedToOnairos) {\n               console.log(`🚪 Auto-closing ${platformName} popup (cross-origin, likely onairos.uk)`);\n               popup.close();\n             }\n           }\n         }, 10000);\n\n         // Final timeout after 5 minutes\n         setTimeout(() => {\n           if (!popup.closed) {\n             popup.close();\n             clearInterval(checkInterval);\n             setConnectionErrors(prev => ({\n               ...prev,\n               [platformName]: 'Connection timeout'\n             }));\n             setIsConnecting(false);\n             setConnectingPlatform(null);\n           }\n         }, 300000);\n\n        return true;\n      }\n    } catch (error) {\n      console.error(`❌ Error connecting to ${platformName}:`, error);\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: error.message\n      }));\n      setIsConnecting(false);\n      setConnectingPlatform(null);\n      return false;\n    }\n  };\n\n  const handleToggle = async (platformName) => {\n    console.log(`🔥 TOGGLE CLICKED: ${platformName}`);\n    \n    if (isConnecting && connectingPlatform !== platformName) {\n      console.log(`⚠️ Already connecting to ${connectingPlatform}, ignoring click on ${platformName}`);\n      return;\n    }\n    \n    const isConnected = connectedAccounts[platformName];\n    \n    if (isConnected) {\n      // Disconnect\n      console.log(`🔌 Disconnecting from ${platformName}...`);\n      setConnectedAccounts(prev => ({\n        ...prev,\n        [platformName]: false\n      }));\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n    } else {\n      // Connect\n      await connectToPlatform(platformName);\n    }\n  };\n\n  const handleContinue = () => {\n    const connected = Object.entries(connectedAccounts)\n      .filter(([platform, isConnected]) => isConnected)\n      .map(([platform]) => platform);\n    \n    onComplete({\n      connectedAccounts: connected,\n      totalConnections: connected.length,\n      healthScore: healthScore,\n      connectionHealth: connectionHealth,\n      sdkVersion: '2.1.7',\n      enhancedFeatures: {\n        healthMonitoring: sdkConfig.enableHealthMonitoring,\n        autoRefresh: sdkConfig.enableAutoRefresh,\n        connectionValidation: sdkConfig.enableConnectionValidation\n      }\n    });\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  return (\n    <div className=\"max-w-sm mx-auto bg-white p-4 rounded-lg shadow-lg\">\n      {/* Compact Header */}\n      <div className=\"flex items-center justify-center mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <img \n            src={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"} \n            alt={appName} \n            className=\"w-8 h-8 rounded-lg\"\n          />\n          <div className=\"flex items-center text-gray-400\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n            </svg>\n          </div>\n          <img \n            src=\"https://onairos.sirv.com/Images/OnairosBlack.png\" \n            alt=\"Onairos\" \n            className=\"w-8 h-8 rounded-lg\"\n          />\n        </div>\n      </div>\n\n      {/* Simple Clear Title */}\n      <div className=\"text-center mb-4\">\n        <h2 className=\"text-lg font-bold text-gray-900 mb-1\">Connect Data</h2>\n        <p className=\"text-gray-600 text-sm\">\n          Connect data here to enhance your {appName} experience\n        </p>\n      </div>\n\n      {/* Platform Toggle List */}\n      <div className=\"space-y-3 mb-4\">\n        {platforms.slice(0, 6).map((platform) => {\n          const isConnected = connectedAccounts[platform.name] || false;\n          const isCurrentlyConnecting = connectingPlatform === platform.name;\n          const hasError = connectionErrors[platform.name];\n          const isDisabled = isConnecting && !isCurrentlyConnecting;\n          \n          return (\n            <div \n              key={platform.name}\n              className={`flex items-center justify-between p-3 border rounded-lg transition-all duration-200 ${\n                isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:bg-gray-50'\n              } ${\n                isConnected ? 'border-green-300 bg-green-50' : \n                hasError ? 'border-red-300 bg-red-50' :\n                isCurrentlyConnecting ? 'border-blue-300 bg-blue-50' : \n                'border-gray-200 bg-white'\n              }`}\n              onClick={() => !isDisabled && handleToggle(platform.name)}\n            >\n              {/* Left side - Platform info */}\n              <div className=\"flex items-center space-x-3\">\n                {/* Platform Icon */}\n                <div className={`w-10 h-10 rounded-lg ${platform.color} flex items-center justify-center text-white text-lg relative`}>\n                  {isCurrentlyConnecting ? (\n                    <div className=\"animate-spin h-5 w-5 border-2 border-white rounded-full border-t-transparent\"></div>\n                  ) : (\n                    platform.icon\n                  )}\n                  \n                  {/* Connection Status Indicator */}\n                  {isConnected && !isCurrentlyConnecting && (\n                    <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                  \n                  {hasError && !isCurrentlyConnecting && (\n                    <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Platform Name and Description */}\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900 text-sm\">{platform.name}</h3>\n                  <p className=\"text-gray-600 text-xs\">\n                    {platform.name === 'YouTube' ? 'We analyze your watch history, likes, and subscriptions to understand your interests.' :\n                     platform.name === 'Pinterest' ? 'We analyze your pins, boards, and interests to understand your style and preferences.' :\n                     `Connect your ${platform.name} account to enhance your experience.`}\n                  </p>\n                  \n                  {/* Error Message */}\n                  {hasError && (\n                    <p className=\"text-xs text-red-600 mt-1\">\n                      {hasError}\n                    </p>\n                  )}\n                </div>\n              </div>\n              \n              {/* Right side - Toggle Switch */}\n              <div className=\"flex items-center\">\n                <button\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\n                    isConnected ? 'bg-blue-600' : 'bg-gray-200'\n                  } ${isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (!isDisabled) handleToggle(platform.name);\n                  }}\n                  disabled={isDisabled}\n                >\n                  <span\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                      isConnected ? 'translate-x-6' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Connection Status Summary */}\n      {connectedCount > 0 && (\n        <div className=\"mb-4 p-2 bg-green-50 border border-green-200 rounded-lg\">\n          <p className=\"text-green-800 text-sm text-center\">\n            ✅ {connectedCount} connection{connectedCount > 1 ? 's' : ''} active\n          </p>\n        </div>\n      )}\n\n      {/* Continue Button */}\n      <button\n        onClick={handleContinue}\n        disabled={connectedCount === 0}\n        className={`mx-auto px-3 py-2 rounded-lg font-medium transition-colors text-xs max-w-40 ${\n          connectedCount > 0\n            ? 'bg-blue-600 text-white hover:bg-blue-700'\n            : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n        }`}\n      >\n        {connectedCount > 0 ? `Continue with ${connectedCount} connection${connectedCount > 1 ? 's' : ''}` : 'Connect at least one platform'}\n      </button>\n\n      {/* Skip Option */}\n      <button\n        onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\n        className=\"mx-auto mt-2 py-2 px-4 text-gray-500 hover:text-gray-700 text-sm\"\n      >\n        Skip for now\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function PinSetup({ onComplete, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [requirements, setRequirements] = useState({\n    length: false,\n    number: false,\n    special: false\n  });\n\n  // Check PIN requirements (simplified)\n  useEffect(() => {\n    setRequirements({\n      length: pin.length >= 8,\n      number: /[0-9]/.test(pin),\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(pin)\n    });\n  }, [pin]);\n\n  const allRequirementsMet = Object.values(requirements).every(req => req);\n  const canSubmit = allRequirementsMet && pin.length > 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (canSubmit) {\n      // In a real app, you would hash the PIN before storing\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-6\">\n      <form onSubmit={handleSubmit} className=\"w-full space-y-6\">\n        {/* PIN Input */}\n        <div>\n          <label \n            htmlFor=\"pin\" \n            className=\"block text-sm font-medium mb-2\"\n            style={{ color: COLORS.textPrimary }}\n          >\n            Create PIN\n          </label>\n          <input\n            type=\"password\"\n            id=\"pin\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-3 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            style={{ \n              borderColor: COLORS.border,\n              backgroundColor: COLORS.background\n            }}\n            placeholder=\"Enter your secure PIN\"\n          />\n        </div>\n\n        {/* Requirements */}\n        <div \n          className=\"p-4 rounded-lg\"\n          style={{ backgroundColor: COLORS.backgroundSecondary }}\n        >\n          <h4 \n            className=\"text-sm font-medium mb-3\"\n            style={{ color: COLORS.textPrimary }}\n          >\n            PIN Requirements:\n          </h4>\n          <div className=\"space-y-2\">\n            {Object.entries({\n              length: 'At least 8 characters',\n              number: 'One number (0-9)',\n              special: 'One special character (!@#$%^&*)'\n            }).map(([key, label]) => (\n              <div key={key} className=\"flex items-center\">\n                <div \n                  className=\"w-4 h-4 rounded-full mr-2 flex items-center justify-center\"\n                  style={{ \n                    backgroundColor: requirements[key] ? COLORS.success : COLORS.border \n                  }}\n                >\n                  {requirements[key] && (\n                    <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span \n                  className=\"text-sm\"\n                  style={{ \n                    color: requirements[key] ? COLORS.success : COLORS.textSecondary \n                  }}\n                >\n                  {label}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Submit Button */}\n        <PrimaryButton\n          label=\"Create PIN\"\n          onClick={handleSubmit}\n          disabled={!canSubmit}\n          testId=\"create-pin-button\"\n        />\n      </form>\n\n      {userEmail && (\n        <p \n          className=\"text-center text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Securing account for: <span className=\"font-medium\">{userEmail}</span>\n        </p>\n      )}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Info', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: '👤',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'personality', \n    name: 'Personality', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: '💝',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  },\n  { \n    id: 'preferences', \n    name: 'Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: '⚙️',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  }\n];\n\n// Data Type Toggle Component (similar to PlatformToggle)\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 150);\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  return (\n    <div \n      className={`w-full p-4 border rounded-xl cursor-pointer transition-all duration-200 ${!isLast ? 'mb-3' : ''}`}\n      style={{\n        backgroundColor: isPressed ? COLORS.grey50 : COLORS.surface,\n        borderColor: isEnabled ? COLORS.primary : COLORS.grey200,\n        borderWidth: '1px',\n        transform: isPressed ? 'scale(0.99)' : 'scale(1)',\n        opacity: dataType.required ? 0.6 : 1,\n        cursor: dataType.required ? 'default' : 'pointer'\n      }}\n      onClick={handlePress}\n    >\n      <div className=\"flex items-start justify-between\">\n        {/* Left side - Icon and content */}\n        <div className=\"flex items-start space-x-3 flex-1\">\n          {/* Icon circle */}\n          <div \n            className=\"flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center\"\n            style={{\n              backgroundColor: COLORS.grey100\n            }}\n          >\n            <span className=\"text-xl\">{dataType.icon}</span>\n          </div>\n          \n          {/* Content */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <h3 \n                className=\"font-semibold text-left\"\n                style={{ \n                  fontFamily: 'Inter, system-ui, sans-serif',\n                  fontWeight: '600',\n                  fontSize: '16px',\n                  lineHeight: '20px',\n                  color: COLORS.grey800\n                }}\n              >\n                {dataType.name}\n              </h3>\n              {dataType.required && (\n                <span \n                  className=\"text-xs px-2 py-1 rounded-full\"\n                  style={{\n                    backgroundColor: COLORS.primary,\n                    color: COLORS.surface,\n                    fontFamily: 'Inter, system-ui, sans-serif',\n                    fontWeight: '500'\n                  }}\n                >\n                  Required\n                </span>\n              )}\n            </div>\n            <p \n              className=\"text-left\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '400',\n                fontSize: '14px',\n                lineHeight: '20px',\n                color: COLORS.grey600\n              }}\n            >\n              {dataType.description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Right side - Toggle */}\n        <div className=\"flex-shrink-0 ml-3\">\n          <div \n            className=\"w-12 h-6 rounded-full transition-all duration-200 relative\"\n            style={{\n              backgroundColor: isEnabled ? COLORS.primary : COLORS.grey300\n            }}\n          >\n            <div \n              className=\"w-5 h-5 bg-white rounded-full absolute top-0.5 transition-all duration-200\"\n              style={{\n                left: isEnabled ? '26px' : '2px',\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ backgroundColor: COLORS.surface }}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 px-6 pt-6 pb-4\">\n        {/* Security Notice */}\n        <div \n          className=\"w-full p-4 rounded-xl mb-6 flex items-start space-x-3\"\n          style={{ \n            backgroundColor: '#EBF8FF',\n            border: `1px solid #BEE3F8`\n          }}\n        >\n          <div \n            className=\"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center mt-0.5\"\n            style={{ backgroundColor: '#3182CE' }}\n          >\n            <span className=\"text-white text-sm\">🔒</span>\n          </div>\n          <p \n            className=\"text-left\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '400',\n              fontSize: '14px',\n              lineHeight: '20px',\n              color: '#2B6CB0'\n            }}\n          >\n            Your selected data will be securely processed and used only for the intended purpose.\n          </p>\n        </div>\n\n        {/* Heading */}\n        <div className=\"mb-6\">\n          <h1 \n            className=\"font-bold text-left mb-2\"\n            style={{ \n              fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n              fontWeight: '700',\n              fontSize: '24px',\n              lineHeight: '32px',\n              color: COLORS.grey800\n            }}\n          >\n            Data Types\n          </h1>\n        </div>\n      </div>\n\n      {/* Scrollable Data Types Section */}\n      <div className=\"flex-1 px-6 overflow-y-auto\">\n        <div className=\"pb-32\">\n          {dataTypes.map((dataType, index) => (\n            <DataTypeToggle\n              key={dataType.id}\n              dataType={dataType}\n              isEnabled={selectedData[dataType.id]}\n              onToggle={handleDataToggle}\n              isLast={index === dataTypes.length - 1}\n            />\n          ))}\n\n          {/* Selection Summary */}\n          <div \n            className=\"mt-6 p-4 rounded-xl flex items-center space-x-2\"\n            style={{ backgroundColor: COLORS.grey50 }}\n          >\n            <span \n              className=\"text-sm\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                fontWeight: '500',\n                color: COLORS.grey600\n              }}\n            >\n              ✅ {selectedCount} data type{selectedCount !== 1 ? 's' : ''} selected\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Fixed Bottom Buttons */}\n      <div \n        className=\"flex-shrink-0 px-6 pb-6\"\n        style={{ \n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          backgroundColor: COLORS.surface,\n          paddingTop: '24px'\n        }}\n      >\n        <div className=\"mb-4 flex justify-center\">\n          <PrimaryButton\n            label={isLoadingApi ? \"Processing...\" : \"Share Selected Data\"}\n            onClick={fetchUserData}\n            disabled={isLoadingApi || selectedCount === 0}\n            loading={isLoadingApi}\n            centered={true}\n          />\n        </div>\n        \n        <div className=\"text-center\">\n          <button \n            className=\"text-center\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              fontWeight: '500',\n              fontSize: '16px',\n              color: COLORS.grey600,\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer'\n            }}\n            onClick={() => onComplete({ cancelled: true })}\n          >\n            Cancel\n          </button>\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div \n            className=\"mt-4 p-3 rounded-lg text-center\"\n            style={{ \n              backgroundColor: '#FEF2F2',\n              borderColor: '#FECACA',\n              color: '#DC2626'\n            }}\n          >\n            <p className=\"text-sm\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: '12px 24px 8px',\n    borderBottom: `1px solid ${COLORS.borderLight}`\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '24px',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 8px 0',\n    textAlign: centerContent ? 'center' : 'left'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '16px',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 32px 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: '48px',\n    height: '48px',\n    margin: '0 auto 24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '24px'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n            {/* Handle bar for mobile-like experience */}\n            <div \n              className=\"w-12 h-1.5 rounded-full mx-auto\"\n              style={{ backgroundColor: COLORS.border }}\n            />\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    maxHeight: 'calc(100vh - 40px)',\n    minHeight: '60vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = true, // Auto-enabled for design testing - set to false for production\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true }\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('email'); // 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('email');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request flow within the same overlay\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'email':\n        return (\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <ModalPageLayout\n          visible={showOverlay}\n          onClose={handleCloseOverlay}\n          showBackButton={currentFlow !== 'email' && currentFlow !== 'dataRequest'}\n          onBack={() => {\n            if (currentFlow === 'onboarding') setCurrentFlow('email');\n            if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n            if (currentFlow === 'training') setCurrentFlow('pin');\n          }}\n          title={getFlowTitle()}\n          subtitle={getFlowSubtitle()}\n          icon={getFlowIcon()}\n          centerContent={true}\n        >\n          {renderCurrentFlow()}\n        </ModalPageLayout>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","/**\n * Standalone Onairos Overlay Handler\n * Allows developers to trigger the Onairos flow programmatically without the button component\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { OnairosButton } from '../onairosButton.jsx';\nimport { formatOnairosResponse } from './responseFormatter.js';\n\n/**\n * Opens the Onairos overlay flow programmatically\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request ['basic', 'personality', 'preferences']\n * @param {string} config.webpageName - Name of your application\n * @param {Function} config.onComplete - Callback function when flow completes\n * @param {boolean} config.autoFetch - Whether to auto-fetch data (default: false)\n * @param {boolean} config.testMode - Whether to use test mode (default: false)\n * @param {string} config.appIcon - URL to your app icon (optional)\n * @param {boolean} config.formatResponse - Whether to format response with dictionary (default: true)\n * @param {Object} config.responseFormat - Response formatting options\n * @returns {Promise<Function>} Promise that resolves to a cleanup function\n */\nexport async function openOnairosOverlay(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    webpageName = 'My App',\n    onComplete = null,\n    autoFetch = false,\n    testMode = false,\n    appIcon = null,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true },\n    ...otherProps\n  } = config;\n\n  return new Promise((resolve, reject) => {\n    try {\n      // Create a container for the overlay\n      const containerId = `onairos-overlay-${Math.random().toString(36).substr(2, 9)}`;\n      const container = document.createElement('div');\n      container.id = containerId;\n      container.style.position = 'fixed';\n      container.style.top = '0';\n      container.style.left = '0';\n      container.style.width = '100%';\n      container.style.height = '100%';\n      container.style.zIndex = '9999';\n      container.style.pointerEvents = 'none'; // Allow clicks to pass through to the button\n      \n      document.body.appendChild(container);\n\n      // Cleanup function\n      const cleanup = () => {\n        if (container && container.parentNode) {\n          try {\n            ReactDOM.unmountComponentAtNode(container);\n          } catch (error) {\n            console.warn('Error unmounting React component:', error);\n          }\n          container.parentNode.removeChild(container);\n        }\n      };\n\n      // Enhanced onComplete handler\n      const handleComplete = (result) => {\n        let formattedResult = result;\n        \n        // Format response if requested\n        if (formatResponse && result?.apiResponse) {\n          try {\n            formattedResult = {\n              ...result,\n              apiResponse: formatOnairosResponse(result.apiResponse, responseFormat)\n            };\n          } catch (error) {\n            console.warn('Error formatting response:', error);\n            // Continue with original result if formatting fails\n          }\n        }\n\n        // Call the original onComplete callback\n        if (onComplete && typeof onComplete === 'function') {\n          try {\n            onComplete(formattedResult);\n          } catch (error) {\n            console.error('Error in onComplete callback:', error);\n          }\n        }\n\n        // Cleanup after a short delay to allow animations\n        setTimeout(cleanup, 100);\n      };\n\n      // Create the Onairos button component with auto-open\n      const OnairosElement = React.createElement(OnairosButton, {\n        requestData,\n        webpageName,\n        onComplete: handleComplete,\n        autoFetch,\n        testMode,\n        appIcon,\n        visualType: 'icon', // Use icon-only to minimize visual footprint\n        buttonType: 'pill',\n        textColor: 'white',\n        style: { opacity: 0, position: 'absolute', top: '-9999px' }, // Hide the button\n        ...otherProps\n      });\n\n      // Render the component\n      ReactDOM.render(OnairosElement, container);\n\n      // Auto-click the button to open overlay after render\n      setTimeout(() => {\n        const button = container.querySelector('button');\n        if (button) {\n          button.click();\n          resolve(cleanup); // Resolve with cleanup function\n        } else {\n          cleanup();\n          reject(new Error('Failed to render Onairos button'));\n        }\n      }, 100);\n\n    } catch (error) {\n      console.error('Error opening Onairos overlay:', error);\n      reject(error);\n    }\n  });\n}\n\n/**\n * Alternative method using React hooks for React applications\n * @param {Object} config - Same configuration as openOnairosOverlay\n * @returns {Object} Hook object with open function and state\n */\nexport function useOnairosOverlay(config = {}) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const cleanupRef = React.useRef(null);\n\n  const open = React.useCallback(async (overrideConfig = {}) => {\n    if (isOpen || isLoading) return;\n    \n    setIsLoading(true);\n    \n    try {\n      const finalConfig = {\n        ...config,\n        ...overrideConfig,\n        onComplete: (result) => {\n          setIsOpen(false);\n          setIsLoading(false);\n          \n          // Call original onComplete if provided\n          if (config.onComplete) {\n            config.onComplete(result);\n          }\n          if (overrideConfig.onComplete) {\n            overrideConfig.onComplete(result);\n          }\n        }\n      };\n\n      const cleanup = await openOnairosOverlay(finalConfig);\n      cleanupRef.current = cleanup;\n      setIsOpen(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error('Error opening overlay:', error);\n    }\n  }, [config, isOpen, isLoading]);\n\n  const close = React.useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n      cleanupRef.current = null;\n    }\n    setIsOpen(false);\n    setIsLoading(false);\n  }, []);\n\n  // Cleanup on unmount\n  React.useEffect(() => {\n    return () => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n      }\n    };\n  }, []);\n\n  return {\n    open,\n    close,\n    isOpen,\n    isLoading\n  };\n}\n\n/**\n * Simple function to get user data without UI (for existing authenticated users)\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request\n * @param {string} config.userEmail - User email (if known)\n * @param {string} config.appName - App name\n * @param {boolean} config.testMode - Whether to use test mode\n * @param {boolean} config.formatResponse - Whether to format response\n * @returns {Promise<Object>} Promise that resolves to user data\n */\nexport async function getOnairosData(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    userEmail = '',\n    appName = 'My App',\n    testMode = false,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true }\n  } = config;\n\n  // This would need to be implemented based on your existing API logic\n  // For now, it's a placeholder that developers can use as a reference\n  throw new Error('getOnairosData requires authenticated user session. Use openOnairosOverlay for the full authentication flow.');\n} ","import React from 'react';\nimport OnairosButton from './onairosButton.jsx';\n\n// Main Onairos component\nexport function Onairos(props) {\n  return (\n    <>\n      <OnairosButton {...props} />\n    </>\n  );\n}\n\n// Export both the main component and individual components\nexport { OnairosButton };\nexport default Onairos;\n\n// Export overlay handler functions for programmatic access\nexport { \n  openOnairosOverlay, \n  useOnairosOverlay, \n  getOnairosData \n} from './utils/overlayHandler.js';\n\n// Export response formatting utilities\nexport { \n  formatOnairosResponse, \n  formatPersonalityScores,\n  getPersonalityTypes,\n  getTraitCategories,\n  PERSONALITY_TYPES,\n  TRAIT_CATEGORIES\n} from './utils/responseFormatter.js';\n\n// Initialize SDK functionality (if needed)\nexport const initializeApiKey = async (config) => {\n  // SDK initialization logic would go here\n  console.log('🔧 SDK initialized with config:', config);\n  return Promise.resolve();\n};\n"],"names":["toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","prop","startsWith","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","Check","iconName","Component","displayName","createLucideIcon","d","key","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","_ref","React","concat","style","borderRadius","fontSize","backgroundColor","_ref2","label","onClick","iconRight","loading","disabled","testId","textStyle","centered","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","handleEmailSubmit","async","e","preventDefault","test","validateEmail","console","log","setTimeout","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","lineHeight","borderColor","type","value","onChange","target","placeholder","required","flex","minHeight","PrimaryButton","from","_","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","platforms","name","icon","connector","sdkConfig","process","env","REACT_APP_ONAIROS_API_KEY","baseUrl","REACT_APP_ONAIROS_BASE_URL","sdkType","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","UniversalOnboarding","onComplete","appIcon","appName","connectedAccounts","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","connectionErrors","setConnectionErrors","connectionHealth","setConnectionHealth","healthScore","setHealthScore","useEffect","handleOAuthReturn","platform","localStorage","getItem","removeItem","prev","connectToPlatform","platformName","find","p","_localStorage$getItem","username","authorizeUrl","session","status","statusText","responseData","possibleKeys","oauthUrl","usedKey","Object","keys","navigator","userAgent","innerWidth","setItem","location","href","popup","open","hasNavigatedToOnairos","checkInterval","setInterval","hostname","close","closed","clearInterval","successFlag","errorFlag","timestamp","isRecentSignal","parseInt","handleToggle","connectedCount","values","src","alt","isConnected","isCurrentlyConnecting","hasError","isDisabled","fillRule","clipRule","stopPropagation","handleContinue","connected","entries","_ref3","totalConnections","sdkVersion","enhancedFeatures","healthMonitoring","autoRefresh","connectionValidation","PinSetup","userEmail","pin","setPin","requirements","setRequirements","number","special","canSubmit","every","req","handleSubmit","pinCreated","onSubmit","htmlFor","id","dataTypes","description","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","isPressed","setIsPressed","grey50","surface","primary","grey200","borderWidth","transform","handlePress","grey100","grey800","grey600","grey300","autoFetch","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","selectedCount","paddingTop","userHash","hash","str","toString","i","charCodeAt","Math","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","progress","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","min","completionDelay","trainingComplete","simulatedTraining","clearTimeout","round","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","undefined","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","warn","getPersonalityTypes","getTraitCategories","PageLayout","subtitle","showHeader","showCloseButton","onClose","onBack","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","zIndex","padding","borderBottom","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","enableTraining","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","handleCloseOverlay","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","buttonClass","logoStyle","marginRight","getText","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","DataRequest","openOnairosOverlay","config","otherProps","Promise","resolve","reject","containerId","random","substr","container","document","pointerEvents","appendChild","cleanup","parentNode","ReactDOM","removeChild","handleComplete","OnairosElement","button","querySelector","click","useOnairosOverlay","isOpen","setIsOpen","cleanupRef","overrideConfig","finalConfig","current","getOnairosData","Onairos","initializeApiKey"],"sourceRoot":""}