{"version":3,"file":"onairos.esm.js","mappings":"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","sources":["webpack://onairos/webpack/bootstrap","webpack://onairos/webpack/runtime/define property getters","webpack://onairos/webpack/runtime/hasOwnProperty shorthand","webpack://onairos/external module \"react\"","webpack://onairos/./src/components/WelcomeScreen.jsx","webpack://onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://onairos/./src/theme/colors.js","webpack://onairos/./src/components/ui/PrimaryButton.jsx","webpack://onairos/./src/components/EmailAuth.js","webpack://onairos/./src/components/UniversalOnboarding.jsx","webpack://onairos/./src/components/PinSetup.js","webpack://onairos/./src/components/DataRequest.js","webpack://onairos/./src/components/TrainingComponent.jsx","webpack://onairos/./src/components/LoadingScreen.jsx","webpack://onairos/./src/utils/responseFormatter.js","webpack://onairos/./src/components/ui/PageLayout.jsx","webpack://onairos/./src/onairosButton.jsx","webpack://onairos/external module \"react-dom\"","webpack://onairos/./src/utils/overlayHandler.js","webpack://onairos/./src/onairos.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createElement\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.createElement, [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_react__[\"default\"], [\"forwardRef\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.forwardRef, [\"useEffect\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useEffect, [\"useState\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useState });","import React from 'react';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function WelcomeScreen({ onContinue, onClose, webpageName, appIcon, testMode }) {\r\n  // Get app name from webpageName prop, fallback to generic text\r\n  const appName = webpageName || 'every app';\r\n  \r\n  // Test mode fallback icon\r\n  const getAppIcon = () => {\r\n    if (appIcon) {\r\n      return (\r\n        <img \r\n          src={appIcon} \r\n          alt={`${appName} logo`}\r\n          className=\"w-12 h-12 rounded-xl object-cover\"\r\n        />\r\n      );\r\n    }\r\n    \r\n    if (testMode) {\r\n      // Test mode placeholder - colorful gradient placeholder\r\n      return (\r\n        <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center\">\r\n          <span className=\"text-white font-bold text-xl\">\r\n            {appName.charAt(0).toUpperCase()}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Fallback generic app icon\r\n    return (\r\n      <div className=\"w-12 h-12 bg-gray-200 rounded-xl flex items-center justify-center\">\r\n        <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Welcome Text - Always at top when app provided */}\r\n      {(appIcon || webpageName) && (\r\n        <div className=\"px-6 text-center pt-6 pb-2 flex-shrink-0\">\r\n          <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\r\n          <h1 className=\"text-4xl font-bold text-gray-900 text-balance\">Onairos</h1>\r\n        </div>\r\n      )}\r\n\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\r\n        {/* Visual Flow: Onairos → Arrow → App (when app info provided) */}\r\n        {(appIcon || webpageName) ? (\r\n          <div className=\"flex flex-col items-center\">\r\n            {/* App Logos with Data Flow - Centered and Symmetrical */}\r\n            <div className=\"flex items-start justify-center gap-6 mb-8\">\r\n              {/* Onairos Logo - Fixed width for symmetry */}\r\n              <div className=\"flex flex-col items-center w-20\">\r\n                <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mb-2\">\r\n                  <div className=\"w-6 h-6 relative\">\r\n                    {/* VR Headset Icon - Smaller */}\r\n                    <svg viewBox=\"0 0 32 32\" className=\"w-full h-full\">\r\n                      <path\r\n                        d=\"M4 12c0-2.2 1.8-4 4-4h16c2.2 0 4 1.8 4 4v8c0 2.2-1.8 4-4 4h-4l-2-3h-4l-2 3H8c-2.2 0-4-1.8-4-4v-8z\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                      />\r\n                      <circle cx=\"10\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\r\n                      <circle cx=\"22\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\r\n                      <path d=\"M12 24c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                <span className=\"text-xs font-medium text-gray-600 text-center leading-tight\">Onairos</span>\r\n              </div>\r\n\r\n              {/* Data Flow Arrow - Aligned to logos */}\r\n              <div className=\"flex flex-col items-center mt-3\">\r\n                <svg className=\"w-8 h-6 text-gray-400 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\r\n                </svg>\r\n                <span className=\"text-xs text-gray-400\">data</span>\r\n              </div>\r\n\r\n              {/* App Logo - Fixed width for symmetry with text wrapping */}\r\n              <div className=\"flex flex-col items-center w-20\">\r\n                {getAppIcon()}\r\n                <span className=\"text-xs font-medium text-gray-600 mt-2 text-center leading-tight break-words hyphens-auto\">\r\n                  {appName}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Description - Updated with bold/underlined app name */}\r\n            <p className=\"text-gray-600 text-base leading-relaxed text-pretty px-2\">\r\n              Onairos makes your experience on <span className=\"font-bold underline\">{appName}</span> and everywhere else 1000x better\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          /* Original layout when no app info */\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"mb-8 flex justify-center\">\r\n              <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center\">\r\n                <div className=\"w-8 h-8 relative\">\r\n                  {/* VR Headset Icon */}\r\n                  <svg viewBox=\"0 0 32 32\" className=\"w-full h-full\">\r\n                    <path\r\n                      d=\"M4 12c0-2.2 1.8-4 4-4h16c2.2 0 4 1.8 4 4v8c0 2.2-1.8 4-4 4h-4l-2-3h-4l-2 3H8c-2.2 0-4-1.8-4-4v-8z\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                    />\r\n                    <circle cx=\"10\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\r\n                    <circle cx=\"22\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\r\n                    <path d=\"M12 24c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\r\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\r\n            \r\n            <p className=\"text-gray-600 text-base leading-relaxed text-pretty px-2\">\r\n              Onairos makes your experience on {appName} and everywhere else 1000x better\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Get Started Button - Fixed at bottom */}\r\n      <div className=\"px-6 pb-8 flex-shrink-0\">\r\n        <button\r\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\r\n          onClick={onContinue}\r\n        >\r\n          Get Started\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","// Theme colors for Onairos SDK - derived from mobile design\r\nexport const COLORS = {\r\n  // Button gradient colors\r\n  btnGradStart: '#1A1A1A',\r\n  btnGradEnd: '#000000',\r\n  \r\n  // Button text and icon colors\r\n  btnLabel: '#FFFFFF',\r\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\r\n  \r\n  // Icon circle gradient colors\r\n  iconCircleGradientStart: '#333333',\r\n  iconCircleGradientEnd: '#1A1A1A',\r\n  \r\n  // Background colors\r\n  background: '#FFFFFF',\r\n  backgroundSecondary: '#F8F9FA',\r\n  \r\n  // Text colors\r\n  textPrimary: '#1A1A1A',\r\n  textSecondary: '#6B7280',\r\n  textMuted: '#9CA3AF',\r\n  \r\n  // Border colors\r\n  border: '#E5E7EB',\r\n  borderLight: '#F3F4F6',\r\n  \r\n  // Status colors\r\n  success: '#10B981',\r\n  error: '#EF4444',\r\n  warning: '#F59E0B',\r\n  info: '#3B82F6',\r\n  \r\n  // Interactive states\r\n  hover: 'rgba(0, 0, 0, 0.05)',\r\n  pressed: 'rgba(0, 0, 0, 0.1)',\r\n  focus: 'rgba(59, 130, 246, 0.1)',\r\n};\r\n\r\nexport default COLORS; ","import React, { useState } from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Icon Circle component matching the React Native version\r\nconst IconCircle = ({ \r\n  size = 40, \r\n  children,\r\n  className = ''\r\n}) => {\r\n  return (\r\n    <div \r\n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        borderRadius: size / 2,\r\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\r\n      }}\r\n    >\r\n      {children || (\r\n        <span \r\n          className=\"font-semibold opacity-95\"\r\n          style={{\r\n            fontSize: '20px',\r\n            color: COLORS.btnLabel,\r\n            backgroundColor: 'transparent'\r\n          }}\r\n        >\r\n          →\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Primary Button component matching the React Native design\r\nconst PrimaryButton = ({\r\n  label = \"Get Started\",\r\n  onClick,\r\n  iconRight,\r\n  loading = false,\r\n  disabled = false,\r\n  testId,\r\n  className = '',\r\n  style = {},\r\n  textStyle = {},\r\n  centered = false,\r\n  ...props\r\n}) => {\r\n  const [pressed, setPressed] = useState(false);\r\n\r\n  const handleMouseDown = () => setPressed(true);\r\n  const handleMouseUp = () => setPressed(false);\r\n  const handleMouseLeave = () => setPressed(false);\r\n\r\n  const buttonStyle = {\r\n    height: '48px',\r\n    borderRadius: '100px',\r\n    border: `1px solid ${COLORS.btnBorder}`,\r\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    width: centered ? 'auto' : '100%',\r\n    minWidth: centered ? '250px' : 'auto',\r\n    maxWidth: centered ? '350px' : 'none',\r\n    margin: centered ? '0 auto' : '0',\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    opacity: disabled ? 0.65 : 1,\r\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\r\n    transition: 'all 0.2s ease',\r\n    ...style\r\n  };\r\n\r\n  const pressedOverlayStyle = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.1)',\r\n    borderRadius: '100px',\r\n    opacity: pressed ? 1 : 0,\r\n    transition: 'opacity 0.1s ease'\r\n  };\r\n\r\n  const textContainerStyle = {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const iconPositionStyle = {\r\n    position: 'absolute',\r\n    right: '4px',\r\n    top: '4px',\r\n    bottom: '4px',\r\n    width: '40px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  const labelStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontWeight: '600',\r\n    fontSize: '16px',\r\n    color: COLORS.btnLabel,\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    ...textStyle\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`relative ${className}`}\r\n      style={buttonStyle}\r\n      onClick={onClick}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseLeave}\r\n      disabled={disabled || loading}\r\n      data-testid={testId}\r\n      aria-label={label}\r\n      {...props}\r\n    >\r\n      {/* Pressed state overlay */}\r\n      <div style={pressedOverlayStyle} />\r\n\r\n      {/* Centered text container */}\r\n      <div style={textContainerStyle}>\r\n        {loading ? (\r\n          <div \r\n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\r\n            style={{ width: '20px', height: '20px' }}\r\n          />\r\n        ) : (\r\n          <span style={labelStyle}>{label}</span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Icon in fixed position on right */}\r\n      <div style={iconPositionStyle}>\r\n        {!loading && (iconRight || <IconCircle />)}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { IconCircle };\r\nexport default PrimaryButton; ","import React, { useState, useEffect } from 'react';\r\nimport { Mail, ArrowRight, Check } from 'lucide-react';\r\nimport PrimaryButton from './ui/PrimaryButton.jsx';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function EmailAuth({ onSuccess, testMode = true }) {\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Auto-focus first PIN input when code step loads\r\n  useEffect(() => {\r\n    if (step === 'code') {\r\n      // Small delay to ensure DOM is ready\r\n      setTimeout(() => {\r\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\r\n        if (firstInput) {\r\n          firstInput.focus();\r\n        }\r\n      }, 100);\r\n    }\r\n  }, [step]);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!validateEmail(email)) {\r\n      setError('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (testMode) {\r\n        // Test mode: Skip API call completely, simulate instant success\r\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\r\n        setTimeout(() => {\r\n          setStep('code');\r\n          setIsLoading(false);\r\n          console.log('🧪 Test mode: Email verification simulated successfully');\r\n        }, 800); // Shorter delay for faster testing\r\n      } else {\r\n        // Production mode: Use proper email verification API from schema\r\n        const apiKey = window.onairosApiKey || 'test-key';\r\n        \r\n        const response = await fetch('https://api2.onairos.uk/email/verification', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n          },\r\n          body: JSON.stringify({ \r\n            email, \r\n            action: 'request' \r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to send verification code');\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (!data.success) {\r\n          throw new Error(data.error || 'Failed to send verification code');\r\n        }\r\n\r\n        console.log('📧 Email request response:', data);\r\n\r\n        setStep('code');\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Email request error:', error);\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleAuth = async () => {\r\n    try {\r\n      // Use the same Google OAuth logic as UniversalOnboarding\r\n      const sdkConfig = {\r\n        baseUrl: 'https://api2.onairos.uk',\r\n        apiKey: window.onairosApiKey || 'test-key',\r\n        enableHealthMonitoring: true,\r\n        enableAutoRefresh: true,\r\n        enableConnectionValidation: true\r\n      };\r\n\r\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\r\n      \r\n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\r\n      const params = new URLSearchParams({\r\n        username: username,\r\n        sdk_type: 'web',\r\n        return_url: window.location.origin + '/oauth-callback.html'\r\n      });\r\n\r\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\r\n      console.log('🔗 Starting Google OAuth from email flow...');\r\n      console.log('📋 Google OAuth URL:', fullUrl);\r\n\r\n      // Open popup for OAuth\r\n      const popup = window.open(\r\n        fullUrl,\r\n        'google_oauth',\r\n        'width=500,height=600,scrollbars=yes,resizable=yes'\r\n      );\r\n\r\n      if (!popup) {\r\n        throw new Error('Popup blocked. Please allow popups for this site.');\r\n      }\r\n\r\n      // Monitor popup for completion\r\n      const checkInterval = setInterval(() => {\r\n        if (popup.closed) {\r\n          clearInterval(checkInterval);\r\n          console.log('✅ Google OAuth popup closed');\r\n          // Simulate successful OAuth for now\r\n          onSuccess({ \r\n            email: 'user@gmail.com', \r\n            method: 'google',\r\n            connectedAccounts: { Google: true }\r\n          });\r\n        }\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error('❌ Google OAuth failed:', error);\r\n      setError('Google authentication failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCodeSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (testMode) {\r\n        // Test mode: Skip API call completely, simulate verification\r\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\r\n        \r\n        if (code === '123456' || code.length === 6) {\r\n          setStep('success');\r\n          setTimeout(() => {\r\n            // Simulate new user for design testing\r\n            const simulatedResponse = { \r\n              email, \r\n              verified: true, \r\n              token: 'test-token-' + Date.now(),\r\n              userName: email.split('@')[0],\r\n              existingUser: false, // Always simulate new user for full flow testing\r\n              accountInfo: null,\r\n              isNewUser: true,\r\n              flowType: 'onboarding',\r\n              adminMode: false,\r\n              userCreated: true,\r\n              accountDetails: {\r\n                email: email,\r\n                createdAt: new Date().toISOString(),\r\n                testAccount: true\r\n              }\r\n            };\r\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\r\n            onSuccess(simulatedResponse);\r\n          }, 600); // Faster for design testing\r\n        } else {\r\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\r\n          setIsLoading(false);\r\n        }\r\n      } else {\r\n        // Production mode: Use real email verification API from schema\r\n        const apiKey = window.onairosApiKey || 'test-key';\r\n        \r\n        const response = await fetch('https://api2.onairos.uk/email/verification', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n          },\r\n          body: JSON.stringify({ \r\n            email, \r\n            action: 'verify',\r\n            code \r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Invalid verification code');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (!data.success) {\r\n          throw new Error(data.error || 'Verification failed');\r\n        }\r\n\r\n        console.log('📧 Email verification response:', data);\r\n\r\n        setStep('success');\r\n        setTimeout(() => {\r\n          // Pass complete API response for flow determination\r\n          onSuccess({ \r\n            email, \r\n            verified: true, \r\n            token: data.token || data.jwtToken,\r\n            userName: data.userName,\r\n            existingUser: data.existingUser,\r\n            accountInfo: data.accountInfo,\r\n            isNewUser: !data.existingUser, // Set based on API response\r\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\r\n            adminMode: data.adminMode,\r\n            userCreated: data.userCreated,\r\n            accountDetails: data.accountDetails\r\n          });\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Email verification error:', error);\r\n      setError(error.message || 'Invalid code. Please try again.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderEmailStep = () => (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\r\n            Use pre-existing Persona or create a new one in seconds\r\n          </h1>\r\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\r\n            style={{ \r\n              fontFamily: 'Inter, system-ui, sans-serif'\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-6 text-center\">\r\n          <span className=\"text-gray-500 text-sm\">Or</span>\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\r\n            style={{ \r\n              fontFamily: 'Inter, system-ui, sans-serif'\r\n            }}\r\n            onClick={handleGoogleAuth}\r\n          >\r\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"#4285F4\"\r\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\r\n              />\r\n              <path\r\n                fill=\"#34A853\"\r\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\r\n              />\r\n              <path\r\n                fill=\"#FBBC05\"\r\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\r\n              />\r\n              <path\r\n                fill=\"#EA4335\"\r\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\r\n              />\r\n            </svg>\r\n            Continue with Google\r\n          </button>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6\">\r\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Continue Button - Fixed at bottom */}\r\n      <div className=\"px-12 pb-8 flex-shrink-0\">\r\n        <button\r\n          className=\"w-full max-w-sm mx-auto bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\r\n          onClick={handleEmailSubmit}\r\n          disabled={isLoading || !email.trim()}\r\n          style={{ \r\n            fontFamily: 'Inter, system-ui, sans-serif'\r\n          }}\r\n        >\r\n          {isLoading ? 'Loading...' : 'Continue'}\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCodeStep = () => (\r\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\r\n      {/* Heading - matching VerificationStep.tsx */}\r\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\r\n        <h1 \r\n          className=\"font-bold mb-2\"\r\n          style={{ \r\n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\r\n            fontWeight: '700',\r\n            fontSize: '24px',\r\n            lineHeight: '32px',\r\n            color: COLORS.textPrimary\r\n          }}\r\n        >\r\n          Enter verification code\r\n        </h1>\r\n        <p \r\n          className=\"mb-2\"\r\n          style={{ \r\n            fontFamily: 'Inter, system-ui, sans-serif',\r\n            fontWeight: '400',\r\n            fontSize: '16px',\r\n            lineHeight: '24px',\r\n            color: COLORS.textSecondary\r\n          }}\r\n        >\r\n          We've sent a 6-digit code to {email}\r\n        </p>\r\n      </div>\r\n\r\n\r\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\r\n      <div className=\"px-12 mb-6\">\r\n        <div className=\"flex justify-center space-x-3\">\r\n          {Array.from({ length: 6 }, (_, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              value={code[index] || ''}\r\n              onChange={(e) => {\r\n                const newCode = code.split('');\r\n                newCode[index] = e.target.value;\r\n                setCode(newCode.join(''));\r\n                \r\n                // Auto-focus next input\r\n                if (e.target.value && index < 5) {\r\n                  const nextInput = e.target.parentElement?.children[index + 1];\r\n                  if (nextInput) nextInput.focus();\r\n                }\r\n              }}\r\n              onKeyDown={(e) => {\r\n                // Handle backspace to focus previous input\r\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\r\n                  const prevInput = e.target.parentElement?.children[index - 1];\r\n                  if (prevInput) prevInput.focus();\r\n                }\r\n              }}\r\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\r\n              style={{ \r\n                borderColor: COLORS.border,\r\n                backgroundColor: COLORS.background,\r\n                fontFamily: 'Inter, system-ui, sans-serif'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"px-12 mb-6\">\r\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Continue Button - positioned right below code inputs */}\r\n      <div className=\"px-12 mb-6\">\r\n        <div className=\"max-w-sm mx-auto\">\r\n          <PrimaryButton\r\n            label=\"Continue\"\r\n            onClick={handleCodeSubmit}\r\n            loading={isLoading}\r\n            disabled={isLoading || code.length !== 6}\r\n            testId=\"verify-code-button\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Spacer */}\r\n      <div style={{ flex: 1, minHeight: '20px' }} />\r\n\r\n      {/* Back to email option */}\r\n      <div className=\"px-12 w-full\">\r\n        <div className=\"max-w-sm mx-auto\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setStep('email')}\r\n            className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\r\n            style={{ color: COLORS.textSecondary }}\r\n          >\r\n            Use a different email\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderSuccessStep = () => (\r\n    <div className=\"w-full flex flex-col items-center space-y-6 pt-16 px-12\">\r\n      <div \r\n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\r\n        style={{ backgroundColor: '#D1FAE5' }}\r\n      >\r\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\r\n      </div>\r\n      \r\n      <div className=\"text-center space-y-2\">\r\n        <h2 \r\n          className=\"text-xl font-semibold\"\r\n          style={{ color: COLORS.textPrimary }}\r\n        >\r\n          Email verified!\r\n        </h2>\r\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\r\n      </div>\r\n\r\n      <div className=\"w-8 h-8\">\r\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {step === 'email' && renderEmailStep()}\r\n      {step === 'code' && renderCodeStep()}\r\n      {step === 'success' && renderSuccessStep()}\r\n    </div>\r\n  );\r\n} \r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// Default persona images - using public folder paths for consumer compatibility\r\nconst defaultPersonaImages = {\r\n  1: 'https://anushkasirv.sirv.com/persona1.png',\r\n  2: 'https://anushkasirv.sirv.com/persona2.png', \r\n  3: 'https://anushkasirv.sirv.com/persona3.png',\r\n  4: 'https://anushkasirv.sirv.com/persona4.png',\r\n  5: 'https://anushkasirv.sirv.com/persona5.png',\r\n};\r\n\r\nconst platforms = [\r\n  { \r\n    name: 'Google', \r\n    icon: (\r\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n        <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\r\n        <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\r\n        <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\r\n        <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\r\n      </svg>\r\n    ), \r\n    color: 'bg-white', \r\n    connector: 'gmail',\r\n    description: \"We use your search, YouTube, and location signals to better understand your interests and routines.\"\r\n  },\r\n  { \r\n    name: 'Reddit', \r\n    icon: (\r\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#FF4500\">\r\n        <path d=\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\" />\r\n      </svg>\r\n    ), \r\n    color: 'bg-white', \r\n    connector: 'reddit',\r\n    description: \"We use your search history to better understand your interests and routines.\"\r\n  },\r\n  { \r\n    name: 'Instagram', \r\n    icon: (\r\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n        <defs>\r\n          <radialGradient id=\"instagram-gradient\" cx=\"0.5\" cy=\"1\" r=\"1\">\r\n            <stop offset=\"0%\" stopColor=\"#FD5949\" />\r\n            <stop offset=\"50%\" stopColor=\"#D6249F\" />\r\n            <stop offset=\"100%\" stopColor=\"#285AEB\" />\r\n          </radialGradient>\r\n        </defs>\r\n        <path fill=\"url(#instagram-gradient)\" d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.073-1.689-.073-4.849 0-3.204.013-3.583.072-4.948.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\r\n      </svg>\r\n    ), \r\n    color: 'bg-white', \r\n    connector: 'instagram',\r\n    description: \"We use your search history to better understand your interests and routines.\"\r\n  },\r\n  { \r\n    name: 'LinkedIn', \r\n    icon: (\r\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#0077B5\">\r\n        <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\r\n      </svg>\r\n    ), \r\n    color: 'bg-white', \r\n    connector: 'linkedin',\r\n    description: \"We use your search history to better understand your interests and routines.\"\r\n  }\r\n];\r\n\r\n// Enhanced SDK configuration\r\nconst sdkConfig = {\r\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\r\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\r\n  sdkType: 'web', // web, mobile, desktop\r\n  enableHealthMonitoring: true,\r\n  enableAutoRefresh: true,\r\n  enableConnectionValidation: true\r\n};\r\n\r\n/**\r\n * UniversalOnboarding Component - Compact & Enhanced\r\n * Displays a streamlined onboarding screen for data connections\r\n */\r\nexport default function UniversalOnboarding({ onComplete, onBack, appIcon, appName = 'App', personaImages: personaImagesProp }) {\r\n  // Use provided persona images or fallback to defaults\r\n  const personaImages = personaImagesProp ?? defaultPersonaImages;\r\n  \r\n  const [connectedAccounts, setConnectedAccounts] = useState({});\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\r\n  const [connectionErrors, setConnectionErrors] = useState({});\r\n  const [connectionHealth, setConnectionHealth] = useState({});\r\n  const [healthScore, setHealthScore] = useState(0);\r\n\r\n  // Mobile device detection\r\n  const isMobileDevice = () => {\r\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n           (window.innerWidth <= 768);\r\n  };\r\n\r\n  // Handle mobile OAuth return\r\n  useEffect(() => {\r\n    const handleOAuthReturn = () => {\r\n      const platform = localStorage.getItem('onairos_oauth_platform');\r\n      if (platform) {\r\n        console.log(`📱 OAuth return detected for: ${platform}`);\r\n        \r\n        // Clear OAuth state\r\n        localStorage.removeItem('onairos_oauth_platform');\r\n        localStorage.removeItem('onairos_oauth_return');\r\n        \r\n        // Mark as connected\r\n        setConnectedAccounts(prev => ({\r\n          ...prev,\r\n          [platform]: true\r\n        }));\r\n        \r\n        // Clear any errors\r\n        setConnectionErrors(prev => ({\r\n          ...prev,\r\n          [platform]: null\r\n        }));\r\n        \r\n        console.log(`✅ ${platform} marked as connected from OAuth return`);\r\n      }\r\n    };\r\n\r\n    handleOAuthReturn();\r\n  }, []);\r\n\r\n  const connectToPlatform = async (platformName) => {\r\n    console.log(`🚀 connectToPlatform called for: ${platformName}`);\r\n    \r\n    const platform = platforms.find(p => p.name === platformName);\r\n    if (!platform?.connector) {\r\n      console.error(`❌ No connector found for platform: ${platformName}`);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsConnecting(true);\r\n      setConnectingPlatform(platformName);\r\n      \r\n      // Clear any previous errors\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: null\r\n      }));\r\n      \r\n      console.log(`🔗 Starting OAuth connection for ${platformName}...`);\r\n      \r\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\r\n      \r\n      // Enhanced authorize endpoint with SDK type\r\n      const authorizeUrl = `${sdkConfig.baseUrl}/${platform.connector}/authorize`;\r\n      \r\n      const response = await fetch(authorizeUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'x-api-key': sdkConfig.apiKey,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          session: {\r\n            username: username\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n             const responseData = await response.json();\r\n       console.log(`📋 ${platformName} OAuth response:`, responseData);\r\n       \r\n       // Check for platform-specific URL keys with multiple fallbacks\r\n       const platformUrlKeys = {\r\n         'youtube': ['youtubeURL', 'youtubeUrl', 'youtube_url'],\r\n         'linkedin': ['linkedinURL', 'linkedinUrl', 'linkedin_url'], \r\n         'reddit': ['redditURL', 'redditUrl', 'reddit_url'],\r\n         'pinterest': ['pinterestURL', 'pinterestUrl', 'pinterest_url'],\r\n         'instagram': ['instagramURL', 'instagramUrl', 'instagram_url'],\r\n         'github': ['githubURL', 'githubUrl', 'github_url'],\r\n         'facebook': ['facebookURL', 'facebookUrl', 'facebook_url'],\r\n         'gmail': ['gmailURL', 'gmailUrl', 'gmail_url']\r\n       };\r\n       \r\n       const possibleKeys = platformUrlKeys[platform.connector] || [\r\n         `${platform.connector}URL`,\r\n         `${platform.connector}Url`, \r\n         `${platform.connector}_url`,\r\n         'platformURL',\r\n         'authUrl', \r\n         'url'\r\n       ];\r\n       \r\n       let oauthUrl = null;\r\n       let usedKey = null;\r\n       \r\n       // Try each possible key\r\n       for (const key of possibleKeys) {\r\n         if (responseData[key]) {\r\n           oauthUrl = responseData[key];\r\n           usedKey = key;\r\n           break;\r\n         }\r\n       }\r\n       \r\n       if (!oauthUrl) {\r\n         console.error(`❌ No OAuth URL found for ${platformName}:`);\r\n         console.error(`Expected one of:`, possibleKeys);\r\n         console.error(`Response keys:`, Object.keys(responseData));\r\n         console.error(`Full response:`, responseData);\r\n         throw new Error(`No OAuth URL found. Backend should return one of: ${possibleKeys.join(', ')}`);\r\n       }\r\n       \r\n       console.log(`✅ Found OAuth URL for ${platformName} using key: ${usedKey}`);\r\n        \r\n      if (isMobileDevice()) {\r\n        // Mobile: Use redirect flow\r\n        localStorage.setItem('onairos_oauth_platform', platformName);\r\n        localStorage.setItem('onairos_oauth_return', window.location.href);\r\n        window.location.href = oauthUrl;\r\n        return true;\r\n      } else {\r\n        // Desktop: Use popup flow with enhanced monitoring\r\n        const popup = window.open(\r\n          oauthUrl,\r\n          `${platform.connector}_oauth`,\r\n          'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no'\r\n        );\r\n        \r\n        if (!popup) {\r\n          throw new Error('Popup blocked. Please allow popups and try again.');\r\n        }\r\n\r\n                 // Enhanced popup monitoring with onairos.uk detection\r\n         let hasNavigatedToOnairos = false;\r\n         const checkInterval = setInterval(() => {\r\n           try {\r\n             // Try to detect if popup has navigated to onairos.uk (indicates success)\r\n             if (popup.location && popup.location.hostname === 'onairos.uk') {\r\n               hasNavigatedToOnairos = true;\r\n               console.log(`🔄 ${platformName} popup navigated to onairos.uk - treating as success`);\r\n               \r\n               // Close the popup since it shows \"not found\"\r\n               popup.close();\r\n               return; // Let the popup.closed check handle the rest\r\n             }\r\n           } catch (e) {\r\n             // Cross-origin error is expected when popup navigates to onairos.uk\r\n             // This actually indicates the OAuth likely succeeded\r\n             if (!hasNavigatedToOnairos) {\r\n               hasNavigatedToOnairos = true;\r\n               console.log(`🔄 ${platformName} popup navigated (cross-origin) - likely to onairos.uk`);\r\n             }\r\n           }\r\n           \r\n           try {\r\n             // Check if popup is closed\r\n             if (popup.closed) {\r\n               clearInterval(checkInterval);\r\n               \r\n               // Check for success or error signals from callback page\r\n               const successFlag = localStorage.getItem(`onairos_${platformName}_success`);\r\n               const errorFlag = localStorage.getItem(`onairos_${platformName}_error`);\r\n               const timestamp = localStorage.getItem(`onairos_${platformName}_timestamp`);\r\n               \r\n               // Only process recent signals (within 30 seconds)\r\n               const isRecentSignal = timestamp && (Date.now() - parseInt(timestamp) < 30000);\r\n               \r\n               if (successFlag && isRecentSignal) {\r\n                 // Success flow from callback page\r\n                 console.log(`✅ ${platformName} OAuth completed successfully (callback page)`);\r\n                 localStorage.removeItem(`onairos_${platformName}_success`);\r\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\r\n                 \r\n                 setConnectedAccounts(prev => ({\r\n                   ...prev,\r\n                   [platformName]: true\r\n                 }));\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: null\r\n                 }));\r\n                 \r\n               } else if (errorFlag && isRecentSignal) {\r\n                 // Error flow from callback page\r\n                 console.log(`❌ ${platformName} OAuth failed:`, errorFlag);\r\n                 localStorage.removeItem(`onairos_${platformName}_error`);\r\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\r\n                 \r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: errorFlag\r\n                 }));\r\n                 \r\n               } else if (hasNavigatedToOnairos) {\r\n                 // Popup navigated to onairos.uk - assume success\r\n                 console.log(`✅ ${platformName} OAuth likely successful (navigated to onairos.uk)`);\r\n                 setConnectedAccounts(prev => ({\r\n                   ...prev,\r\n                   [platformName]: true\r\n                 }));\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: null\r\n                 }));\r\n                 \r\n               } else {\r\n                 // No signal and no onairos navigation - assume user cancelled\r\n                 console.log(`⚠️ ${platformName} OAuth cancelled or no response`);\r\n                 setConnectionErrors(prev => ({\r\n                   ...prev,\r\n                   [platformName]: 'Connection was cancelled'\r\n                 }));\r\n               }\r\n               \r\n               setIsConnecting(false);\r\n               setConnectingPlatform(null);\r\n             }\r\n           } catch (error) {\r\n             // Cross-origin error when popup navigates away - this is normal\r\n             // console.log(`🔄 Popup navigated away for ${platformName}`);\r\n           }\r\n         }, 1000);\r\n\r\n                 // Auto-close popup if it shows onairos.uk \"not found\" page after 10 seconds\r\n         setTimeout(() => {\r\n           try {\r\n             if (!popup.closed && popup.location && popup.location.hostname === 'onairos.uk') {\r\n               console.log(`🚪 Auto-closing ${platformName} popup showing onairos.uk (not found)`);\r\n               popup.close();\r\n             }\r\n           } catch (e) {\r\n             // Cross-origin error is expected - try to close anyway if it's been 10 seconds\r\n             if (!popup.closed && hasNavigatedToOnairos) {\r\n               console.log(`🚪 Auto-closing ${platformName} popup (cross-origin, likely onairos.uk)`);\r\n               popup.close();\r\n             }\r\n           }\r\n         }, 10000);\r\n\r\n         // Final timeout after 5 minutes\r\n         setTimeout(() => {\r\n           if (!popup.closed) {\r\n             popup.close();\r\n             clearInterval(checkInterval);\r\n             setConnectionErrors(prev => ({\r\n               ...prev,\r\n               [platformName]: 'Connection timeout'\r\n             }));\r\n             setIsConnecting(false);\r\n             setConnectingPlatform(null);\r\n           }\r\n         }, 300000);\r\n\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(`❌ Error connecting to ${platformName}:`, error);\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: error.message\r\n      }));\r\n      setIsConnecting(false);\r\n      setConnectingPlatform(null);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleToggle = async (platformName) => {\r\n    console.log(`🔥 TOGGLE CLICKED: ${platformName}`);\r\n    \r\n    if (isConnecting && connectingPlatform !== platformName) {\r\n      console.log(`⚠️ Already connecting to ${connectingPlatform}, ignoring click on ${platformName}`);\r\n      return;\r\n    }\r\n    \r\n    const isConnected = connectedAccounts[platformName];\r\n    \r\n    if (isConnected) {\r\n      // Disconnect\r\n      console.log(`🔌 Disconnecting from ${platformName}...`);\r\n      setConnectedAccounts(prev => ({\r\n        ...prev,\r\n        [platformName]: false\r\n      }));\r\n      setConnectionErrors(prev => ({\r\n        ...prev,\r\n        [platformName]: null\r\n      }));\r\n    } else {\r\n      // Connect\r\n      await connectToPlatform(platformName);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    const connected = Object.entries(connectedAccounts)\r\n      .filter(([platform, isConnected]) => isConnected)\r\n      .map(([platform]) => platform);\r\n    \r\n    onComplete({\r\n      connectedAccounts: connected,\r\n      totalConnections: connected.length,\r\n      healthScore: healthScore,\r\n      connectionHealth: connectionHealth,\r\n      sdkVersion: '2.1.7',\r\n      enhancedFeatures: {\r\n        healthMonitoring: sdkConfig.enableHealthMonitoring,\r\n        autoRefresh: sdkConfig.enableAutoRefresh,\r\n        connectionValidation: sdkConfig.enableConnectionValidation\r\n      }\r\n    });\r\n  };\r\n\r\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\r\n  const personaNumber = Math.min(connectedCount + 1, 5); // 0 connections = persona 1, 1 connection = persona 2, etc.\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 pt-12 flex-shrink-0\">\r\n        <div className=\"mb-4 flex-shrink-0\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">Connect data, securely</h1>\r\n          <p className=\"text-gray-600 text-base\">More data, means a better Experience on {appName}.</p> \r\n        </div>\r\n\r\n        <div className=\"mb-4 flex justify-center flex-shrink-0\">\r\n          <div className=\"w-64 h-64 overflow-hidden\">\r\n            <img\r\n              src={personaImages[personaNumber]}\r\n              alt={`Persona ${personaNumber}`}\r\n              width=\"256\"\r\n              height=\"256\"\r\n              className=\"w-full h-full object-cover\"\r\n              onLoad={() => console.log('✅ Persona image loaded successfully!')}\r\n              onError={(e) => {\r\n                console.log('❌ Persona image failed to load:', personaImages[personaNumber]);\r\n                console.log('Connected count:', connectedCount);\r\n                console.log('Persona number:', personaNumber);\r\n                console.log('All persona URLs:', personaImages);\r\n                console.log('Current location:', window.location.href);\r\n                console.log('Trying to load from:', personaImages[personaNumber]);\r\n                \r\n                // Fallback to gradient if image fails to load\r\n                e.target.style.display = 'none';\r\n                e.target.parentElement.style.background = 'linear-gradient(135deg, #f97316 0%, #ec4899 50%, #8b5cf6 100%)';\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scrollable platform list - Reduced height */}\r\n      <div className=\"flex-1 overflow-y-auto px-6\" style={{ minHeight: 0, maxHeight: '40vh' }}>\r\n          <div className=\"space-y-3 pb-4\">\r\n            {platforms.map((platform) => {\r\n          const isConnected = connectedAccounts[platform.name] || false;\r\n          const isCurrentlyConnecting = connectingPlatform === platform.name;\r\n          const hasError = connectionErrors[platform.name];\r\n          const isDisabled = isConnecting && !isCurrentlyConnecting;\r\n          \r\n          return (\r\n            <div \r\n              key={platform.name}\r\n                  className=\"flex items-start gap-4 p-3 rounded-xl hover:bg-gray-50 transition-colors\"\r\n                  style={{\r\n                    backgroundColor: \"#ffffff\",\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                  }}\r\n              onClick={() => !isDisabled && handleToggle(platform.name)}\r\n            >\r\n                  <div className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center flex-shrink-0 border border-gray-100\">\r\n                  {isCurrentlyConnecting ? (\r\n                      <div className=\"animate-spin h-5 w-5 border-2 border-gray-400 rounded-full border-t-transparent\"></div>\r\n                  ) : (\r\n                    platform.icon\r\n                  )}\r\n                    </div>\r\n                  <div className=\"flex-1 min-w-0 pr-4\">\r\n                    <h3\r\n                      className=\"font-medium mb-1\"\r\n                      style={{\r\n                        backgroundColor: \"#ffffff !important\",\r\n                        color: \"#111827 !important\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                      }}\r\n                    >\r\n                      {platform.name}\r\n                    </h3>\r\n                    <p\r\n                      className=\"text-sm leading-relaxed\"\r\n                      style={{\r\n                        backgroundColor: \"#ffffff !important\",\r\n                        color: \"#4B5563 !important\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                      }}\r\n                    >\r\n                      {platform.description}\r\n                  </p>\r\n                  \r\n                  {/* Error Message */}\r\n                  {hasError && (\r\n                    <p className=\"text-xs text-red-600 mt-1\">\r\n                      {hasError}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                  <div className=\"flex-shrink-0\">\r\n                    <div\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    if (!isDisabled) handleToggle(platform.name);\r\n                  }}\r\n                      className={`relative inline-flex h-7 w-12 items-center rounded-full transition-all duration-200 ease-in-out cursor-pointer ${\r\n                        isConnected ? \"bg-green-500\" : \"bg-gray-300\"\r\n                      } ${isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\r\n                >\r\n                  <span\r\n                        className={`inline-block h-5 w-5 transform rounded-full bg-white transition-all duration-200 ease-in-out shadow-md ${\r\n                          isConnected ? \"translate-x-6\" : \"translate-x-0.5\"\r\n                    }`}\r\n                  />\r\n                    </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n          </div>\r\n        </div>\r\n\r\n      {/* Buttons - Fixed at bottom */}\r\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\r\n        <div\r\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\"\r\n        onClick={handleContinue}\r\n        >\r\n          Update\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n        <div\r\n        onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\r\n          className=\"w-full text-gray-600 text-base font-medium py-3 text-center cursor-pointer hover:text-gray-800 transition-colors\"\r\n      >\r\n          Skip\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\r\n  const [pin, setPin] = useState('');\r\n  const [pinRequirements, setPinRequirements] = useState({\r\n    length: false,\r\n    uppercase: false,\r\n    number: false,\r\n  });\r\n\r\n  // Check PIN requirements\r\n  useEffect(() => {\r\n    setPinRequirements({\r\n      length: pin.length >= 6,\r\n      uppercase: /[A-Z]/.test(pin),\r\n      number: /\\d/.test(pin),\r\n    });\r\n  }, [pin]);\r\n\r\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\r\n\r\n  const handleSubmit = () => {\r\n    if (allRequirementsMet) {\r\n      onComplete({\r\n        pin: pin, // This should be hashed in production\r\n        pinCreated: true,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\r\n        <div className=\"mb-6 flex-shrink-0\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\r\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6 flex-shrink-0\">\r\n          <input\r\n            type=\"password\"\r\n            value={pin}\r\n            onChange={(e) => setPin(e.target.value)}\r\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-gray-50\"\r\n            placeholder=\"Enter your PIN\"\r\n            maxLength={20}\r\n          />\r\n        </div>\r\n\r\n        {/* Scrollable requirements list */}\r\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\r\n          <div className=\"space-y-3 pb-4\">\r\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.length && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.uppercase && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <div\r\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\r\n                >\r\n                  {pinRequirements.number && (\r\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700\">Contain a number.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buttons - Fixed at bottom */}\r\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\r\n        <div\r\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\r\n            allRequirementsMet \r\n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \r\n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\r\n          }`}\r\n          onClick={allRequirementsMet ? handleSubmit : undefined}\r\n        >\r\n          Continue\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton from './ui/PrimaryButton.jsx';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nconst dataTypes = [\r\n  { \r\n    id: 'basic', \r\n    name: 'Basic Profile', \r\n    description: 'Essential profile information, account details, and basic demographics', \r\n    icon: 'User',\r\n    required: true,\r\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\r\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\r\n  },\r\n  { \r\n    id: 'preferences', \r\n    name: 'User Preferences', \r\n    description: 'User preferences, interests, settings and personal choices', \r\n    icon: 'Grid3X3',\r\n    required: false,\r\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\r\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\r\n  },\r\n  { \r\n    id: 'personality', \r\n    name: 'Personality Traits', \r\n    description: 'Personality traits, behavioral patterns and psychological insights', \r\n    icon: 'Brain',\r\n    required: false,\r\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\r\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\r\n  }\r\n];\r\n\r\n// Data Type Toggle Component with new checkbox design\r\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\r\n  const handleToggle = () => {\r\n    if (dataType.required) return; // Don't allow toggling required items\r\n    onToggle(dataType.id, !isEnabled);\r\n  };\r\n\r\n  const getIconComponent = (iconName) => {\r\n    const iconProps = { className: \"w-5 h-5 text-gray-600\" };\r\n    \r\n    switch (iconName) {\r\n      case 'User':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n          </svg>\r\n        );\r\n      case 'Grid3X3':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n          </svg>\r\n        );\r\n      case 'Brain':\r\n        return (\r\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n          </svg>\r\n        );\r\n      default:\r\n        return <span className=\"text-xl\">{iconName}</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-4 rounded-xl bg-gray-50\">\r\n      <div className=\"flex items-center gap-4\">\r\n        <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center\">\r\n          {getIconComponent(dataType.icon)}\r\n        </div>\r\n        <span className=\"font-medium text-gray-900\">{dataType.name}</span>\r\n      </div>\r\n      <div\r\n        onClick={handleToggle}\r\n        className={`w-6 h-6 rounded border-2 flex items-center justify-center cursor-pointer transition-colors ${\r\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\r\n        }`}\r\n      >\r\n        {isEnabled && (\r\n          <svg className=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DataRequest = ({ \r\n  userEmail = 'user@example.com', \r\n  testMode = true, \r\n  onComplete, \r\n  autoFetch = true,\r\n  appName = 'Test App',\r\n  formatResponse = false,\r\n  responseFormat = 'simple'\r\n}) => {\r\n  const [selectedData, setSelectedData] = useState({\r\n    basic: true, // Always true for required data\r\n    personality: false,\r\n    preferences: false\r\n  });\r\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\r\n  const [apiError, setApiError] = useState(null);\r\n\r\n  const handleDataToggle = (dataId, enabled) => {\r\n    const dataType = dataTypes.find(dt => dt.id === dataId);\r\n    if (dataType?.required) return; // Don't allow toggling required items\r\n\r\n    setSelectedData(prev => ({\r\n      ...prev,\r\n      [dataId]: enabled\r\n    }));\r\n  };\r\n\r\n  const generateUserHash = (email) => {\r\n    let hash = 0;\r\n    const str = email + Date.now().toString();\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return `user_${Math.abs(hash).toString(36)}`;\r\n  };\r\n\r\n  const fetchUserData = async () => {\r\n    console.log('🔥 DataRequest: fetchUserData called');\r\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\r\n    console.log('🔥 DataRequest: selectedData:', selectedData);\r\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\r\n    \r\n    setIsLoadingApi(true);\r\n    setApiError(null);\r\n    \r\n    try {\r\n      const userHash = generateUserHash(userEmail);\r\n      \r\n      // Get selected data types\r\n      const approvedData = Object.entries(selectedData)\r\n        .filter(([key, value]) => value)\r\n        .map(([key]) => key);\r\n\r\n      const mapDataTypesToConfirmations = (approvedData) => {\r\n        const confirmations = [];\r\n        const currentDate = new Date().toISOString();\r\n        \r\n        const dataTypeMapping = {\r\n          'basic': 'Medium',\r\n          'personality': 'Large', \r\n          'preferences': 'Traits'\r\n        };\r\n        \r\n        approvedData.forEach(dataType => {\r\n          if (dataTypeMapping[dataType]) {\r\n            confirmations.push({\r\n              data: dataTypeMapping[dataType],\r\n              date: currentDate\r\n            });\r\n          }\r\n        });\r\n        \r\n        return confirmations;\r\n      };\r\n\r\n      const apiEndpoint = testMode \r\n        ? 'https://api2.onairos.uk/inferenceTest'\r\n        : 'https://api2.onairos.uk/getAPIurlMobile';\r\n      \r\n      const baseResult = {\r\n        userHash,\r\n        appName,\r\n        approvedData,\r\n        apiUrl: apiEndpoint,\r\n        testMode,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      if (autoFetch) {\r\n        if (testMode) {\r\n          // Test mode: Skip API call completely, simulate response\r\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\r\n          \r\n          setTimeout(() => {\r\n            const simulatedApiData = {\r\n              success: true,\r\n              message: \"Data request simulated successfully\",\r\n              data: {\r\n                personalityScores: {\r\n                  openness: 0.75,\r\n                  conscientiousness: 0.68,\r\n                  extraversion: 0.82,\r\n                  agreeableness: 0.71,\r\n                  neuroticism: 0.43\r\n                },\r\n                insights: [\r\n                  \"You show high creativity and openness to new experiences\",\r\n                  \"Strong social tendencies with good interpersonal skills\",\r\n                  \"Well-organized approach to tasks and goals\"\r\n                ],\r\n                dataProcessed: approvedData,\r\n                timestamp: new Date().toISOString(),\r\n                testMode: true\r\n              }\r\n            };\r\n\r\n            const result = {\r\n              ...baseResult,\r\n              apiResponse: simulatedApiData,\r\n              success: true,\r\n              simulated: true\r\n            };\r\n\r\n            setIsLoadingApi(false);\r\n            console.log('🧪 Test mode: Simulated data request completed:', result);\r\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n            if (onComplete && typeof onComplete === 'function') {\r\n              onComplete(result);\r\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\r\n            } else {\r\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\r\n            }\r\n          }, 1200); // Simulate realistic processing time\r\n        } else {\r\n          // Production mode: Make real API call\r\n          try {\r\n            const confirmations = mapDataTypesToConfirmations(approvedData);\r\n            \r\n            const requestBody = {\r\n              approvedData,\r\n              userEmail,\r\n              appName,\r\n              confirmations\r\n            };\r\n\r\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\r\n            console.log('🔥 Request body:', requestBody);\r\n\r\n            const apiResponse = await fetch(apiEndpoint, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(requestBody)\r\n            });\r\n\r\n            if (!apiResponse.ok) {\r\n              throw new Error(`API request failed with status ${apiResponse.status}`);\r\n            }\r\n\r\n            const apiData = await apiResponse.json();\r\n            console.log('🔥 API Response:', apiData);\r\n\r\n            const result = {\r\n              ...baseResult,\r\n              apiResponse: apiData,\r\n              success: true\r\n            };\r\n\r\n            setIsLoadingApi(false);\r\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\r\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n            if (onComplete && typeof onComplete === 'function') {\r\n              onComplete(result);\r\n              console.log('🔥 DataRequest: onComplete called successfully');\r\n            } else {\r\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\r\n            }\r\n\r\n          } catch (apiError) {\r\n            console.error('🔥 API Error:', apiError);\r\n            setApiError(apiError.message);\r\n            setIsLoadingApi(false);\r\n            \r\n            const errorResult = {\r\n              ...baseResult,\r\n              apiResponse: null,\r\n              error: apiError.message,\r\n              success: false\r\n            };\r\n            \r\n            onComplete(errorResult);\r\n          }\r\n        }\r\n      } else {\r\n        setIsLoadingApi(false);\r\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\r\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\r\n        if (onComplete && typeof onComplete === 'function') {\r\n          onComplete(baseResult);\r\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\r\n        } else {\r\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('🔥 DataRequest Error:', error);\r\n      setApiError(error.message);\r\n      setIsLoadingApi(false);\r\n      \r\n      if (onComplete) {\r\n        onComplete({\r\n          error: error.message,\r\n          success: false,\r\n          userEmail,\r\n          appName,\r\n          testMode\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Count selected data types\r\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\">\r\n      {/* Content - Flexible center area */}\r\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0 pb-4\">\r\n        {/* Icon Flow */}\r\n        <div className=\"mb-6 flex justify-center items-center gap-4 flex-shrink-0\">\r\n          <div className=\"w-16 h-16 bg-white rounded-2xl shadow-lg flex items-center justify-center border border-gray-100\">\r\n            <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n              <path\r\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\r\n                fill=\"black\"\r\n              />\r\n              <path\r\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\r\n                fill=\"black\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n          <div className=\"w-16 h-16 bg-white rounded-2xl shadow-lg flex items-center justify-center border border-gray-100\">\r\n            <span className=\"text-2xl font-serif font-bold text-black\">E</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Title Section */}\r\n        <div className=\"mb-6 flex-shrink-0\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\r\n            Enoch wants to personalize your experience\r\n          </h1>\r\n          <p className=\"text-gray-600 text-base\">Choose what to share:</p>\r\n        </div>\r\n\r\n        {/* Consent Options */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"space-y-4 pb-6\">\r\n            {dataTypes.map((dataType, index) => (\r\n              <DataTypeToggle\r\n                key={dataType.id}\r\n                dataType={dataType}\r\n                isEnabled={selectedData[dataType.id]}\r\n                onToggle={handleDataToggle}\r\n                isLast={index === dataTypes.length - 1}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buttons - Fixed at bottom */}\r\n      <div className=\"px-6 pb-8 pt-4 flex-shrink-0 space-y-3\">\r\n        <div\r\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\"\r\n          onClick={fetchUserData}\r\n          disabled={isLoadingApi || selectedCount === 0}\r\n        >\r\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\r\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n        <div\r\n          onClick={() => onComplete({ cancelled: true })}\r\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-4 text-base font-medium text-center cursor-pointer transition-colors\"\r\n        >\r\n          Decline\r\n        </div>\r\n\r\n        {/* Error display */}\r\n        {apiError && (\r\n          <div className=\"mt-4 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\r\n            <p className=\"text-sm\">{apiError}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\r\nimport { COLORS } from '../theme/colors.js';\r\n\r\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: 'Setting up your personal AI',\r\n      description: 'Initializing your secure data model',\r\n      icon: '🤖',\r\n      duration: testMode ? 800 : 2000 // Much faster in test mode\r\n    },\r\n    {\r\n      title: 'Processing your connections',\r\n      description: 'Analyzing your social media patterns',\r\n      icon: '🔗',\r\n      duration: testMode ? 600 : 2500\r\n    },\r\n    {\r\n      title: 'Training your model',\r\n      description: 'Building your personalized insights',\r\n      icon: '🧠',\r\n      duration: testMode ? 700 : 3000\r\n    },\r\n    {\r\n      title: 'Finalizing setup',\r\n      description: 'Preparing your Onairos experience',\r\n      icon: '✨',\r\n      duration: testMode ? 500 : 2000\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let stepTimeout;\r\n\r\n    if (currentStep < steps.length) {\r\n      const stepDuration = steps[currentStep].duration;\r\n      const stepProgress = 100 / steps.length;\r\n\r\n      // Update progress gradually\r\n      interval = setInterval(() => {\r\n        setProgress(prev => {\r\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\r\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\r\n        });\r\n      }, 100);\r\n\r\n      // Move to next step after duration\r\n      stepTimeout = setTimeout(() => {\r\n        if (currentStep < steps.length - 1) {\r\n          setCurrentStep(prev => prev + 1);\r\n        } else {\r\n          setIsComplete(true);\r\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\r\n          \r\n          if (testMode) {\r\n            console.log('🧪 Test mode: Training simulation completed');\r\n          }\r\n          \r\n          setTimeout(() => {\r\n            onComplete({\r\n              trainingComplete: true,\r\n              timestamp: new Date().toISOString(),\r\n              userEmail: userEmail,\r\n              appName: appName,\r\n              testMode: testMode,\r\n              simulatedTraining: testMode\r\n            });\r\n          }, completionDelay);\r\n        }\r\n      }, stepDuration);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n      if (stepTimeout) clearTimeout(stepTimeout);\r\n    };\r\n  }, [currentStep, onComplete, userEmail, appName]);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center space-y-8\">\r\n      <div className=\"text-center\">\r\n        <div \r\n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\r\n          style={{\r\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\r\n          }}\r\n        >\r\n          <div className=\"text-3xl\">\r\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\r\n          </div>\r\n        </div>\r\n        <h2 \r\n          className=\"text-2xl font-bold mb-2\"\r\n          style={{ color: COLORS.textPrimary }}\r\n        >\r\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\r\n        </h2>\r\n        <p style={{ color: COLORS.textSecondary }}>\r\n          {isComplete \r\n            ? 'Your personal AI is ready to use' \r\n            : steps[currentStep]?.description\r\n          }\r\n        </p>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"w-full\">\r\n        <div \r\n          className=\"flex justify-between text-sm mb-2\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          <span>Progress</span>\r\n          <span>{Math.round(progress)}%</span>\r\n        </div>\r\n        <div \r\n          className=\"w-full rounded-full h-2\"\r\n          style={{ backgroundColor: COLORS.borderLight }}\r\n        >\r\n          <div \r\n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\r\n            style={{ \r\n              width: `${progress}%`,\r\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Steps Indicator */}\r\n      <div className=\"flex justify-center space-x-2\">\r\n        {steps.map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\r\n            style={{\r\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Current Step Details */}\r\n      <div \r\n        className=\"p-4 rounded-lg w-full\"\r\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\r\n      >\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div \r\n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\r\n            style={{ backgroundColor: '#DBEAFE' }}\r\n          >\r\n            <div className=\"text-sm\">\r\n              {isComplete ? '✅' : steps[currentStep]?.icon}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 \r\n              className=\"font-medium\"\r\n              style={{ color: COLORS.textPrimary }}\r\n            >\r\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\r\n            </h3>\r\n            <p \r\n              className=\"text-sm\"\r\n              style={{ color: COLORS.textSecondary }}\r\n            >\r\n              {isComplete \r\n                ? 'Your Onairos experience is ready' \r\n                : steps[currentStep]?.description\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* App Info */}\r\n      <div className=\"text-center\">\r\n        <p \r\n          className=\"text-sm\"\r\n          style={{ color: COLORS.textSecondary }}\r\n        >\r\n          Setting up for <span className=\"font-medium\">{appName}</span>\r\n        </p>\r\n        {userEmail && (\r\n          <p \r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.textMuted }}\r\n          >\r\n            {userEmail}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function LoadingScreen({ onComplete }) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [dotCount, setDotCount] = useState(0);\r\n\r\n  const loadingStates = [\r\n    { message: \"Validating PIN and continuing training\", progress: 20 },\r\n    { message: \"Uploading model to secure storage\", progress: 40 },\r\n    { message: \"Running test inference\", progress: 60 },\r\n    { message: \"Storing results in databases\", progress: 80 },\r\n    { message: \"Complete!\", progress: 100 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const stateInterval = setInterval(() => {\r\n      setCurrentStep((prev) => {\r\n        const nextStep = prev + 1;\r\n        if (nextStep >= loadingStates.length) {\r\n          // Loading complete, call onComplete after a short delay\r\n          setTimeout(() => {\r\n            onComplete();\r\n          }, 1000);\r\n          return prev; // Keep at last step\r\n        }\r\n        return nextStep;\r\n      });\r\n    }, 3000); // Change state every 3 seconds\r\n\r\n    return () => clearInterval(stateInterval);\r\n  }, [loadingStates.length, onComplete]);\r\n\r\n  useEffect(() => {\r\n    const dotInterval = setInterval(() => {\r\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\r\n    }, 500); // Change dots every 500ms\r\n\r\n    return () => clearInterval(dotInterval);\r\n  }, []);\r\n\r\n  const currentState = loadingStates[currentStep];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\">\r\n      {/* Modal - Full height from bottom */}\r\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden h-screen max-h-screen flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\r\n        {/* Header */}\r\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\r\n        </div>\r\n\r\n        {/* Content - Centered loading state */}\r\n        <div className=\"flex-1 flex flex-col justify-center items-center px-6\">\r\n          <div className=\"text-center mb-12\">\r\n            <h1 className=\"text-lg font-bold text-gray-900 mb-8 leading-tight\">\r\n              {currentState.message}\r\n              {currentState.message !== \"Complete!\" && (\r\n                <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\r\n              )}\r\n            </h1>\r\n\r\n            <div className=\"w-64 mx-auto\">\r\n              <div className=\"w-full h-2 bg-gray-200 rounded-full\">\r\n                <div\r\n                  className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\r\n                  style={{ width: `${currentState.progress}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom spacing */}\r\n        <div className=\"h-20 flex-shrink-0\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Response formatter utility for Onairos SDK\r\n * Converts array-based responses to dictionary format for better developer experience\r\n */\r\n\r\n// Standard 16 personality types in order that the API returns them\r\nexport const PERSONALITY_TYPES = [\r\n  'Analyst',\r\n  'Diplomat', \r\n  'Sentinel',\r\n  'Explorer',\r\n  'Architect',\r\n  'Logician',\r\n  'Commander',\r\n  'Debater',\r\n  'Advocate',\r\n  'Mediator',\r\n  'Protagonist',\r\n  'Campaigner',\r\n  'Logistician',\r\n  'Defender',\r\n  'Executive',\r\n  'Consul'\r\n];\r\n\r\n// Standard trait categories that might be returned\r\nexport const TRAIT_CATEGORIES = [\r\n  'Openness',\r\n  'Conscientiousness',\r\n  'Extraversion',\r\n  'Agreeableness',\r\n  'Neuroticism'\r\n];\r\n\r\n/**\r\n * Formats API response to include both array and dictionary formats\r\n * @param {Object} apiResponse - Raw API response from Onairos\r\n * @param {Object} options - Formatting options\r\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\r\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\r\n * @returns {Object} Formatted response with both formats\r\n */\r\nexport function formatOnairosResponse(apiResponse, options = {}) {\r\n  const { includeDictionary = true, includeArray = true } = options;\r\n  \r\n  if (!apiResponse) {\r\n    return apiResponse;\r\n  }\r\n\r\n  const formatted = { ...apiResponse };\r\n\r\n  // Handle personality scores if present\r\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\r\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\r\n    \r\n    if (Array.isArray(scores) && scores.length >= 16) {\r\n      if (includeDictionary) {\r\n        // Create personality dictionary\r\n        const personalityDict = {};\r\n        PERSONALITY_TYPES.forEach((type, index) => {\r\n          personalityDict[type] = scores[index];\r\n        });\r\n        \r\n        // Add to formatted response\r\n        if (formatted.InferenceResult) {\r\n          formatted.InferenceResult.personalityDict = personalityDict;\r\n        } else {\r\n          formatted.personalityDict = personalityDict;\r\n        }\r\n      }\r\n      \r\n      if (!includeArray) {\r\n        // Remove array format if not requested\r\n        if (formatted.InferenceResult?.traits) {\r\n          delete formatted.InferenceResult.traits;\r\n        }\r\n        if (formatted.traits) {\r\n          delete formatted.traits;\r\n        }\r\n        if (formatted.scores) {\r\n          delete formatted.scores;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle trait data if present (for preferences/traits)\r\n  if (apiResponse.traitResult || apiResponse.traits) {\r\n    const traits = apiResponse.traitResult || apiResponse.traits;\r\n    \r\n    if (Array.isArray(traits) && includeDictionary) {\r\n      const traitDict = {};\r\n      TRAIT_CATEGORIES.forEach((category, index) => {\r\n        if (traits[index] !== undefined) {\r\n          traitDict[category] = traits[index];\r\n        }\r\n      });\r\n      \r\n      formatted.traitDict = traitDict;\r\n    }\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Legacy formatter for backward compatibility\r\n * Converts scores array to personality dictionary only\r\n * @param {Array} scores - Array of personality scores\r\n * @returns {Object} Dictionary with personality type names as keys\r\n */\r\nexport function formatPersonalityScores(scores) {\r\n  if (!Array.isArray(scores) || scores.length < 16) {\r\n    console.warn('Invalid scores array provided to formatPersonalityScores');\r\n    return {};\r\n  }\r\n\r\n  const personalityDict = {};\r\n  PERSONALITY_TYPES.forEach((type, index) => {\r\n    personalityDict[type] = scores[index];\r\n  });\r\n  \r\n  return personalityDict;\r\n}\r\n\r\n/**\r\n * Get personality type names in order\r\n * @returns {Array} Array of personality type names\r\n */\r\nexport function getPersonalityTypes() {\r\n  return [...PERSONALITY_TYPES];\r\n}\r\n\r\n/**\r\n * Get trait category names in order  \r\n * @returns {Array} Array of trait category names\r\n */\r\nexport function getTraitCategories() {\r\n  return [...TRAIT_CATEGORIES];\r\n} ","import React from 'react';\r\nimport { COLORS } from '../../theme/colors.js';\r\n\r\n// Standardized page layout component with white background\r\nconst PageLayout = ({\r\n  children,\r\n  title,\r\n  subtitle,\r\n  icon,\r\n  showHeader = true,\r\n  showCloseButton = false,\r\n  onClose,\r\n  onBack,\r\n  showBackButton = false,\r\n  className = '',\r\n  contentClassName = '',\r\n  centerContent = true,\r\n  style = {},\r\n  ...props\r\n}) => {\r\n  const layoutStyle = {\r\n    backgroundColor: COLORS.background,\r\n    minHeight: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...style\r\n  };\r\n\r\n  const headerStyle = {\r\n    position: 'sticky',\r\n    top: 0,\r\n    backgroundColor: COLORS.background,\r\n    zIndex: 10,\r\n    padding: '12px 24px 8px'\r\n  };\r\n\r\n  const contentStyle = {\r\n    flex: 1,\r\n    padding: '24px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'auto',\r\n    minHeight: 0, // Allow flex item to shrink below content size\r\n    ...(centerContent && {\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start'\r\n    })\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: '24px',\r\n    fontWeight: '700',\r\n    color: COLORS.textPrimary,\r\n    margin: '0 0 8px 0',\r\n    textAlign: centerContent ? 'center' : 'left'\r\n  };\r\n\r\n  const subtitleStyle = {\r\n    fontFamily: 'Inter, system-ui, sans-serif',\r\n    fontSize: '16px',\r\n    fontWeight: '400',\r\n    color: COLORS.textSecondary,\r\n    margin: '0 0 32px 0',\r\n    textAlign: centerContent ? 'center' : 'left',\r\n    lineHeight: '1.5'\r\n  };\r\n\r\n  const iconStyle = {\r\n    width: '48px',\r\n    height: '48px',\r\n    margin: '0 auto 24px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '24px'\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`onairos-page-layout ${className}`}\r\n      style={layoutStyle}\r\n      {...props}\r\n    >\r\n      {/* Header with navigation */}\r\n      {showHeader && (\r\n        <div style={headerStyle}>\r\n          <div className=\"flex items-center justify-between\">\r\n            {/* Back button */}\r\n            {showBackButton && onBack && (\r\n              <button\r\n                onClick={onBack}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Go back\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\r\n              </button>\r\n            )}\r\n\r\n\r\n            {/* Close button */}\r\n            {showCloseButton && onClose && (\r\n              <button\r\n                onClick={onClose}\r\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main content area */}\r\n      <div \r\n        className={`onairos-page-content ${contentClassName}`}\r\n        style={contentStyle}\r\n      >\r\n        {/* Icon */}\r\n        {icon && (\r\n          <div style={iconStyle}>\r\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\r\n          </div>\r\n        )}\r\n\r\n        {/* Title */}\r\n        {title && (\r\n          <h1 style={titleStyle}>\r\n            {title}\r\n          </h1>\r\n        )}\r\n\r\n        {/* Subtitle */}\r\n        {subtitle && (\r\n          <p style={subtitleStyle}>\r\n            {subtitle}\r\n          </p>\r\n        )}\r\n\r\n        {/* Page content */}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Modal wrapper component for overlay-style pages\r\nconst ModalPageLayout = ({\r\n  children,\r\n  visible = true,\r\n  onClose,\r\n  onBackdropClick,\r\n  backdropStyle = {},\r\n  modalStyle = {},\r\n  ...pageLayoutProps\r\n}) => {\r\n  if (!visible) return null;\r\n\r\n  const backdropStyles = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    zIndex: 1000,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    ...backdropStyle\r\n  };\r\n\r\n  const modalStyles = {\r\n    backgroundColor: COLORS.background,\r\n    borderTopLeftRadius: '24px',\r\n    borderTopRightRadius: '24px',\r\n    borderBottomLeftRadius: '24px',\r\n    borderBottomRightRadius: '24px',\r\n    height: '100vh',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...modalStyle\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      if (onBackdropClick) {\r\n        onBackdropClick();\r\n      } else if (onClose) {\r\n        onClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={backdropStyles} onClick={handleBackdropClick}>\r\n      <div style={modalStyles}>\r\n        <PageLayout\r\n          showHeader={true}\r\n          showCloseButton={true}\r\n          onClose={onClose}\r\n          {...pageLayoutProps}\r\n        >\r\n          {children}\r\n        </PageLayout>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ModalPageLayout };\r\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\r\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\r\nimport EmailAuth from './components/EmailAuth.js';\r\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\r\nimport PinSetup from './components/PinSetup.js';\r\nimport DataRequest from './components/DataRequest.js';\r\nimport TrainingComponent from './components/TrainingComponent.jsx';\r\nimport LoadingScreen from './components/LoadingScreen.jsx';\r\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\r\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\r\n\r\nexport function OnairosButton({\r\n  requestData, \r\n  webpageName, \r\n  inferenceData = null, \r\n  onComplete = null, \r\n  autoFetch = true, // Auto-enabled for seamless testing experience\r\n  testMode = true, // Auto-enabled for design testing - set to false for production\r\n  proofMode = false, \r\n  textLayout = 'below', \r\n  textColor = 'white',\r\n  login = false,\r\n  buttonType = 'pill',\r\n  loginReturn = null,\r\n  loginType = 'signIn',\r\n  visualType = 'full',\r\n  appIcon = null,\r\n  enableTraining = true,\r\n  formatResponse = true,\r\n  responseFormat = { includeDictionary: true, includeArray: true }\r\n}) {\r\n\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\r\n  const [userData, setUserData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check for existing user session\r\n  useEffect(() => {\r\n    const checkExistingSession = () => {\r\n      // In test mode, always start fresh to see the full flow\r\n      if (testMode) {\r\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\r\n        localStorage.removeItem('onairosUser');\r\n        setCurrentFlow('welcome');\r\n        return;\r\n      }\r\n      \r\n      const savedUser = localStorage.getItem('onairosUser');\r\n      if (savedUser) {\r\n        try {\r\n          const user = JSON.parse(savedUser);\r\n          setUserData(user);\r\n          // If user has completed onboarding and PIN setup, go directly to data request\r\n          if (user.onboardingComplete && user.pinCreated) {\r\n            setCurrentFlow('dataRequest');\r\n          } else if (user.verified && !user.onboardingComplete) {\r\n            setCurrentFlow('onboarding');\r\n          } else if (user.onboardingComplete && !user.pinCreated) {\r\n            setCurrentFlow('pin');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing saved user data:', error);\r\n          localStorage.removeItem('onairosUser');\r\n        }\r\n      }\r\n    };\r\n\r\n    checkExistingSession();\r\n  }, [testMode]);\r\n\r\n  const openTerminal = async () => {\r\n    try {\r\n      console.log('🔥 openTerminal called');\r\n        setShowOverlay(true);\r\n    } catch (error) {\r\n      console.error('Error in openTerminal:', error);\r\n    }\r\n  };\r\n\r\n  const handleCloseOverlay = () => {\r\n    setShowOverlay(false);\r\n    setError(null);\r\n  };\r\n\r\n  // Handle clicks on the backdrop to close modal\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      handleCloseOverlay();\r\n    }\r\n  };\r\n\r\n  const handleWelcomeContinue = () => {\r\n    console.log('🔥 Welcome screen continue clicked');\r\n    setCurrentFlow('email');\r\n  };\r\n\r\n  const handleEmailAuthSuccess = (authData) => {\r\n    console.log('🔥 Email auth successful:', authData);\r\n    console.log('🔧 User State:', {\r\n      isNewUser: authData.isNewUser,\r\n      userState: authData.userState,\r\n      flowType: authData.flowType,\r\n      existingUser: authData.existingUser,\r\n      hasAccountInfo: !!authData.accountInfo\r\n    });\r\n    \r\n    // Determine flow based on API response - more explicit checking\r\n    const isNewUser = authData.isNewUser === true || \r\n                     authData.existingUser === false || \r\n                     authData.flowType === 'onboarding' || \r\n                     authData.userState === 'new' ||\r\n                     !authData.accountInfo; // No account info means new user\r\n    \r\n    console.log('🔍 Flow determination:', {\r\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\r\n      reasoning: {\r\n        isNewUser: authData.isNewUser,\r\n        existingUserFalse: authData.existingUser === false,\r\n        flowTypeOnboarding: authData.flowType === 'onboarding',\r\n        noAccountInfo: !authData.accountInfo\r\n      }\r\n    });\r\n    \r\n    const newUserData = {\r\n      ...authData,\r\n      verified: true,\r\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\r\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\r\n    };\r\n    \r\n    setUserData(newUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\r\n    \r\n    // Flow decision logic - prioritize new user detection\r\n    if (isNewUser) {\r\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\r\n      setCurrentFlow('onboarding');\r\n    } else {\r\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\r\n      setCurrentFlow('dataRequest');\r\n    }\r\n  };\r\n\r\n  const handleOnboardingComplete = (onboardingData) => {\r\n    console.log('Onboarding completed:', onboardingData);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      onboardingComplete: true,\r\n      connectedAccounts: onboardingData.connectedAccounts || []\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    setCurrentFlow('pin');\r\n  };\r\n\r\n  const handlePinSetupComplete = (pinData) => {\r\n    console.log('PIN setup completed:', pinData);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      ...pinData,\r\n      pinCreated: true\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    \r\n    // Move to loading flow\r\n    setCurrentFlow('loading');\r\n  };\r\n\r\n  const handleLoadingComplete = () => {\r\n    setCurrentFlow('dataRequest');\r\n  };\r\n\r\n  const handleTrainingComplete = (trainingResult) => {\r\n    console.log('🎓 Training completed:', trainingResult);\r\n    const updatedUserData = {\r\n      ...userData,\r\n      trainingCompleted: true,\r\n      ...trainingResult\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n    \r\n    // Move to data request after training\r\n    setCurrentFlow('dataRequest');\r\n  };\r\n\r\n  const handleDataRequestComplete = (requestResult) => {\r\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\r\n    \r\n    // Update user data with request result\r\n    const updatedUserData = {\r\n      ...userData,\r\n      lastDataRequest: requestResult\r\n    };\r\n    setUserData(updatedUserData);\r\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\r\n\r\n    // Close overlay immediately\r\n    console.log('🔥 Closing overlay after data request completion');\r\n    setShowOverlay(false);\r\n\r\n    // Format response if requested and API response is present\r\n    let formattedResult = requestResult;\r\n    if (formatResponse && requestResult?.apiResponse) {\r\n      try {\r\n        formattedResult = {\r\n          ...requestResult,\r\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\r\n        };\r\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\r\n      } catch (error) {\r\n        console.warn('🔥 Error formatting response:', error);\r\n        // Continue with original result if formatting fails\r\n      }\r\n    }\r\n\r\n    // Call onComplete callback if provided\r\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\r\n    if (onComplete) {\r\n      try {\r\n        onComplete(formattedResult);\r\n        console.log('🔥 onComplete callback executed successfully');\r\n      } catch (error) {\r\n        console.error('🔥 Error in onComplete callback:', error);\r\n      }\r\n    } else {\r\n      console.log('🔥 No onComplete callback provided');\r\n    }\r\n  };\r\n\r\n  const getFlowTitle = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own titles\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own titles\r\n      case 'onboarding':\r\n        return 'Connect Your Data';\r\n      case 'pin':\r\n        return 'Secure Your Account';\r\n      case 'training':\r\n        return 'Training Your Model';\r\n      case 'dataRequest':\r\n        return 'Data Request';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getFlowSubtitle = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own subtitles\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own subtitles\r\n      case 'onboarding':\r\n        return 'Choose which accounts to connect for a personalized experience';\r\n      case 'pin':\r\n        return 'Create a secure PIN to protect your data';\r\n      case 'training':\r\n        return 'Building your personalized insights';\r\n      case 'dataRequest':\r\n        return `Select the data you want to share with ${webpageName}`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getFlowIcon = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return ''; // WelcomeScreen handles its own layout\r\n      case 'email':\r\n        return ''; // EmailAuth handles its own layout\r\n      case 'onboarding':\r\n        return '🔗';\r\n      case 'pin':\r\n        return '🔒';\r\n      case 'training':\r\n        return '⚡';\r\n      case 'dataRequest':\r\n        return '📊';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const renderCurrentFlow = () => {\r\n    switch (currentFlow) {\r\n      case 'welcome':\r\n        return (\r\n          <WelcomeScreen \r\n            onContinue={handleWelcomeContinue}\r\n            onClose={handleCloseOverlay}\r\n            webpageName={webpageName}\r\n            appIcon={appIcon}\r\n            testMode={testMode}\r\n          />\r\n        );\r\n      case 'email':\r\n        return (\r\n          <div className=\"h-[min(85vh,700px)]\">\r\n            <EmailAuth \r\n              onSuccess={handleEmailAuthSuccess}\r\n              testMode={testMode} // Use the testMode prop from initialization\r\n            />\r\n          </div>\r\n        );\r\n      \r\n      case 'onboarding':\r\n        return (\r\n          <UniversalOnboarding \r\n            onComplete={handleOnboardingComplete}\r\n            onBack={() => setCurrentFlow('email')}\r\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n            appName={webpageName}\r\n            username={userData?.email || userData?.username}\r\n            testMode={testMode}\r\n          />\r\n        );\r\n      \r\n      case 'pin':\r\n        return (\r\n          <PinSetup \r\n            onComplete={handlePinSetupComplete}\r\n            userEmail={userData?.email}\r\n          />\r\n        );\r\n      \r\n      case 'training':\r\n        return (\r\n          <TrainingComponent \r\n            onComplete={handleTrainingComplete}\r\n            userEmail={userData?.email}\r\n            appName={webpageName}\r\n            connectedAccounts={userData?.connectedAccounts || []}\r\n            testMode={testMode}\r\n          />\r\n        );\r\n      \r\n      case 'dataRequest':\r\n        return (\r\n          <DataRequest \r\n            onComplete={handleDataRequestComplete}\r\n            userEmail={userData?.email}\r\n            requestData={requestData}\r\n            appName={webpageName}\r\n            autoFetch={autoFetch}\r\n            testMode={testMode}\r\n            appIcon={appIcon}\r\n            connectedAccounts={userData?.connectedAccounts || {}}\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return (\r\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\r\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\r\n            <p className=\"text-gray-600\">Loading...</p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Styling and button class based on visual type\r\n  const buttonClass = \r\n    `flex items-center justify-center font-bold rounded cursor-pointer ${\r\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\r\n    } bg-transparent OnairosConnect`;\r\n\r\n  const buttonStyle = {\r\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\r\n    backgroundColor: 'transparent',\r\n    color: textColor,\r\n    border: '1px solid transparent',\r\n  };\r\n\r\n  // Icon and text style based on the visualType\r\n  const logoStyle = {\r\n    width: '20px',\r\n    height: '20px',\r\n    marginRight: visualType === 'full' ? '12px' : '0',\r\n  };\r\n\r\n  const getText = () => {\r\n    switch (loginType) {\r\n      case 'signUp':\r\n        return 'Sign Up with Onairos';\r\n      case 'signOut':\r\n        return 'Sign Out of Onairos';\r\n      default:\r\n        return 'Sign In with Onairos';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={buttonClass}\r\n        onClick={openTerminal}\r\n        style={buttonStyle}\r\n      >\r\n        {(visualType === 'full' || visualType === 'icon') && (\r\n          <img\r\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n            alt=\"Onairos Logo\"\r\n            style={logoStyle}\r\n          />\r\n        )}\r\n        {visualType !== 'icon' && (\r\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\r\n            {getText()}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Modal with New Design */}\r\n      {showOverlay && (\r\n        <>\r\n          {currentFlow === 'email' ? (\r\n            // Special case for email - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={handleCloseOverlay}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Email Content */}\r\n                <div className=\"h-[min(85vh,700px)]\">\r\n                  <EmailAuth \r\n                    onSuccess={handleEmailAuthSuccess}\r\n                    testMode={testMode}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'onboarding' ? (\r\n            // Special case for onboarding - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('email')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Onboarding Content */}\r\n                <UniversalOnboarding \r\n                  onComplete={handleOnboardingComplete}\r\n                  onBack={() => setCurrentFlow('email')}\r\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\r\n                  appName={webpageName}\r\n                  username={userData?.email || userData?.username}\r\n                  testMode={testMode}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'dataRequest' ? (\r\n            // Special case for dataRequest - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('loading')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* DataRequest Content */}\r\n                <DataRequest \r\n                  onComplete={handleDataRequestComplete}\r\n                  userEmail={userData?.email}\r\n                  requestData={requestData}\r\n                  appName={webpageName}\r\n                  autoFetch={autoFetch}\r\n                  testMode={testMode}\r\n                  appIcon={appIcon}\r\n                  connectedAccounts={userData?.connectedAccounts || {}}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'pin' ? (\r\n            // Special case for pin - render directly without PageLayout wrapper\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\r\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\r\n                {/* Header */}\r\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\r\n                  <button\r\n                    onClick={() => setCurrentFlow('onboarding')}\r\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* PinSetup Content - Must take remaining height */}\r\n                <div className=\"flex-1 min-h-0\">\r\n                  <PinSetup \r\n                    onComplete={handlePinSetupComplete}\r\n                    onBack={() => setCurrentFlow('onboarding')}\r\n                    userEmail={userData?.email}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : currentFlow === 'loading' ? (\r\n            // Loading screen\r\n            <LoadingScreen onComplete={handleLoadingComplete} />\r\n          ) : (\r\n            // All other flows use PageLayout wrapper\r\n            <ModalPageLayout\r\n              visible={showOverlay}\r\n              onClose={handleCloseOverlay}\r\n              showBackButton={currentFlow === 'training'}\r\n              onBack={() => {\r\n                if (currentFlow === 'email') setCurrentFlow('welcome');\r\n                if (currentFlow === 'onboarding') setCurrentFlow('email');\r\n                if (currentFlow === 'pin') setCurrentFlow('onboarding'); \r\n                if (currentFlow === 'training') setCurrentFlow('pin');\r\n              }}\r\n              title={getFlowTitle()}\r\n              subtitle={getFlowSubtitle()}\r\n              icon={getFlowIcon()}\r\n              centerContent={true}\r\n            >\r\n              {renderCurrentFlow()}\r\n            </ModalPageLayout>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OnairosButton;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__[\"default\"] });","/**\r\n * Standalone Onairos Overlay Handler\r\n * Allows developers to trigger the Onairos flow programmatically without the button component\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { OnairosButton } from '../onairosButton.jsx';\r\nimport { formatOnairosResponse } from './responseFormatter.js';\r\n\r\n/**\r\n * Opens the Onairos overlay flow programmatically\r\n * @param {Object} config - Configuration options\r\n * @param {Array} config.requestData - Data types to request ['basic', 'personality', 'preferences']\r\n * @param {string} config.webpageName - Name of your application\r\n * @param {Function} config.onComplete - Callback function when flow completes\r\n * @param {boolean} config.autoFetch - Whether to auto-fetch data (default: false)\r\n * @param {boolean} config.testMode - Whether to use test mode (default: false)\r\n * @param {string} config.appIcon - URL to your app icon (optional)\r\n * @param {boolean} config.formatResponse - Whether to format response with dictionary (default: true)\r\n * @param {Object} config.responseFormat - Response formatting options\r\n * @returns {Promise<Function>} Promise that resolves to a cleanup function\r\n */\r\nexport async function openOnairosOverlay(config = {}) {\r\n  const {\r\n    requestData = ['basic', 'personality'],\r\n    webpageName = 'My App',\r\n    onComplete = null,\r\n    autoFetch = false,\r\n    testMode = false,\r\n    appIcon = null,\r\n    formatResponse = true,\r\n    responseFormat = { includeDictionary: true, includeArray: true },\r\n    ...otherProps\r\n  } = config;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // Create a container for the overlay\r\n      const containerId = `onairos-overlay-${Math.random().toString(36).substr(2, 9)}`;\r\n      const container = document.createElement('div');\r\n      container.id = containerId;\r\n      container.style.position = 'fixed';\r\n      container.style.top = '0';\r\n      container.style.left = '0';\r\n      container.style.width = '100%';\r\n      container.style.height = '100%';\r\n      container.style.zIndex = '9999';\r\n      container.style.pointerEvents = 'none'; // Allow clicks to pass through to the button\r\n      \r\n      document.body.appendChild(container);\r\n\r\n      // Cleanup function\r\n      const cleanup = () => {\r\n        if (container && container.parentNode) {\r\n          try {\r\n            ReactDOM.unmountComponentAtNode(container);\r\n          } catch (error) {\r\n            console.warn('Error unmounting React component:', error);\r\n          }\r\n          container.parentNode.removeChild(container);\r\n        }\r\n      };\r\n\r\n      // Enhanced onComplete handler\r\n      const handleComplete = (result) => {\r\n        let formattedResult = result;\r\n        \r\n        // Format response if requested\r\n        if (formatResponse && result?.apiResponse) {\r\n          try {\r\n            formattedResult = {\r\n              ...result,\r\n              apiResponse: formatOnairosResponse(result.apiResponse, responseFormat)\r\n            };\r\n          } catch (error) {\r\n            console.warn('Error formatting response:', error);\r\n            // Continue with original result if formatting fails\r\n          }\r\n        }\r\n\r\n        // Call the original onComplete callback\r\n        if (onComplete && typeof onComplete === 'function') {\r\n          try {\r\n            onComplete(formattedResult);\r\n          } catch (error) {\r\n            console.error('Error in onComplete callback:', error);\r\n          }\r\n        }\r\n\r\n        // Cleanup after a short delay to allow animations\r\n        setTimeout(cleanup, 100);\r\n      };\r\n\r\n      // Create the Onairos button component with auto-open\r\n      const OnairosElement = React.createElement(OnairosButton, {\r\n        requestData,\r\n        webpageName,\r\n        onComplete: handleComplete,\r\n        autoFetch,\r\n        testMode,\r\n        appIcon,\r\n        visualType: 'icon', // Use icon-only to minimize visual footprint\r\n        buttonType: 'pill',\r\n        textColor: 'white',\r\n        style: { opacity: 0, position: 'absolute', top: '-9999px' }, // Hide the button\r\n        ...otherProps\r\n      });\r\n\r\n      // Render the component\r\n      ReactDOM.render(OnairosElement, container);\r\n\r\n      // Auto-click the button to open overlay after render\r\n      setTimeout(() => {\r\n        const button = container.querySelector('button');\r\n        if (button) {\r\n          button.click();\r\n          resolve(cleanup); // Resolve with cleanup function\r\n        } else {\r\n          cleanup();\r\n          reject(new Error('Failed to render Onairos button'));\r\n        }\r\n      }, 100);\r\n\r\n    } catch (error) {\r\n      console.error('Error opening Onairos overlay:', error);\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Alternative method using React hooks for React applications\r\n * @param {Object} config - Same configuration as openOnairosOverlay\r\n * @returns {Object} Hook object with open function and state\r\n */\r\nexport function useOnairosOverlay(config = {}) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const cleanupRef = React.useRef(null);\r\n\r\n  const open = React.useCallback(async (overrideConfig = {}) => {\r\n    if (isOpen || isLoading) return;\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const finalConfig = {\r\n        ...config,\r\n        ...overrideConfig,\r\n        onComplete: (result) => {\r\n          setIsOpen(false);\r\n          setIsLoading(false);\r\n          \r\n          // Call original onComplete if provided\r\n          if (config.onComplete) {\r\n            config.onComplete(result);\r\n          }\r\n          if (overrideConfig.onComplete) {\r\n            overrideConfig.onComplete(result);\r\n          }\r\n        }\r\n      };\r\n\r\n      const cleanup = await openOnairosOverlay(finalConfig);\r\n      cleanupRef.current = cleanup;\r\n      setIsOpen(true);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error('Error opening overlay:', error);\r\n    }\r\n  }, [config, isOpen, isLoading]);\r\n\r\n  const close = React.useCallback(() => {\r\n    if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = null;\r\n    }\r\n    setIsOpen(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Cleanup on unmount\r\n  React.useEffect(() => {\r\n    return () => {\r\n      if (cleanupRef.current) {\r\n        cleanupRef.current();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    open,\r\n    close,\r\n    isOpen,\r\n    isLoading\r\n  };\r\n}\r\n\r\n/**\r\n * Simple function to get user data without UI (for existing authenticated users)\r\n * @param {Object} config - Configuration options\r\n * @param {Array} config.requestData - Data types to request\r\n * @param {string} config.userEmail - User email (if known)\r\n * @param {string} config.appName - App name\r\n * @param {boolean} config.testMode - Whether to use test mode\r\n * @param {boolean} config.formatResponse - Whether to format response\r\n * @returns {Promise<Object>} Promise that resolves to user data\r\n */\r\nexport async function getOnairosData(config = {}) {\r\n  const {\r\n    requestData = ['basic', 'personality'],\r\n    userEmail = '',\r\n    appName = 'My App',\r\n    testMode = false,\r\n    formatResponse = true,\r\n    responseFormat = { includeDictionary: true, includeArray: true }\r\n  } = config;\r\n\r\n  // This would need to be implemented based on your existing API logic\r\n  // For now, it's a placeholder that developers can use as a reference\r\n  throw new Error('getOnairosData requires authenticated user session. Use openOnairosOverlay for the full authentication flow.');\r\n} ","import React from 'react';\r\nimport OnairosButton from './onairosButton.jsx';\r\n\r\n// Main Onairos component\r\nexport function Onairos(props) {\r\n  return (\r\n    <>\r\n      <OnairosButton {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\n// Export both the main component and individual components\r\nexport { OnairosButton };\r\nexport default Onairos;\r\n\r\n// Export overlay handler functions for programmatic access\r\nexport { \r\n  openOnairosOverlay, \r\n  useOnairosOverlay, \r\n  getOnairosData \r\n} from './utils/overlayHandler.js';\r\n\r\n// Export response formatting utilities\r\nexport { \r\n  formatOnairosResponse, \r\n  formatPersonalityScores,\r\n  getPersonalityTypes,\r\n  getTraitCategories,\r\n  PERSONALITY_TYPES,\r\n  TRAIT_CATEGORIES\r\n} from './utils/responseFormatter.js';\r\n\r\n// Initialize SDK functionality (if needed)\r\nexport const initializeApiKey = async (config) => {\r\n  // SDK initialization logic would go here\r\n  console.log('🔧 SDK initialized with config:', config);\r\n  return Promise.resolve();\r\n};\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_react__","createElement","forwardRef","useEffect","useState","WelcomeScreen","_ref","onContinue","onClose","webpageName","appIcon","testMode","appName","React","className","style","height","viewBox","fill","stroke","strokeWidth","cx","cy","r","strokeLinecap","strokeLinejoin","src","alt","concat","charAt","toUpperCase","onClick","toPascalCase","string","camelCase","replace","match","p1","p2","toLowerCase","toCamelCase","slice","mergeClasses","classes","filter","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","startsWith","defaultAttributes","xmlns","width","Icon","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","Number","map","tag","attrs","Array","isArray","Check","iconName","Component","displayName","createLucideIcon","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","borderRadius","fontSize","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","_objectWithoutProperties","_excluded","setPressed","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","setTimeout","firstInput","document","querySelector","handleEmailSubmit","async","e","preventDefault","test","validateEmail","console","log","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleGoogleAuth","_localStorage$getItem","sdkConfig","baseUrl","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","toString","popup","open","checkInterval","setInterval","closed","clearInterval","connectedAccounts","Google","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","type","value","onChange","target","placeholder","required","lineHeight","from","_","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","PrimaryButton","flex","minHeight","defaultPersonaImages","platforms","name","icon","connector","description","id","offset","stopColor","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","UniversalOnboarding","onComplete","onBack","personaImages","personaImagesProp","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","connectionErrors","setConnectionErrors","connectionHealth","setConnectionHealth","healthScore","setHealthScore","handleOAuthReturn","platform","removeItem","prev","connectToPlatform","platformName","find","p","session","status","statusText","responseData","possibleKeys","oauthUrl","usedKey","keys","navigator","userAgent","innerWidth","setItem","href","hasNavigatedToOnairos","hostname","close","successFlag","errorFlag","timestamp","isRecentSignal","parseInt","handleToggle","connectedCount","values","personaNumber","Math","min","onLoad","onError","maxHeight","isConnected","isCurrentlyConnecting","hasError","isDisabled","outline","stopPropagation","handleContinue","connected","entries","_ref3","totalConnections","sdkVersion","enhancedFeatures","healthMonitoring","autoRefresh","connectionValidation","PinSetup","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","handleSubmit","pinCreated","undefined","dataTypes","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","iconProps","getIconComponent","fillRule","clipRule","autoFetch","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","selectedCount","userHash","hash","str","i","charCodeAt","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","progress","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","completionDelay","trainingComplete","simulatedTraining","clearTimeout","round","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","repeat","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","warn","getPersonalityTypes","getTraitCategories","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","zIndex","padding","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","enableTraining","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","__WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__","openOnairosOverlay","config","otherProps","Promise","resolve","reject","containerId","random","substr","container","pointerEvents","appendChild","cleanup","parentNode","ReactDOM","removeChild","handleComplete","OnairosElement","button","click","useOnairosOverlay","isOpen","setIsOpen","cleanupRef","overrideConfig","finalConfig","current","getOnairosData","Onairos","initializeApiKey"],"sourceRoot":""}