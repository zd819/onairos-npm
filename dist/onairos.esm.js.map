{"version":3,"file":"onairos.esm.js","mappings":"oIACA,IAAIA,EAAsB,CAAC,ECEZ,SAASC,EAAaC,GAA0B,IAAzB,WAAEC,EAAU,QAAEC,GAASF,EAC3D,OACEG,EAAAA,cAAA,OAAKC,UAAU,uBAAuBC,MAAO,CAAEC,OAAQ,SAErDH,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,UACEI,QAASL,EACTE,UAAU,8EAEVD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4BAM3EX,EAAAA,cAAA,OAAKC,UAAU,wDAEbD,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,OAAKC,UAAU,sEACbD,EAAAA,cAAA,OAAKC,UAAU,oBAEbD,EAAAA,cAAA,OAAKO,QAAQ,YAAYN,UAAU,iBACjCD,EAAAA,cAAA,QACEW,EAAE,oGACFN,KAAK,OACLC,OAAO,eACPI,YAAY,MAEdV,EAAAA,cAAA,UAAQY,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIT,KAAK,iBACnCL,EAAAA,cAAA,UAAQY,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIT,KAAK,iBACnCL,EAAAA,cAAA,QAAMW,EAAE,wCAAwCL,OAAO,eAAeI,YAAY,IAAIL,KAAK,aAOnGL,EAAAA,cAAA,KAAGC,UAAU,8BAA6B,cAG1CD,EAAAA,cAAA,MAAIC,UAAU,sDAAqD,WAGnED,EAAAA,cAAA,KAAGC,UAAU,kEAAiE,+FAMhFD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,UACEC,UAAU,mJACVG,QAASN,GACV,cAECE,EAAAA,cAAA,OAAKC,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aACjEP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,oBAMjF,CCjEAhB,EAAoBgB,EAAI,CAACI,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXrB,EAAoBuB,EAAEF,EAAYC,KAAStB,EAAoBuB,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EtB,EAAoBuB,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCOlF,MAKMI,EAAgBC,IACpB,MAAMC,EALY,CAACD,GAAWA,EAAOE,QACrC,wBACA,CAACC,EAAOC,EAAIC,IAAOA,EAAKA,EAAGC,cAAgBF,EAAGG,eAG5BC,CAAYR,GAC9B,OAAOC,EAAUQ,OAAO,GAAGH,cAAgBL,EAAUS,MAAM,IAEvDC,EAAe,IAAIC,IAAYA,EAAQC,OAAO,CAACzC,EAAW0C,EAAOC,IAC9DC,QAAQ5C,IAAmC,KAArBA,EAAU6C,QAAiBF,EAAMG,QAAQ9C,KAAe0C,GACpFK,KAAK,KAAKF,OACPG,EAAeC,IACnB,IAAK,MAAM1B,KAAQ0B,EACjB,GAAI1B,EAAK2B,WAAW,UAAqB,SAAT3B,GAA4B,UAATA,EACjD,OAAO,GCfb,IAAI4B,EAAoB,CACtBC,MAAO,6BACPC,MAAO,GACPnD,OAAQ,GACRI,QAAS,YACTF,KAAM,OACNC,OAAQ,eACRI,YAAa,EACbF,cAAe,QACfC,eAAgB,SCLlB,MAAM8C,EAAOC,EACX,EACEC,QAAQ,eACRC,OAAO,GACPhD,cAAc,EACdiD,sBACA1D,YAAY,GACZ2D,WACAC,cACGC,GACFC,IACMC,EACL,MACA,CACED,SACGX,EACHE,MAAOI,EACPvD,OAAQuD,EACRpD,OAAQmD,EACR/C,YAAaiD,EAA4C,GAAtBM,OAAOvD,GAAoBuD,OAAOP,GAAQhD,EAC7ET,UAAWuC,EAAa,SAAUvC,OAC9B2D,IAAaX,EAAYa,IAAS,CAAE,cAAe,WACpDA,GAEL,IACKD,EAASK,IAAI,EAAEC,EAAKC,KAAWJ,EAAcG,EAAKC,OAClDC,MAAMC,QAAQV,GAAYA,EAAW,CAACA,MC3B3CW,ECCmB,EAACC,EAAUX,KAClC,MAAMY,EAAYjB,EAChB,EAAGvD,eAAciD,GAASa,KAAQC,SAAcT,EAAM,CACpDQ,MACAF,WACA5D,UAAWuC,EACT,UJVaX,EIUSD,EAAa4C,GJVX3C,EAAOE,QAAQ,qBAAsB,SAASK,gBIWtE,UAAUoC,IACVvE,MAECiD,IJdW,IAACrB,IIkBnB,OADA4C,EAAUC,YAAc9C,EAAa4C,GAC9BC,GDfKE,CAAiB,QADZ,CAAC,CAAC,OAAQ,CAAEhE,EAAG,kBAAmBM,IAAK,aER7C2D,EAAS,CAEpBC,aAAc,UACdC,WAAY,UAGZC,SAAU,UACVC,UAAW,qBAGXC,wBAAyB,UACzBC,sBAAuB,UAGvBC,WAAY,UACZC,oBAAqB,UAGrBC,YAAa,UACbC,cAAe,UACfC,UAAW,UAGXC,OAAQ,UACRC,YAAa,UAGbC,QAAS,UACTC,MAAO,UACPC,QAAS,UACTC,KAAM,UAGNC,MAAO,sBACPC,QAAS,qBACTC,MAAO,2B,yzCChCT,MAAMC,EAAapG,IAIb,IAJc,KAClB6D,EAAO,GAAE,SACTE,EAAQ,UACR3D,EAAY,IACbJ,EACC,OACEG,EAAAA,cAAA,OACEC,UAAS,mFAAAiG,OAAqFjG,GAC9FC,MAAO,CACLoD,MAAOI,EACPvD,OAAQuD,EACRyC,aAAczC,EAAO,EACrByB,WAAY,8BAAFe,OAAgCtB,EAAOK,wBAAuB,MAAAiB,OAAKtB,EAAOM,sBAAqB,OAG1GtB,GACC5D,EAAAA,cAAA,QACEC,UAAU,2BACVC,MAAO,CACLkG,SAAU,OACV3C,MAAOmB,EAAOG,SACdsB,gBAAiB,gBAEpB,OAiIT,EAxHsBC,IAYhB,IAZiB,MACrBC,EAAQ,cAAa,QACrBnG,EAAO,UACPoG,EAAS,QACTC,GAAU,EAAK,SACfC,GAAW,EAAK,OAChBC,EAAM,UACN1G,EAAY,GAAE,MACdC,EAAQ,CAAC,EAAC,UACV0G,EAAY,CAAC,EAAC,SACdC,GAAW,GAEZP,EADIpD,E,6WAAK4D,CAAAR,EAAAS,GAER,MAAOhB,EAASiB,GAAcC,GAAS,GAMjCC,EAAWC,EAAA,CACfhH,OAAQ,OACRgG,aAAc,QACdX,OAAQ,aAAFU,OAAetB,EAAOI,WAC5BG,WAAY,8BAAFe,OAAgCtB,EAAOC,aAAY,MAAAqB,OAAKtB,EAAOE,WAAU,KACnFsC,SAAU,WACVC,SAAU,SACV/D,MAAOuD,EAAW,OAAS,OAC3BS,SAAUT,EAAW,QAAU,OAC/BU,SAAUV,EAAW,QAAU,OAC/BW,OAAQX,EAAW,SAAW,IAC9BY,OAAQf,EAAW,cAAgB,UACnCgB,QAAShB,EAAW,IAAO,EAC3BiB,UAAWjB,EAAW,OAAS,kCAC/BkB,WAAY,iBACT1H,GAGC2H,EAAsB,CAC1BT,SAAU,WACVU,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACR5B,gBAAiB,kBACjBF,aAAc,QACduB,QAAS3B,EAAU,EAAI,EACvB6B,WAAY,qBA2BRM,EAAUf,EAAA,CACdgB,WAAY,+BACZC,WAAY,MACZhC,SAAU,OACV3C,MAAOmB,EAAOG,SACdsD,UAAW,SACXhC,gBAAiB,eACdO,GAGL,OACE5G,EAAAA,cAAA,SAAAsI,EAAA,CACErI,UAAS,YAAAiG,OAAcjG,GACvBC,MAAOgH,EACP9G,QAASA,EACTmI,YAzEoBC,IAAMxB,GAAW,GA0ErCyB,UAzEkBC,IAAM1B,GAAW,GA0EnC2B,aAzEqBC,IAAM5B,GAAW,GA0EtCN,SAAUA,GAAYD,EACtB,cAAaE,EACb,aAAYJ,GACRrD,GAGJlD,EAAAA,cAAA,OAAKE,MAAO2H,IAGZ7H,EAAAA,cAAA,OAAKE,MAnDkB,CACzBkH,SAAU,WACVW,KAAM,EACNC,MAAO,EACPF,IAAK,EACLG,OAAQ,EACRY,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ1C,gBAAiB,gBA2CZI,EACCzG,EAAAA,cAAA,OACEC,UAAU,uEACVC,MAAO,CAAEoD,MAAO,OAAQnD,OAAQ,UAGlCH,EAAAA,cAAA,QAAME,MAAOgI,GAAa3B,IAK9BvG,EAAAA,cAAA,OAAKE,MAnDiB,CACxBkH,SAAU,WACVY,MAAO,MACPF,IAAK,MACLG,OAAQ,MACR3E,MAAO,OACPuF,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ1C,gBAAiB,iBA2CXI,IAAYD,GAAaxG,EAAAA,cAACiG,EAAU,UChJ/B,SAAS+C,EAASnJ,GAAyC,IAAxC,UAAEoJ,EAAS,OAAEC,EAAM,SAAEC,GAAW,GAAMtJ,EACtE,MAAOuJ,EAAOC,GAAYpC,EAAS,KAC5BqC,EAAMC,GAAWtC,EAAS,KAC1BuC,EAAMC,GAAWxC,EAAS,UAC1ByC,EAAWC,GAAgB1C,GAAS,IACpCtB,EAAOiE,GAAY3C,EAAS,IAO7B4C,EAAoBC,UAIxB,GAHAC,EAAEC,iBACFJ,EAAS,IAPYR,IACF,6BACDa,KAAKb,GAOlBc,CAAcd,GAAnB,CAKAO,GAAa,GAEb,IACE,GAAIR,EAEFgB,QAAQC,IAAI,2DAA4DhB,GACxEiB,WAAW,KACTZ,EAAQ,QACRE,GAAa,GACbQ,QAAQC,IAAI,4DACX,SACE,CAEL,MAAME,EAASC,OAAOC,eAAiB,WAEjCC,QAAiBC,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAF1E,OAAYoE,IAE7BO,KAAMC,KAAKC,UAAU,CACnB3B,QACA4B,OAAQ,cAIZ,IAAKP,EAASQ,GACZ,MAAM,IAAIC,MAAM,oCAGlB,MAAMC,QAAaV,EAASW,OAC5B,IAAKD,EAAKzF,QACR,MAAM,IAAIwF,MAAMC,EAAKxF,OAAS,oCAGhCwE,QAAQC,IAAI,6BAA8Be,GAE1C1B,EAAQ,QACRE,GAAa,EACf,CACF,CAAE,MAAOhE,GACPwE,QAAQxE,MAAM,uBAAwBA,GACtCiE,EAASjE,EAAM0F,SACf1B,GAAa,EACf,CA/CA,MAFEC,EAAS,uCAoDP0B,EAAmBxB,UACvBC,EAAEC,iBACFJ,EAAS,IACTD,GAAa,GAEb,IACE,GAAIR,EAEFgB,QAAQC,IAAI,kDAAmDhB,EAAO,aAAcE,GAEvE,WAATA,GAAqC,IAAhBA,EAAKiC,QAC5B9B,EAAQ,WACRY,WAAW,KAET,MAAMmB,EAAoB,CACxBpC,QACAqC,UAAU,EACVC,MAAO,cAAgBC,KAAKC,MAC5BC,SAAUzC,EAAM0C,MAAM,KAAK,GAC3BC,cAAc,EACdC,YAAa,KACbC,WAAW,EACXC,SAAU,aACVC,WAAW,EACXC,aAAa,EACbC,eAAgB,CACdjD,MAAOA,EACPkD,WAAW,IAAIX,MAAOY,cACtBC,aAAa,IAGjBrC,QAAQC,IAAI,8DAA+DoB,GAC3EvC,EAAUuC,IACT,OAEH5B,EAAS,kEACTD,GAAa,QAEV,CAEL,MAAMW,EAASC,OAAOC,eAAiB,WAEjCC,QAAiBC,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAF1E,OAAYoE,IAE7BO,KAAMC,KAAKC,UAAU,CACnB3B,QACA4B,OAAQ,SACR1B,WAIJ,IAAKmB,EAASQ,GACZ,MAAM,IAAIC,MAAM,6BAGlB,MAAMC,QAAaV,EAASW,OAE5B,IAAKD,EAAKzF,QACR,MAAM,IAAIwF,MAAMC,EAAKxF,OAAS,uBAGhCwE,QAAQC,IAAI,kCAAmCe,GAE/C1B,EAAQ,WACRY,WAAW,KAETpB,EAAU,CACRG,QACAqC,UAAU,EACVC,MAAOP,EAAKO,OAASP,EAAKsB,SAC1BZ,SAAUV,EAAKU,SACfE,aAAcZ,EAAKY,aACnBC,YAAab,EAAKa,YAClBC,WAAYd,EAAKY,aACjBG,SAAUf,EAAKY,aAAe,cAAgB,aAC9CI,UAAWhB,EAAKgB,UAChBC,YAAajB,EAAKiB,YAClBC,eAAgBlB,EAAKkB,kBAEtB,IACL,CACF,CAAE,MAAO1G,GACPwE,QAAQxE,MAAM,4BAA6BA,GAC3CiE,EAASjE,EAAM0F,SAAW,mCAC1B1B,GAAa,EACf,GAmPF,OACE3J,EAAAA,cAAA,OAAKC,UAAU,UACH,UAATuJ,GAjPHxJ,EAAAA,cAAA,OAAKC,UAAU,uBAAuBC,MAAO,CAAEC,OAAQ,SAErDH,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,UACEI,QAAS8I,EACTjJ,UAAU,8EAEVD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,uBAM3EX,EAAAA,cAAA,OAAKC,UAAU,wDACbD,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,MAAIC,UAAU,oEAAmE,qCAGjFD,EAAAA,cAAA,KAAGC,UAAU,2BAA0B,iCAGzCD,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,SACE0M,KAAK,QACLC,MAAOvD,EACPwD,SAAW7C,GAAMV,EAASU,EAAE8C,OAAOF,OACnCG,YAAY,mBACZ7M,UAAU,+KACVC,MAAO,CACLiI,WAAY,gCAEd4E,UAAQ,KAIZ/M,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,QAAMC,UAAU,yBAAwB,OAG1CD,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,UACE0M,KAAK,SACLzM,UAAU,+JACVC,MAAO,CACLiI,WAAY,iCAGdnI,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,aAC/BP,EAAAA,cAAA,QACEK,KAAK,UACLM,EAAE,4HAEJX,EAAAA,cAAA,QACEK,KAAK,UACLM,EAAE,0IAEJX,EAAAA,cAAA,QACEK,KAAK,UACLM,EAAE,kIAEJX,EAAAA,cAAA,QACEK,KAAK,UACLM,EAAE,yIAEA,yBAMTgF,GACC3F,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,KAAGC,UAAU,sBAAsBC,MAAO,CAAEuD,MAAOmB,EAAOe,QAAUA,KAM1E3F,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,UACEC,UAAU,uKACVG,QAASyJ,EACTnD,SAAUgD,IAAcN,EAAMtG,OAC9B5C,MAAO,CACLiI,WAAY,iCAGbuB,EAAY,aAAe,WAC5B1J,EAAAA,cAAA,OAAKC,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aACjEP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qBAwJjE,SAAT6I,GAhJHxJ,EAAAA,cAAA,OAAKC,UAAU,uBAAuBC,MAAO,CAAEC,OAAQ,SAErDH,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,MACEC,UAAU,2BACVC,MAAO,CACLiI,WAAY,uCACZC,WAAY,MACZhC,SAAU,OACV4G,WAAY,OACZvJ,MAAOmB,EAAOS,cAEjB,2BAGDrF,EAAAA,cAAA,KACEC,UAAU,iBACVC,MAAO,CACLiI,WAAY,+BACZC,WAAY,MACZhC,SAAU,OACV4G,WAAY,OACZvJ,MAAOmB,EAAOU,gBAEjB,gCAC+B8D,IAKjCD,GACCnJ,EAAAA,cAAA,OACEC,UAAU,yCACVC,MAAO,CACLmG,gBAAiB,UACjB4G,YAAa,UACbxJ,MAAO,YAGTzD,EAAAA,cAAA,KAAGC,UAAU,WAAU,+BAK3BD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,iCACZoE,MAAM6I,KAAK,CAAE3B,OAAQ,GAAK,CAAC4B,EAAGxK,IAC7B3C,EAAAA,cAAA,SACEiB,IAAK0B,EACL+J,KAAK,OACLU,UAAU,IACVT,MAAOrD,EAAK3G,IAAU,GACtBiK,SAAW7C,IACT,MAAMsD,EAAU/D,EAAKwC,MAAM,IAK3B,GAJAuB,EAAQ1K,GAASoH,EAAE8C,OAAOF,MAC1BpD,EAAQ8D,EAAQrK,KAAK,KAGjB+G,EAAE8C,OAAOF,OAAShK,EAAQ,EAAG,KAAA2K,EAC/B,MAAMC,EAAkC,QAAzBD,EAAGvD,EAAE8C,OAAOW,qBAAa,IAAAF,OAAA,EAAtBA,EAAwB1J,SAASjB,EAAQ,GACvD4K,GAAWA,EAAUvH,OAC3B,GAEFyH,UAAY1D,IAEV,GAAc,cAAVA,EAAE9I,MAAwBqI,EAAK3G,IAAUA,EAAQ,EAAG,KAAA+K,EACtD,MAAMC,EAAkC,QAAzBD,EAAG3D,EAAE8C,OAAOW,qBAAa,IAAAE,OAAA,EAAtBA,EAAwB9J,SAASjB,EAAQ,GACvDgL,GAAWA,EAAU3H,OAC3B,GAEF/F,UAAU,kIACVC,MAAO,CACL+M,YAAarI,EAAOY,OACpBa,gBAAiBzB,EAAOO,WACxBgD,WAAY,qCAQrBxC,GACC3F,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,KAAGC,UAAU,sBAAsBC,MAAO,CAAEuD,MAAOmB,EAAOe,QAAUA,IAKxE3F,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAC4N,EAAa,CACZrH,MAAM,WACNnG,QAASkL,EACT7E,QAASiD,EACThD,SAAUgD,GAA6B,IAAhBJ,EAAKiC,OAC5B5E,OAAO,wBAKX3G,EAAAA,cAAA,OAAKE,MAAO,CAAE2N,KAAM,EAAGC,UAAW,UAGlC9N,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,UACE0M,KAAK,SACLtM,QAASA,IAAMqJ,EAAQ,SACvBxJ,UAAU,yDACVC,MAAO,CAAEuD,MAAOmB,EAAOU,gBACxB,2BAoCO,YAATkE,GA5BHxJ,EAAAA,cAAA,OAAKC,UAAU,+CACbD,EAAAA,cAAA,OACEC,UAAU,0DACVC,MAAO,CAAEmG,gBAAiB,YAE1BrG,EAAAA,cAACuE,EAAK,CAACtE,UAAU,UAAUC,MAAO,CAAEuD,MAAOmB,EAAOc,YAGpD1F,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,MACEC,UAAU,wBACVC,MAAO,CAAEuD,MAAOmB,EAAOS,cACxB,mBAGDrF,EAAAA,cAAA,KAAGE,MAAO,CAAEuD,MAAOmB,EAAOU,gBAAiB,+BAG7CtF,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,OAAKC,UAAU,sFAYvB,C,s/BC3ZA,MAAM8N,EAAY,CAChB,CACEC,KAAM,SACNC,KACEjO,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,aAC/BP,EAAAA,cAAA,QAAMK,KAAK,UAAUM,EAAE,4HACvBX,EAAAA,cAAA,QAAMK,KAAK,UAAUM,EAAE,0IACvBX,EAAAA,cAAA,QAAMK,KAAK,UAAUM,EAAE,kIACvBX,EAAAA,cAAA,QAAMK,KAAK,UAAUM,EAAE,yIAG3B8C,MAAO,WACPyK,UAAW,QACXC,YAAa,uGAEf,CACEH,KAAM,SACNC,KACEjO,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,YAAYF,KAAK,WAChDL,EAAAA,cAAA,QAAMW,EAAE,+jCAGZ8C,MAAO,WACPyK,UAAW,SACXC,YAAa,gFAEf,CACEH,KAAM,YACNC,KACEjO,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,aAC/BP,EAAAA,cAAA,YACEA,EAAAA,cAAA,kBAAgBoO,GAAG,qBAAqBxN,GAAG,MAAMC,GAAG,IAAIC,EAAE,KACxDd,EAAAA,cAAA,QAAMqO,OAAO,KAAKC,UAAU,YAC5BtO,EAAAA,cAAA,QAAMqO,OAAO,MAAMC,UAAU,YAC7BtO,EAAAA,cAAA,QAAMqO,OAAO,OAAOC,UAAU,cAGlCtO,EAAAA,cAAA,QAAMK,KAAK,2BAA2BM,EAAE,ujCAG5C8C,MAAO,WACPyK,UAAW,YACXC,YAAa,gFAEf,CACEH,KAAM,WACNC,KACEjO,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,YAAYF,KAAK,WAChDL,EAAAA,cAAA,QAAMW,EAAE,wfAGZ8C,MAAO,WACPyK,UAAW,WACXC,YAAa,iFAKXI,EAAY,CAChBjE,OAAQkE,QAAQC,IAAIC,2BAA6B,gCACjDC,QAASH,QAAQC,IAAIG,4BAA8B,0BACnDC,QAAS,MACTC,wBAAwB,EACxBC,mBAAmB,EACnBC,4BAA4B,GAOf,SAASC,EAAmBpP,GAAmD,IAAlD,WAAEqP,EAAU,OAAEhG,EAAM,QAAEiG,EAAO,QAAEC,EAAU,OAAOvP,EAC1F,MAAOwP,EAAmBC,GAAwBrI,EAAS,CAAC,IACrDsI,EAAcC,GAAmBvI,GAAS,IAC1CwI,EAAoBC,GAAyBzI,EAAS,OACtD0I,EAAkBC,GAAuB3I,EAAS,CAAC,IACnD4I,EAAkBC,GAAuB7I,EAAS,CAAC,IACnD8I,EAAaC,GAAkB/I,EAAS,GAS/CgJ,EAAU,KACkBC,MACxB,MAAMC,EAAWC,aAAaC,QAAQ,0BAClCF,IACFhG,QAAQC,IAAI,iCAADlE,OAAkCiK,IAG7CC,aAAaE,WAAW,0BACxBF,aAAaE,WAAW,wBAGxBhB,EAAqBiB,GAAIpJ,EAAAA,EAAA,GACpBoJ,GAAI,IACP,CAACJ,IAAW,KAIdP,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACJ,GAAW,QAGdhG,QAAQC,IAAI,KAADlE,OAAMiK,EAAQ,6CAI7BD,IACC,IAEH,MAAMM,EAAoB1G,UACxBK,QAAQC,IAAI,oCAADlE,OAAqCuK,IAEhD,MAAMN,EAAWpC,EAAU2C,KAAKC,GAAKA,EAAE3C,OAASyC,GAChD,GAAKN,UAAAA,EAAUjC,UAEb,OADA/D,QAAQxE,MAAM,sCAADO,OAAuCuK,KAC7C,EAGT,IAAI,IAAAG,EACFpB,GAAgB,GAChBE,EAAsBe,GAGtBb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,QAGlBtG,QAAQC,IAAI,oCAADlE,OAAqCuK,EAAY,QAE5D,MAAMI,EAAWT,aAAaC,QAAQ,cAAkD,QAAvCO,EAAIR,aAAaC,QAAQ,sBAAc,IAAAO,OAAA,EAAnCA,EAAqCxH,QAAS,mBAG7F0H,EAAe,GAAH5K,OAAMqI,EAAUI,QAAO,KAAAzI,OAAIiK,EAASjC,UAAS,cAEzDzD,QAAiBC,MAAMoG,EAAc,CACzCnG,OAAQ,OACRC,QAAS,CACP,YAAa2D,EAAUjE,OACvB,eAAgB,oBAElBO,KAAMC,KAAKC,UAAU,CACnBgG,QAAS,CACPF,SAAUA,OAKhB,IAAKpG,EAASQ,GACZ,MAAM,IAAIC,MAAM,QAADhF,OAASuE,EAASuG,OAAM,MAAA9K,OAAKuE,EAASwG,aAGhD,MAAMC,QAAqBzG,EAASW,OAC1CjB,QAAQC,IAAI,MAADlE,OAAOuK,EAAY,oBAAoBS,GAGlD,MAWMC,EAXkB,CACtB,QAAW,CAAC,aAAc,aAAc,eACxC,SAAY,CAAC,cAAe,cAAe,gBAC3C,OAAU,CAAC,YAAa,YAAa,cACrC,UAAa,CAAC,eAAgB,eAAgB,iBAC9C,UAAa,CAAC,eAAgB,eAAgB,iBAC9C,OAAU,CAAC,YAAa,YAAa,cACrC,SAAY,CAAC,cAAe,cAAe,gBAC3C,MAAS,CAAC,WAAY,WAAY,cAGChB,EAASjC,YAAc,CAAC,GAADhI,OACvDiK,EAASjC,UAAS,UAAAhI,OAClBiK,EAASjC,UAAS,UAAAhI,OAClBiK,EAASjC,UAAS,QACrB,cACA,UACA,OAGF,IAAIkD,EAAW,KACXC,EAAU,KAGd,IAAK,MAAMpQ,KAAOkQ,EAChB,GAAID,EAAajQ,GAAM,CACrBmQ,EAAWF,EAAajQ,GACxBoQ,EAAUpQ,EACV,KACF,CAGF,IAAKmQ,EAKH,MAJAjH,QAAQxE,MAAM,4BAADO,OAA6BuK,EAAY,MACtDtG,QAAQxE,MAAM,mBAAoBwL,GAClChH,QAAQxE,MAAM,iBAAkBxE,OAAOmQ,KAAKJ,IAC5C/G,QAAQxE,MAAM,iBAAkBuL,GAC1B,IAAIhG,MAAM,qDAADhF,OAAsDiL,EAAanO,KAAK,QAK1F,GAFCmH,QAAQC,IAAI,yBAADlE,OAA0BuK,EAAY,gBAAAvK,OAAemL,IAzH5D,iEAAiEpH,KAAKsH,UAAUC,YAC/EjH,OAAOkH,YAAc,IA+HzB,OAHArB,aAAasB,QAAQ,yBAA0BjB,GAC/CL,aAAasB,QAAQ,uBAAwBnH,OAAOoH,SAASC,MAC7DrH,OAAOoH,SAASC,KAAOR,GAChB,EACF,CAEL,MAAMS,EAAQtH,OAAOuH,KACnBV,EAAQ,GAAAlL,OACLiK,EAASjC,UAAS,UACrB,iGAGF,IAAK2D,EACH,MAAM,IAAI3G,MAAM,qDAIjB,IAAI6G,GAAwB,EAC5B,MAAMC,EAAgBC,YAAY,KAChC,IAEE,GAAIJ,EAAMF,UAAwC,eAA5BE,EAAMF,SAASO,SAMnC,OALAH,GAAwB,EACxB5H,QAAQC,IAAI,MAADlE,OAAOuK,EAAY,8DAG9BoB,EAAMM,OAGV,CAAE,MAAOpI,GAGFgI,IACHA,GAAwB,EACxB5H,QAAQC,IAAI,MAADlE,OAAOuK,EAAY,2DAElC,CAEA,IAEE,GAAIoB,EAAMO,OAAQ,CAChBC,cAAcL,GAGd,MAAMM,EAAclC,aAAaC,QAAQ,WAADnK,OAAYuK,EAAY,aAC1D8B,EAAYnC,aAAaC,QAAQ,WAADnK,OAAYuK,EAAY,WACxD+B,EAAYpC,aAAaC,QAAQ,WAADnK,OAAYuK,EAAY,eAGxDgC,EAAiBD,GAAc7G,KAAKC,MAAQ8G,SAASF,GAAa,IAEpEF,GAAeG,GAEjBtI,QAAQC,IAAI,KAADlE,OAAMuK,EAAY,kDAC7BL,aAAaE,WAAW,WAADpK,OAAYuK,EAAY,aAC/CL,aAAaE,WAAW,WAADpK,OAAYuK,EAAY,eAE/CnB,EAAqBiB,GAAIpJ,EAAAA,EAAA,GACpBoJ,GAAI,IACP,CAACE,IAAe,KAElBb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,SAGT8B,GAAaE,GAEtBtI,QAAQC,IAAI,KAADlE,OAAMuK,EAAY,kBAAkB8B,GAC/CnC,aAAaE,WAAW,WAADpK,OAAYuK,EAAY,WAC/CL,aAAaE,WAAW,WAADpK,OAAYuK,EAAY,eAE/Cb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe8B,MAGTR,GAET5H,QAAQC,IAAI,KAADlE,OAAMuK,EAAY,uDAC7BnB,EAAqBiB,GAAIpJ,EAAAA,EAAA,GACpBoJ,GAAI,IACP,CAACE,IAAe,KAElBb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,UAKlBtG,QAAQC,IAAI,MAADlE,OAAOuK,EAAY,oCAC9Bb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,+BAIpBjB,GAAgB,GAChBE,EAAsB,KACxB,CACF,CAAE,MAAO/J,GAEP,GAED,KAgCJ,OA7BC0E,WAAW,KACT,KACOwH,EAAMO,QAAUP,EAAMF,UAAwC,eAA5BE,EAAMF,SAASO,WACpD/H,QAAQC,IAAI,mBAADlE,OAAoBuK,EAAY,0CAC3CoB,EAAMM,QAEV,CAAE,MAAOpI,IAEF8H,EAAMO,QAAUL,IACnB5H,QAAQC,IAAI,mBAADlE,OAAoBuK,EAAY,6CAC3CoB,EAAMM,QAEV,GACC,KAGH9H,WAAW,KACJwH,EAAMO,SACTP,EAAMM,QACNE,cAAcL,GACdpC,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,wBAElBjB,GAAgB,GAChBE,EAAsB,QAEvB,MAEG,CACT,CACF,CAAE,MAAO/J,GAQP,OAPAwE,QAAQxE,MAAM,yBAADO,OAA0BuK,EAAY,KAAK9K,GACxDiK,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe9K,EAAM0F,WAExBmE,GAAgB,GAChBE,EAAsB,OACf,CACT,GAGIiD,EAAe7I,UAGnB,GAFAK,QAAQC,IAAI,sBAADlE,OAAuBuK,IAE9BlB,GAAgBE,IAAuBgB,EAEzC,YADAtG,QAAQC,IAAI,4BAADlE,OAA6BuJ,EAAkB,wBAAAvJ,OAAuBuK,IAI/DpB,EAAkBoB,IAIpCtG,QAAQC,IAAI,yBAADlE,OAA0BuK,EAAY,QACjDnB,EAAqBiB,GAAIpJ,EAAAA,EAAA,GACpBoJ,GAAI,IACP,CAACE,IAAe,KAElBb,EAAoBW,GAAIpJ,EAAAA,EAAA,GACnBoJ,GAAI,IACP,CAACE,GAAe,eAIZD,EAAkBC,IAuBLtP,OAAOyR,OAAOvD,GAAmB3M,OAAOG,SAAS0I,OAExE,OACEvL,EAAAA,cAAA,OAAKC,UAAU,8BAA8BC,MAAO,CAAEC,OAAQ,OAAQ2N,UAAW,IAE/E9N,EAAAA,cAAA,OAAKC,UAAU,4BAA4BC,MAAO,CAAE4N,UAAW,EAAGzG,SAAU,WAC1ErH,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,MAAIC,UAAU,oEAAmE,oBACjFD,EAAAA,cAAA,KAAGC,UAAU,2BAA0B,8CAGzCD,EAAAA,cAAA,OAAKC,UAAU,0CACbD,EAAAA,cAAA,OAAKC,UAAU,kCAAkCC,MAAO,CACtDiF,WAAY,qEAKhBnF,EAAAA,cAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAAE4N,UAAW,IAC1D9N,EAAAA,cAAA,OAAKC,UAAU,kBACZ8N,EAAU7J,IAAKiM,IACd,MAAM0C,EAAcxD,EAAkBc,EAASnC,QAAS,EAClD8E,EAAwBrD,IAAuBU,EAASnC,KACxD+E,EAAWpD,EAAiBQ,EAASnC,MACrCgF,EAAazD,IAAiBuD,EAEpC,OACE9S,EAAAA,cAAA,OACEiB,IAAKkP,EAASnC,KACd/N,UAAU,2EACVC,MAAO,CACLmG,gBAAiB,UACjBb,OAAQ,OACRyN,QAAS,QAEX7S,QAASA,KAAO4S,GAAcL,EAAaxC,EAASnC,OAEpDhO,EAAAA,cAAA,OAAKC,UAAU,yGACZ6S,EACC9S,EAAAA,cAAA,OAAKC,UAAU,oFAEfkQ,EAASlC,MAGbjO,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,MACEC,UAAU,mBACVC,MAAO,CACLmG,gBAAiB,qBACjB5C,MAAO,qBACP+B,OAAQ,OACRyN,QAAS,SAGV9C,EAASnC,MAEZhO,EAAAA,cAAA,KACEC,UAAU,0BACVC,MAAO,CACLmG,gBAAiB,qBACjB5C,MAAO,qBACP+B,OAAQ,OACRyN,QAAS,SAGV9C,EAAShC,aAIX4E,GACC/S,EAAAA,cAAA,KAAGC,UAAU,6BACV8S,IAIP/S,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OACEI,QAAU2J,IACRA,EAAEmJ,kBACGF,GAAYL,EAAaxC,EAASnC,OAEzC/N,UAAS,4FAAAiG,OACP2M,EAAc,eAAiB,cAAa,KAAA3M,OAC1C8M,EAAa,gCAAkC,mBAEnDhT,EAAAA,cAAA,QACEC,UAAS,uFAAAiG,OACP2M,EAAc,gBAAkB,6BAapD7S,EAAAA,cAAA,OAAKC,UAAU,yCAAyCC,MAAO,CAAE4N,UAAW,SAC1E9N,EAAAA,cAAA,OACEC,UAAU,kKACVG,QA1He+S,KACrB,MAAMC,EAAYjS,OAAOkS,QAAQhE,GAC9B3M,OAAO4D,IAAA,IAAE6J,EAAU0C,GAAYvM,EAAA,OAAKuM,IACpC3O,IAAIoP,IAAA,IAAEnD,GAASmD,EAAA,OAAKnD,IAEvBjB,EAAW,CACTG,kBAAmB+D,EACnBG,iBAAkBH,EAAU7H,OAC5BwE,YAAaA,EACbF,iBAAkBA,EAClB2D,WAAY,QACZC,iBAAkB,CAChBC,iBAAkBnF,EAAUO,uBAC5B6E,YAAapF,EAAUQ,kBACvB6E,qBAAsBrF,EAAUS,gCA6G/B,SAEChP,EAAAA,cAAA,OAAKC,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aACjEP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mBAGzEX,EAAAA,cAAA,OACEI,QAASA,IAAM8O,EAAW,CAAEG,kBAAmB,GAAIkE,iBAAkB,IACrEtT,UAAU,oHACX,SAMT,CC1gBe,SAAS4T,EAAQhU,GAAoC,IAAnC,WAAEqP,EAAU,OAAEhG,EAAM,UAAE4K,GAAWjU,EAChE,MAAOkU,EAAKC,GAAU/M,EAAS,KACxBgN,EAAiBC,GAAsBjN,EAAS,CACrDsE,QAAQ,EACR4I,WAAW,EACXC,QAAQ,IAIVnE,EAAU,KACRiE,EAAmB,CACjB3I,OAAQwI,EAAIxI,QAAU,EACtB4I,UAAW,QAAQlK,KAAK8J,GACxBK,OAAQ,KAAKnK,KAAK8J,MAEnB,CAACA,IAEJ,MAAMM,EAAqBJ,EAAgB1I,QAAU0I,EAAgBE,WAAaF,EAAgBG,OAYlG,OACEpU,EAAAA,cAAA,OAAKC,UAAU,8BAA8BC,MAAO,CAAEC,OAAQ,OAAQ2N,UAAW,IAE/E9N,EAAAA,cAAA,OAAKC,UAAU,4BAA4BC,MAAO,CAAE4N,UAAW,EAAGzG,SAAU,WAC1ErH,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,MAAIC,UAAU,yCAAwC,gBACtDD,EAAAA,cAAA,KAAGC,UAAU,2BAA0B,mDAGzCD,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,SACE0M,KAAK,WACLC,MAAOoH,EACPnH,SAAW7C,GAAMiK,EAAOjK,EAAE8C,OAAOF,OACjC1M,UAAU,2IACV6M,YAAY,iBACZM,UAAW,MAKfpN,EAAAA,cAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAAE4N,UAAW,IAC1D9N,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,KAAGC,UAAU,kCAAiC,kBAC9CD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,OACEC,UAAS,iCAAAiG,OAAmC+N,EAAgB1I,OAAS,gCAAkC,6BAEtG0I,EAAgB1I,QACfvL,EAAAA,cAAA,OAAKC,UAAU,2BAA2BI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAClFP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qBAI3EX,EAAAA,cAAA,QAAMC,UAAU,iBAAgB,wCAElCD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,OACEC,UAAS,iCAAAiG,OAAmC+N,EAAgBE,UAAY,gCAAkC,6BAEzGF,EAAgBE,WACfnU,EAAAA,cAAA,OAAKC,UAAU,2BAA2BI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAClFP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qBAI3EX,EAAAA,cAAA,QAAMC,UAAU,iBAAgB,iCAElCD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,OACEC,UAAS,iCAAAiG,OAAmC+N,EAAgBG,OAAS,gCAAkC,6BAEtGH,EAAgBG,QACfpU,EAAAA,cAAA,OAAKC,UAAU,2BAA2BI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAClFP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qBAI3EX,EAAAA,cAAA,QAAMC,UAAU,iBAAgB,0BAQ1CD,EAAAA,cAAA,OAAKC,UAAU,yCAAyCC,MAAO,CAAE4N,UAAW,SAC1E9N,EAAAA,cAAA,OACEC,UAAS,0HAAAiG,OACPmO,EAAqB,2CAA6C,0BAEpEjU,QAlFakU,KACfD,GACFnF,EAAW,CACT6E,IAAKA,EACLQ,YAAY,EACZ/B,WAAW,IAAI7G,MAAOY,kBA8ErB,WAECvM,EAAAA,cAAA,OAAKC,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aACjEP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,oBAMjF,C,8sCC7GA,MAAM6T,EAAY,CAChB,CACEpG,GAAI,QACJJ,KAAM,gBACNG,YAAa,yEACbF,KAAM,OACNlB,UAAU,EACV0H,QAAS,sHACTC,YAAa,yCAEf,CACEtG,GAAI,cACJJ,KAAM,mBACNG,YAAa,6DACbF,KAAM,UACNlB,UAAU,EACV0H,QAAS,mGACTC,YAAa,+CAEf,CACEtG,GAAI,cACJJ,KAAM,qBACNG,YAAa,qEACbF,KAAM,QACNlB,UAAU,EACV0H,QAAS,gIACTC,YAAa,gDAKXC,EAAiB9U,IAA+C,IAA9C,SAAE+U,EAAQ,UAAEC,EAAS,SAAEC,EAAQ,OAAEC,GAAQlV,EAiC/D,OACEG,EAAAA,cAAA,OAAKC,UAAU,+DACbD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,OAAKC,UAAU,uEA9BKuE,KACxB,MAAMwQ,EAAY,CAAE/U,UAAW,yBAE/B,OAAQuE,GACN,IAAK,OACH,OACExE,EAAAA,cAAA,MAAAsI,EAAA,GAAS0M,EAAS,CAAE3U,KAAK,OAAOC,OAAO,eAAeC,QAAQ,cAC5DP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yEAG3E,IAAK,UACH,OACEX,EAAAA,cAAA,MAAAsI,EAAA,GAAS0M,EAAS,CAAE3U,KAAK,OAAOC,OAAO,eAAeC,QAAQ,cAC5DP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0QAG3E,IAAK,QACH,OACEX,EAAAA,cAAA,MAAAsI,EAAA,GAAS0M,EAAS,CAAE3U,KAAK,OAAOC,OAAO,eAAeC,QAAQ,cAC5DP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sNAG3E,QACE,OAAOX,EAAAA,cAAA,QAAMC,UAAU,WAAWuE,KAQ/ByQ,CAAiBL,EAAS3G,OAE7BjO,EAAAA,cAAA,QAAMC,UAAU,6BAA6B2U,EAAS5G,OAExDhO,EAAAA,cAAA,OACEI,QAzCeuS,KACfiC,EAAS7H,UACb+H,EAASF,EAASxG,IAAKyG,IAwCnB5U,UAAS,8FAAAiG,OACP2O,EAAY,8BAAgC,6BAG7CA,GACC7U,EAAAA,cAAA,OAAKC,UAAU,qBAAqBI,KAAK,eAAeE,QAAQ,aAC9DP,EAAAA,cAAA,QACEkV,SAAS,UACTvU,EAAE,qHACFwU,SAAS,gBA4TvB,EAnToB7O,IAQd,IARe,UACnBwN,EAAY,mBAAkB,SAC9B3K,GAAW,EAAI,WACf+F,EAAU,UACVkG,GAAY,EAAI,QAChBhG,EAAU,WAAU,eACpBiG,GAAiB,EAAK,eACtBC,EAAiB,UAClBhP,EACC,MAAOiP,EAAcC,GAAmBvO,EAAS,CAC/CwO,OAAO,EACPC,aAAa,EACbC,aAAa,KAERC,EAAcC,GAAmB5O,GAAS,IAC1C6O,EAAUC,GAAe9O,EAAS,MAEnC+O,EAAmBA,CAACC,EAAQC,KAChC,MAAMtB,EAAWJ,EAAU9D,KAAKyF,GAAMA,EAAG/H,KAAO6H,GAC5CrB,SAAAA,EAAU7H,UAEdyI,EAAgBjF,GAAIpJ,EAAAA,EAAA,GACfoJ,GAAI,IACP,CAAC0F,GAASC,MA0MRE,EAAgBjV,OAAOyR,OAAO2C,GAAc7S,OAAOG,SAAS0I,OAElE,OACEvL,EAAAA,cAAA,OAAKC,UAAU,+BAEbD,EAAAA,cAAA,OAAKC,UAAU,0CAEbD,EAAAA,cAAA,OAAKC,UAAU,6DACbD,EAAAA,cAAA,OAAKC,UAAU,oGACbD,EAAAA,cAAA,OAAKC,UAAU,UAAUM,QAAQ,YAAYF,KAAK,QAChDL,EAAAA,cAAA,QACEW,EAAE,qFACFN,KAAK,UAEPL,EAAAA,cAAA,QACEW,EAAE,iIACFN,KAAK,YAIXL,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,kBAEvEX,EAAAA,cAAA,OAAKC,UAAU,oGACbD,EAAAA,cAAA,QAAMC,UAAU,4CAA2C,OAK/DD,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,MAAIC,UAAU,oEAAmE,8CAGjFD,EAAAA,cAAA,KAAGC,UAAU,2BAA0B,0BAIzCD,EAAAA,cAAA,OAAKC,UAAU,0BACbD,EAAAA,cAAA,OAAKC,UAAU,kBACZuU,EAAUtQ,IAAI,CAAC0Q,EAAUjS,IACxB3C,EAAAA,cAAC2U,EAAc,CACb1T,IAAK2T,EAASxG,GACdwG,SAAUA,EACVC,UAAWU,EAAaX,EAASxG,IACjC0G,SAAUkB,EACVjB,OAAQpS,IAAU6R,EAAUjJ,OAAS,QAQ/CvL,EAAAA,cAAA,OAAKC,UAAU,0CACbD,EAAAA,cAAA,OACEC,UAAU,kKACVG,QAnPc0J,UACpBK,QAAQC,IAAI,wCACZD,QAAQC,IAAI,8CAA+C8E,GAC3D/E,QAAQC,IAAI,gCAAiCmL,GAC7CpL,QAAQC,IAAI,iCAAkCgM,GAE9CP,GAAgB,GAChBE,EAAY,MAEZ,IACE,MAAMM,EArBgBjN,KACxB,IAAIkN,EAAO,EACX,MAAMC,EAAMnN,EAAQuC,KAAKC,MAAM4K,WAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIhL,OAAQkL,IAE9BH,GAASA,GAAQ,GAAKA,EADTC,EAAIG,WAAWD,GAE5BH,GAAcA,EAEhB,MAAO,QAAPpQ,OAAeyQ,KAAKC,IAAIN,GAAME,SAAS,MAapBK,CAAiB/C,GAG5BgD,EAAe3V,OAAOkS,QAAQkC,GACjC7S,OAAO4Q,IAAA,IAAErS,EAAK0L,GAAM2G,EAAA,OAAK3G,IACzBzI,IAAI6S,IAAA,IAAE9V,GAAI8V,EAAA,OAAK9V,IAEZ+V,EAA+BF,IACnC,MAAMG,EAAgB,GAChBC,GAAc,IAAIvL,MAAOY,cAEzB4K,EAAkB,CACtB,MAAS,SACT,YAAe,QACf,YAAe,UAYjB,OATAL,EAAaM,QAAQxC,IACfuC,EAAgBvC,IAClBqC,EAAcI,KAAK,CACjBlM,KAAMgM,EAAgBvC,GACtB0C,KAAMJ,MAKLD,GAGHM,EAAcpO,EAChB,wCACA,0CAEEqO,EAAa,CACjBnB,WACAjH,UACA0H,eACAW,OAAQF,EACRpO,WACAqJ,WAAW,IAAI7G,MAAOY,eAGxB,GAAI6I,EACF,GAAIjM,EAEFgB,QAAQC,IAAI,sDAAuD0M,GAEnEzM,WAAW,KACT,MAAMqN,EAAmB,CACvBhS,SAAS,EACT2F,QAAS,sCACTF,KAAM,CACJwM,kBAAmB,CACjBC,SAAU,IACVC,kBAAmB,IACnBC,aAAc,IACdC,cAAe,IACfC,YAAa,KAEfC,SAAU,CACR,2DACA,0DACA,8CAEFC,cAAepB,EACftE,WAAW,IAAI7G,MAAOY,cACtBpD,UAAU,IAIRgP,EAAMhR,EAAAA,EAAA,GACPqQ,GAAU,IACbY,YAAaV,EACbhS,SAAS,EACT2S,WAAW,IAGbxC,GAAgB,GAChB1L,QAAQC,IAAI,kDAAmD+N,GAC/DhO,QAAQC,IAAI,mDAAoD8E,GAC5DA,GAAoC,mBAAfA,GACvBA,EAAWiJ,GACXhO,QAAQC,IAAI,+DAEZD,QAAQxE,MAAM,6EAEf,WAGH,IACE,MAAMsR,EAAgBD,EAA4BF,GAE5CwB,EAAc,CAClBxB,eACAhD,YACA1E,UACA6H,iBAGF9M,QAAQC,IAAI,sCAAuCmN,GACnDpN,QAAQC,IAAI,mBAAoBkO,GAEhC,MAAMF,QAAoB1N,MAAM6M,EAAa,CAC3C5M,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUuN,KAGvB,IAAKF,EAAYnN,GACf,MAAM,IAAIC,MAAM,kCAADhF,OAAmCkS,EAAYpH,SAGhE,MAAMuH,QAAgBH,EAAYhN,OAClCjB,QAAQC,IAAI,mBAAoBmO,GAEhC,MAAMJ,EAAMhR,EAAAA,EAAA,GACPqQ,GAAU,IACbY,YAAaG,EACb7S,SAAS,IAGXmQ,GAAgB,GAChB1L,QAAQC,IAAI,kDAAmD+N,GAC/DhO,QAAQC,IAAI,mDAAoD8E,GAC5DA,GAAoC,mBAAfA,GACvBA,EAAWiJ,GACXhO,QAAQC,IAAI,mDAEZD,QAAQxE,MAAM,+DAGlB,CAAE,MAAOmQ,GACP3L,QAAQxE,MAAM,gBAAiBmQ,GAC/BC,EAAYD,EAASzK,SACrBwK,GAAgB,GAEhB,MAAM2C,EAAWrR,EAAAA,EAAA,GACZqQ,GAAU,IACbY,YAAa,KACbzS,MAAOmQ,EAASzK,QAChB3F,SAAS,IAGXwJ,EAAWsJ,EACb,MAGF3C,GAAgB,GAChB1L,QAAQC,IAAI,4EACZD,QAAQC,IAAI,mDAAoD8E,GAC5DA,GAAoC,mBAAfA,GACvBA,EAAWsI,GACXrN,QAAQC,IAAI,yEAEZD,QAAQxE,MAAM,qFAGpB,CAAE,MAAOA,GACPwE,QAAQxE,MAAM,wBAAyBA,GACvCoQ,EAAYpQ,EAAM0F,SAClBwK,GAAgB,GAEZ3G,GACFA,EAAW,CACTvJ,MAAOA,EAAM0F,QACb3F,SAAS,EACToO,YACA1E,UACAjG,YAGN,GA6DMzC,SAAUkP,GAAkC,IAAlBQ,GAEzBR,EAAe,gBAAkB,oBAClC5V,EAAAA,cAAA,OAAKC,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aACjEP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mBAGzEX,EAAAA,cAAA,OACEI,QAASA,IAAM8O,EAAW,CAAEuJ,WAAW,IACvCxY,UAAU,2IACX,WAKA6V,GACC9V,EAAAA,cAAA,OAAKC,UAAU,gFACbD,EAAAA,cAAA,KAAGC,UAAU,WAAW6V,OCxYrB,SAAS4C,EAAiB7Y,GAA8D,IAAA8Y,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA7D,WAAE7J,EAAU,UAAE4E,EAAS,QAAE1E,EAAU,MAAK,SAAEjG,GAAW,GAAMtJ,EACnG,MAAOmZ,EAAaC,GAAkBhS,EAAS,IACxCiS,EAAUC,GAAelS,EAAS,IAClCmS,EAAYC,GAAiBpS,GAAS,GAEvCqS,EAAQ,CACZ,CACEC,MAAO,8BACPpL,YAAa,sCACbF,KAAM,KACNuL,SAAUrQ,EAAW,IAAM,KAE7B,CACEoQ,MAAO,8BACPpL,YAAa,uCACbF,KAAM,KACNuL,SAAUrQ,EAAW,IAAM,MAE7B,CACEoQ,MAAO,sBACPpL,YAAa,sCACbF,KAAM,KACNuL,SAAUrQ,EAAW,IAAM,KAE7B,CACEoQ,MAAO,mBACPpL,YAAa,oCACbF,KAAM,IACNuL,SAAUrQ,EAAW,IAAM,MAoD/B,OAhDA8G,EAAU,KACR,IAAIwJ,EACAC,EAEJ,GAAIV,EAAcM,EAAM/N,OAAQ,CAC9B,MAAMoO,EAAeL,EAAMN,GAAaQ,SAClCI,EAAe,IAAMN,EAAM/N,OAGjCkO,EAAWxH,YAAY,KACrBkH,EAAY5I,IACV,MAAMsJ,EAActJ,EAAQqJ,GAAgBD,EAAe,KAC3D,OAAOhD,KAAKmD,IAAID,GAAcb,EAAc,GAAKY,MAElD,KAGHF,EAAcrP,WAAW,KACvB,GAAI2O,EAAcM,EAAM/N,OAAS,EAC/B0N,EAAe1I,GAAQA,EAAO,OACzB,CACL8I,GAAc,GACd,MAAMU,EAAkB5Q,EAAW,IAAM,IAErCA,GACFgB,QAAQC,IAAI,+CAGdC,WAAW,KACT6E,EAAW,CACT8K,kBAAkB,EAClBxH,WAAW,IAAI7G,MAAOY,cACtBuH,UAAWA,EACX1E,QAASA,EACTjG,SAAUA,EACV8Q,kBAAmB9Q,KAEpB4Q,EACL,GACCJ,EACL,CAEA,MAAO,KACDF,GAAUpH,cAAcoH,GACxBC,GAAaQ,aAAaR,KAE/B,CAACV,EAAa9J,EAAY4E,EAAW1E,IAGtCpP,EAAAA,cAAA,OAAKC,UAAU,+CACbD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,OACEC,UAAU,uEACVC,MAAO,CACLiF,WAAY,2BAAFe,OAA6BtB,EAAOiB,KAAI,gBAGpD7F,EAAAA,cAAA,OAAKC,UAAU,YACZmZ,EAAa,KAAyB,QAArBT,EAAGW,EAAMN,UAAY,IAAAL,OAAA,EAAlBA,EAAoB1K,OAG7CjO,EAAAA,cAAA,MACEC,UAAU,0BACVC,MAAO,CAAEuD,MAAOmB,EAAOS,cAEtB+T,EAAa,WAA+B,QAArBR,EAAGU,EAAMN,UAAY,IAAAJ,OAAA,EAAlBA,EAAoBW,OAEjDvZ,EAAAA,cAAA,KAAGE,MAAO,CAAEuD,MAAOmB,EAAOU,gBACvB8T,EACG,mCACkB,QADgBP,EAClCS,EAAMN,UAAY,IAAAH,OAAA,EAAlBA,EAAoB1K,cAM5BnO,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,OACEC,UAAU,oCACVC,MAAO,CAAEuD,MAAOmB,EAAOU,gBAEvBtF,EAAAA,cAAA,YAAM,YACNA,EAAAA,cAAA,YAAO2W,KAAKwD,MAAMjB,GAAU,MAE9BlZ,EAAAA,cAAA,OACEC,UAAU,0BACVC,MAAO,CAAEmG,gBAAiBzB,EAAOa,cAEjCzF,EAAAA,cAAA,OACEC,UAAU,wDACVC,MAAO,CACLoD,MAAO,GAAF4C,OAAKgT,EAAQ,KAClB/T,WAAY,0BAAFe,OAA4BtB,EAAOiB,KAAI,mBAOzD7F,EAAAA,cAAA,OAAKC,UAAU,iCACZqZ,EAAMpV,IAAI,CAACiJ,EAAGxK,IACb3C,EAAAA,cAAA,OACEiB,IAAK0B,EACL1C,UAAU,mDACVC,MAAO,CACLmG,gBAAiB1D,GAASqW,EAAcpU,EAAOiB,KAAOjB,EAAOY,YAOrExF,EAAAA,cAAA,OACEC,UAAU,wBACVC,MAAO,CAAEmG,gBAAiBzB,EAAOQ,sBAEjCpF,EAAAA,cAAA,OAAKC,UAAU,+BACbD,EAAAA,cAAA,OACEC,UAAU,wDACVC,MAAO,CAAEmG,gBAAiB,YAE1BrG,EAAAA,cAAA,OAAKC,UAAU,WACZmZ,EAAa,IAAwB,QAArBN,EAAGQ,EAAMN,UAAY,IAAAF,OAAA,EAAlBA,EAAoB7K,OAG5CjO,EAAAA,cAAA,WACEA,EAAAA,cAAA,MACEC,UAAU,cACVC,MAAO,CAAEuD,MAAOmB,EAAOS,cAEtB+T,EAAa,oBAAsB,QAAHlT,OAAW8S,EAAc,EAAC,QAAA9S,OAAOoT,EAAM/N,SAE1EvL,EAAAA,cAAA,KACEC,UAAU,UACVC,MAAO,CAAEuD,MAAOmB,EAAOU,gBAEtB8T,EACG,mCACkB,QADgBL,EAClCO,EAAMN,UAAY,IAAAD,OAAA,EAAlBA,EAAoB5K,gBAQhCnO,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,KACEC,UAAU,UACVC,MAAO,CAAEuD,MAAOmB,EAAOU,gBACxB,kBACgBtF,EAAAA,cAAA,QAAMC,UAAU,eAAemP,IAE/C0E,GACC9T,EAAAA,cAAA,KACEC,UAAU,eACVC,MAAO,CAAEuD,MAAOmB,EAAOW,YAEtBuO,IAMb,CCrMe,SAASsG,EAAava,GAAiB,IAAhB,WAAEqP,GAAYrP,EAClD,MAAOmZ,EAAaC,GAAkBhS,EAAS,IACxCoT,EAAUC,GAAerT,EAAS,GAEnCsT,EAAgB,CACpB,CAAElP,QAAS,yCAA0C6N,SAAU,IAC/D,CAAE7N,QAAS,oCAAqC6N,SAAU,IAC1D,CAAE7N,QAAS,yBAA0B6N,SAAU,IAC/C,CAAE7N,QAAS,+BAAgC6N,SAAU,IACrD,CAAE7N,QAAS,YAAa6N,SAAU,MAGpCjJ,EAAU,KACR,MAAMuK,EAAgBvI,YAAY,KAChCgH,EAAgB1I,IACd,MAAMkK,EAAWlK,EAAO,EACxB,OAAIkK,GAAYF,EAAchP,QAE5BlB,WAAW,KACT6E,KACC,KACIqB,GAEFkK,KAER,KAEH,MAAO,IAAMpI,cAAcmI,IAC1B,CAACD,EAAchP,OAAQ2D,IAE1Be,EAAU,KACR,MAAMyK,EAAczI,YAAY,KAC9BqI,EAAa/J,IAAUA,EAAO,GAAK,IAClC,KAEH,MAAO,IAAM8B,cAAcqI,IAC1B,IAEH,MAAMC,EAAeJ,EAAcvB,GAEnC,OACEhZ,EAAAA,cAAA,OAAKC,UAAU,yEAEbD,EAAAA,cAAA,OAAKC,UAAU,iHAEbD,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,OAAKC,UAAU,6FACbD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sBAKzEX,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAAA,OAAKC,UAAU,yCAMrBD,EAAAA,cAAA,OAAKC,UAAU,yDACbD,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,MAAIC,UAAU,sDACX0a,EAAatP,QACY,cAAzBsP,EAAatP,SACZrL,EAAAA,cAAA,QAAMC,UAAU,8BAA8B,IAAI2a,OAAOP,KAI7Dra,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,uCACbD,EAAAA,cAAA,OACEC,UAAU,qEACVC,MAAO,CAAEoD,MAAO,GAAF4C,OAAKyU,EAAazB,SAAQ,YAQlDlZ,EAAAA,cAAA,OAAKC,UAAU,wBAIvB,C,ypBClFO,MAAM4a,EAAoB,CAC/B,UACA,WACA,WACA,WACA,YACA,WACA,YACA,UACA,WACA,WACA,cACA,aACA,cACA,WACA,YACA,UAIWC,EAAmB,CAC9B,WACA,oBACA,eACA,gBACA,eAWK,SAASC,EAAsB3C,GAA2B,IAAA4C,EAAA,IAAdC,EAAOC,UAAA3P,OAAA,QAAA4P,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5D,MAAM,kBAAEE,GAAoB,EAAI,aAAEC,GAAe,GAASJ,EAE1D,IAAK7C,EACH,OAAOA,EAGT,MAAMkD,E,2VAASnU,CAAA,GAAQiR,GAGvB,GAA+B,QAA3B4C,EAAA5C,EAAYmD,uBAAe,IAAAP,GAA3BA,EAA6BQ,QAAUpD,EAAYoD,QAAUpD,EAAYqD,OAAQ,KAAAC,EACnF,MAAMD,GAAoC,QAA3BC,EAAAtD,EAAYmD,uBAAe,IAAAG,OAAA,EAA3BA,EAA6BF,SAAUpD,EAAYoD,QAAUpD,EAAYqD,OAExF,GAAIpX,MAAMC,QAAQmX,IAAWA,EAAOlQ,QAAU,GAAI,CAChD,GAAI6P,EAAmB,CAErB,MAAMO,EAAkB,CAAC,EACzBd,EAAkBzD,QAAQ,CAAC1K,EAAM/J,KAC/BgZ,EAAgBjP,GAAQ+O,EAAO9Y,KAI7B2Y,EAAUC,gBACZD,EAAUC,gBAAgBI,gBAAkBA,EAE5CL,EAAUK,gBAAkBA,CAEhC,CAEmB,IAAAC,EAAnB,IAAKP,EAE0B,QAA7BO,EAAIN,EAAUC,uBAAe,IAAAK,GAAzBA,EAA2BJ,eACtBF,EAAUC,gBAAgBC,OAE/BF,EAAUE,eACLF,EAAUE,OAEfF,EAAUG,eACLH,EAAUG,MAGvB,CACF,CAGA,GAAIrD,EAAYyD,aAAezD,EAAYoD,OAAQ,CACjD,MAAMA,EAASpD,EAAYyD,aAAezD,EAAYoD,OAEtD,GAAInX,MAAMC,QAAQkX,IAAWJ,EAAmB,CAC9C,MAAMU,EAAY,CAAC,EACnBhB,EAAiB1D,QAAQ,CAAC2E,EAAUpZ,UACZwY,IAAlBK,EAAO7Y,KACTmZ,EAAUC,GAAYP,EAAO7Y,MAIjC2Y,EAAUQ,UAAYA,CACxB,CACF,CAEA,OAAOR,CACT,CAQO,SAASU,EAAwBP,GACtC,IAAKpX,MAAMC,QAAQmX,IAAWA,EAAOlQ,OAAS,GAE5C,OADApB,QAAQ8R,KAAK,4DACN,CAAC,EAGV,MAAMN,EAAkB,CAAC,EAKzB,OAJAd,EAAkBzD,QAAQ,CAAC1K,EAAM/J,KAC/BgZ,EAAgBjP,GAAQ+O,EAAO9Y,KAG1BgZ,CACT,CAMO,SAASO,IACd,MAAO,IAAIrB,EACb,CAMO,SAASsB,IACd,MAAO,IAAIrB,EACb,C,wzDCvIA,MAAMsB,GAAavc,IAeb,IAfc,SAClB+D,EAAQ,MACR2V,EAAK,SACL8C,EAAQ,KACRpO,EAAI,WACJqO,GAAa,EAAI,gBACjBC,GAAkB,EAAK,QACvBxc,EAAO,OACPmJ,EAAM,eACNsT,GAAiB,EAAK,UACtBvc,EAAY,GAAE,iBACdwc,EAAmB,GAAE,cACrBC,GAAgB,EAAI,MACpBxc,EAAQ,CAAC,GAEVL,EADIqD,EAAK4D,EAAAjH,EAAAkH,GAER,MAAM4V,EAAWxV,EAAA,CACfd,gBAAiBzB,EAAOO,WACxB2I,UAAW,OACXxK,MAAO,OACPuF,QAAS,OACT+T,cAAe,UACZ1c,GAGC2c,EAAc,CAClBzV,SAAU,SACVU,IAAK,EACLzB,gBAAiBzB,EAAOO,WACxB2X,OAAQ,GACRC,QAAS,gBACTC,aAAc,aAAF9W,OAAetB,EAAOa,cAG9BwX,EAAY9V,EAAA,CAChB0G,KAAM,EACNkP,QAAS,OACTlU,QAAS,OACT+T,cAAe,SACfvV,SAAU,OACVyG,UAAW,GACP4O,GAAiB,CACnB3T,WAAY,SACZD,eAAgB,eAIdoU,EAAa,CACjB/U,WAAY,+BACZ/B,SAAU,OACVgC,WAAY,MACZ3E,MAAOmB,EAAOS,YACdmC,OAAQ,YACRa,UAAWqU,EAAgB,SAAW,QAGlCS,EAAgB,CACpBhV,WAAY,+BACZ/B,SAAU,OACVgC,WAAY,MACZ3E,MAAOmB,EAAOU,cACdkC,OAAQ,aACRa,UAAWqU,EAAgB,SAAW,OACtC1P,WAAY,OAad,OACEhN,EAAAA,cAAA,MAAAsI,EAAA,CACErI,UAAS,uBAAAiG,OAAyBjG,GAClCC,MAAOyc,GACHzZ,GAGHoZ,GACCtc,EAAAA,cAAA,OAAKE,MAAO2c,GACV7c,EAAAA,cAAA,OAAKC,UAAU,qCAEZuc,GAAkBtT,GACjBlJ,EAAAA,cAAA,UACEI,QAAS8I,EACTjJ,UAAU,4FACV,aAAW,WAEXD,EAAAA,cAAA,QAAME,MAAO,CAAEkG,SAAU,OAAQ3C,MAAOmB,EAAOS,cAAe,MAMjEkX,GAAmBxc,GAClBC,EAAAA,cAAA,UACEI,QAASL,EACTE,UAAU,4FACV,aAAW,SAEXD,EAAAA,cAAA,QAAME,MAAO,CAAEkG,SAAU,OAAQ3C,MAAOmB,EAAOS,cAAe,QAQxErF,EAAAA,cAAA,OACEC,UAAS,wBAAAiG,OAA0BuW,GACnCvc,MAAO+c,GAGNhP,GACCjO,EAAAA,cAAA,OAAKE,MArDK,CAChBoD,MAAO,OACPnD,OAAQ,OACRqH,OAAQ,cACRqB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB1C,SAAU,SA+Ce,iBAAT6H,EAAoBjO,EAAAA,cAAA,YAAOiO,GAAeA,GAKrDsL,GACCvZ,EAAAA,cAAA,MAAIE,MAAOgd,GACR3D,GAKJ8C,GACCrc,EAAAA,cAAA,KAAGE,MAAOid,GACPd,GAKJzY,KAOHwZ,GAAkB9W,IAQlB,IARmB,SACvB1C,EAAQ,QACRyZ,GAAU,EAAI,QACdtd,EAAO,gBACPud,EAAe,cACfC,EAAgB,CAAC,EAAC,WAClBC,EAAa,CAAC,GAEflX,EADImX,EAAe3W,EAAAR,EAAAoX,GAElB,IAAKL,EAAS,OAAO,KAErB,MAAMM,EAAcxW,EAAA,CAClBC,SAAU,QACVU,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACR5B,gBAAiB,qBACjByW,OAAQ,IACRjU,QAAS,OACTE,WAAY,SACZD,eAAgB,UACbyU,GAGCK,EAAWzW,EAAA,CACfd,gBAAiBzB,EAAOO,WACxB0Y,oBAAqB,OACrBC,qBAAsB,OACtBC,uBAAwB,OACxBC,wBAAyB,OACzB7d,OAAQ,QACRmD,MAAO,OACPiE,SAAU,QACVI,UAAW,kCACXN,SAAU,SACVwB,QAAS,OACT+T,cAAe,UACZY,GAaL,OACExd,EAAAA,cAAA,OAAKE,MAAOyd,EAAgBvd,QAXD2J,IACvBA,EAAE8C,SAAW9C,EAAEkU,gBACbX,EACFA,IACSvd,GACTA,OAOFC,EAAAA,cAAA,OAAKE,MAAO0d,GACV5d,EAAAA,cAACoc,GAAU9T,EAAA,CACTgU,YAAY,EACZC,iBAAiB,EACjBxc,QAASA,GACL0d,GAEH7Z,M,4/BCvMJ,SAASsa,GAAare,GAmB1B,IAnB2B,YAC5Bse,EAAW,YACXC,EAAW,cACXC,EAAgB,KAAI,WACpBnP,EAAa,KAAI,UACjBkG,GAAY,EAAI,SAChBjM,GAAW,EAAI,UACfmV,GAAY,EAAK,WACjBC,EAAa,QAAO,UACpBC,EAAY,QAAO,MACnBC,GAAQ,EAAK,WACbC,EAAa,OAAM,YACnBC,EAAc,KAAI,UAClBC,EAAY,SAAQ,WACpBC,EAAa,OAAM,QACnB1P,EAAU,KAAI,eACd2P,GAAiB,EAAI,eACrBzJ,GAAiB,EAAI,eACrBC,EAAiB,CAAE8F,mBAAmB,EAAMC,cAAc,IAC3Dxb,EAEC,MAAOkf,EAAaC,GAAkB/X,GAAS,IACxCgY,EAAaC,GAAkBjY,EAAS,YACxCkY,EAAUC,GAAenY,EAAS,OAClCtB,EAAOiE,GAAY3C,EAAS,MAGnCgJ,EAAU,KACqBoP,MAE3B,GAAIlW,EAIF,OAHAgB,QAAQC,IAAI,oEACZgG,aAAaE,WAAW,oBACxB4O,EAAe,WAIjB,MAAMI,EAAYlP,aAAaC,QAAQ,eACvC,GAAIiP,EACF,IACE,MAAMC,EAAOzU,KAAK0U,MAAMF,GACxBF,EAAYG,GAERA,EAAKE,oBAAsBF,EAAKhL,WAClC2K,EAAe,eACNK,EAAK9T,WAAa8T,EAAKE,mBAChCP,EAAe,cACNK,EAAKE,qBAAuBF,EAAKhL,YAC1C2K,EAAe,MAEnB,CAAE,MAAOvZ,GACPwE,QAAQxE,MAAM,iCAAkCA,GAChDyK,aAAaE,WAAW,cAC1B,GAIJ+O,IACC,CAAClW,IAEJ,MASMuW,EAAqBA,KACzBV,GAAe,GACfpV,EAAS,OAUL+V,EAAwBA,KAC5BxV,QAAQC,IAAI,sCACZ8U,EAAe,UAGXU,EAA0BC,IAC9B1V,QAAQC,IAAI,4BAA6ByV,GACzC1V,QAAQC,IAAI,iBAAkB,CAC5B6B,UAAW4T,EAAS5T,UACpB6T,UAAWD,EAASC,UACpB5T,SAAU2T,EAAS3T,SACnBH,aAAc8T,EAAS9T,aACvBgU,iBAAkBF,EAAS7T,cAI7B,MAAMC,GAAmC,IAAvB4T,EAAS5T,YACgB,IAA1B4T,EAAS9T,cACa,eAAtB8T,EAAS3T,UACc,QAAvB2T,EAASC,YACRD,EAAS7T,YAE3B7B,QAAQC,IAAI,yBAA0B,CACpC4V,cAAe/T,EAAY,0CAA4C,iDACvEgU,UAAW,CACThU,UAAW4T,EAAS5T,UACpBiU,mBAA6C,IAA1BL,EAAS9T,aAC5BoU,mBAA0C,eAAtBN,EAAS3T,SAC7BkU,eAAgBP,EAAS7T,eAI7B,MAAMqU,EAAWlZ,GAAAA,GAAA,GACZ0Y,GAAQ,IACXpU,UAAU,EACVgU,oBAAqBxT,EACrBsI,YAAatI,IAGfmT,EAAYiB,GACZjQ,aAAasB,QAAQ,cAAe5G,KAAKC,UAAUsV,IAG/CpU,GACF9B,QAAQC,IAAI,0EACZ8U,EAAe,gBAEf/U,QAAQC,IAAI,sFACZ8U,EAAe,iBAIboB,EAA4BC,IAChCpW,QAAQC,IAAI,wBAAyBmW,GACrC,MAAMC,EAAerZ,GAAAA,GAAA,GAChBgY,GAAQ,IACXM,oBAAoB,EACpBpQ,kBAAmBkR,EAAelR,mBAAqB,KAEzD+P,EAAYoB,GACZpQ,aAAasB,QAAQ,cAAe5G,KAAKC,UAAUyV,IACnDtB,EAAe,QAGXuB,EAA0BC,IAC9BvW,QAAQC,IAAI,uBAAwBsW,GACpC,MAAMF,EAAerZ,GAAAA,GAAAA,GAAA,GAChBgY,GACAuB,GAAO,IACVnM,YAAY,IAEd6K,EAAYoB,GACZpQ,aAAasB,QAAQ,cAAe5G,KAAKC,UAAUyV,IAGnDtB,EAAe,YAOXyB,EAA0BC,IAC9BzW,QAAQC,IAAI,yBAA0BwW,GACtC,MAAMJ,EAAerZ,GAAAA,GAAA,GAChBgY,GAAQ,IACX0B,mBAAmB,GAChBD,GAELxB,EAAYoB,GACZpQ,aAAasB,QAAQ,cAAe5G,KAAKC,UAAUyV,IAGnDtB,EAAe,gBAGX4B,EAA6BC,IACjC5W,QAAQC,IAAI,4CAA6C2W,GAGzD,MAAMP,EAAerZ,GAAAA,GAAA,GAChBgY,GAAQ,IACX6B,gBAAiBD,IAEnB3B,EAAYoB,GACZpQ,aAAasB,QAAQ,cAAe5G,KAAKC,UAAUyV,IAGnDrW,QAAQC,IAAI,oDACZ4U,GAAe,GAGf,IAAIiC,EAAkBF,EACtB,GAAI1L,SAAkB0L,GAAAA,EAAe3I,YACnC,IAAI,IAAA8I,EACFD,EAAe9Z,GAAAA,GAAA,GACV4Z,GAAa,IAChB3I,YAAa2C,EAAsBgG,EAAc3I,YAAa9C,KAEhEnL,QAAQC,IAAI,0CAAqE,QAA3B8W,EAAAD,EAAgB7I,mBAAW,IAAA8I,OAAA,EAA3BA,EAA6BvF,kBAAmB,sBACxG,CAAE,MAAOhW,GACPwE,QAAQ8R,KAAK,gCAAiCtW,EAEhD,CAKF,GADAwE,QAAQC,IAAI,uCAAwC6W,GAChD/R,EACF,IACEA,EAAW+R,GACX9W,QAAQC,IAAI,+CACd,CAAE,MAAOzE,GACPwE,QAAQxE,MAAM,mCAAoCA,EACpD,MAEAwE,QAAQC,IAAI,uCAuIV+W,EAAc,qEAAHjb,OAEA,SAAfwY,EAAwB,YAAc,YAAW,kCAG7CxX,EAAc,CAClB0V,cAA8B,UAAf2B,EAAyB,SAAW,MACnDlY,gBAAiB,cACjB5C,MAAO+a,EACPhZ,OAAQ,yBAIJ4b,EAAY,CAChB9d,MAAO,OACPnD,OAAQ,OACRkhB,YAA4B,SAAfxC,EAAwB,OAAS,KAchD,OACE7e,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEC,UAAWkhB,EACX/gB,QAtUe0J,UACnB,IACEK,QAAQC,IAAI,0BACV4U,GAAe,EACnB,CAAE,MAAOrZ,GACPwE,QAAQxE,MAAM,yBAA0BA,EAC1C,GAiUIzF,MAAOgH,IAEU,SAAf2X,GAAwC,SAAfA,IACzB7e,EAAAA,cAAA,OACEshB,IAAK7C,EAAQ,mDAAqD,mDAClE8C,IAAI,eACJrhB,MAAOkhB,IAGK,SAAfvC,GACC7e,EAAAA,cAAA,QAAMC,UAAS,GAAAiG,OAAmB,UAAdsY,EAAwB,aAAe,aAAY,KAAAtY,OAAmB,SAAf2Y,EAAwB,UAAY,GAAE,KAAA3Y,OAAmB,UAAfqY,EAAyB,OAAwB,SAAfA,EAAwB,OAAS,KA1BhLiD,MACd,OAAQ5C,GACN,IAAK,SACH,MAAO,uBACT,IAAK,UACH,MAAO,sBACT,QACE,MAAO,yBAoBF4C,KAMNzC,GACC/e,EAAAA,cAAAA,EAAAA,SAAA,KACmB,eAAhBif,EAECjf,EAAAA,cAAA,OAAKC,UAAU,qFACbD,EAAAA,cAAA,OAAKC,UAAU,wFAAwFC,MAAO,CAAEqH,SAAU,QAASpH,OAAQ,UAEzIH,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,UACEI,QAASA,IAAM8e,EAAe,SAC9Bjf,UAAU,8EAEVD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sBAKzEX,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAAA,OAAKC,UAAU,yCAMrBD,EAAAA,cAACiP,EAAmB,CAClBC,WAAYoR,EACZpX,OAAQA,IAAMgW,EAAe,SAC7B/P,QAASA,GAAW,mDACpBC,QAASgP,EACTvN,UAAUsO,aAAQ,EAARA,EAAU/V,SAAS+V,aAAQ,EAARA,EAAUtO,UACvC1H,SAAUA,MAIE,gBAAhB8V,EAEFjf,EAAAA,cAAA,OAAKC,UAAU,qFACbD,EAAAA,cAAA,OAAKC,UAAU,wFAAwFC,MAAO,CAAEqH,SAAU,QAASpH,OAAQ,UAEzIH,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,UACEI,QAASA,IAAM8e,EAAe,cAC9Bjf,UAAU,8EAEVD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sBAKzEX,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAAA,OAAKC,UAAU,yCAMrBD,EAAAA,cAACyhB,EAAW,CACVvS,WAAY4R,EACZhN,UAAWqL,aAAQ,EAARA,EAAU/V,MACrB+U,YAAaA,EACb/O,QAASgP,EACThJ,UAAWA,EACXjM,SAAUA,EACVgG,QAASA,EACTE,mBAAmB8P,aAAQ,EAARA,EAAU9P,oBAAqB,CAAC,MAIvC,QAAhB4P,EAEFjf,EAAAA,cAAA,OAAKC,UAAU,qFACbD,EAAAA,cAAA,OAAKC,UAAU,wFAAwFC,MAAO,CAAEqH,SAAU,QAASpH,OAAQ,UAEzIH,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,UACEI,QAASA,IAAM8e,EAAe,cAC9Bjf,UAAU,8EAEVD,EAAAA,cAAA,OAAKC,UAAU,wBAAwBI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,aAC/EP,EAAAA,cAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sBAKzEX,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAAA,OAAKC,UAAU,yCAMrBD,EAAAA,cAAC6T,EAAQ,CACP3E,WAAYuR,EACZvX,OAAQA,IAAMgW,EAAe,cAC7BpL,UAAWqL,aAAQ,EAARA,EAAU/V,UAIT,YAAhB6V,EAEFjf,EAAAA,cAACoa,EAAa,CAAClL,WA9VKwS,KAC5BxC,EAAe,kBAgWPlf,EAAAA,cAACod,GAAe,CACdC,QAAS0B,EACThf,QAAS2f,EACTlD,eAAgC,YAAhByC,GAA6C,UAAhBA,GAA2C,gBAAhBA,GAAiD,QAAhBA,GAAyC,YAAhBA,EAClI/V,OAAQA,KACc,UAAhB+V,GAAyBC,EAAe,WACxB,eAAhBD,GAA8BC,EAAe,SAC7B,QAAhBD,GAAuBC,EAAe,cACtB,aAAhBD,GAA4BC,EAAe,QAEjD3F,MA7SSoI,MACnB,OAAQ1C,GACN,IAAK,UAEL,IAAK,QAUL,QACE,MAAO,GATT,IAAK,aACH,MAAO,oBACT,IAAK,MACH,MAAO,sBACT,IAAK,WACH,MAAO,sBACT,IAAK,cACH,MAAO,iBAgSM0C,GACPtF,SA3RYuF,MACtB,OAAQ3C,GACN,IAAK,UAEL,IAAK,QAUL,QACE,MAAO,GATT,IAAK,aACH,MAAO,iEACT,IAAK,MACH,MAAO,2CACT,IAAK,WACH,MAAO,sCACT,IAAK,cACH,MAAO,0CAAP/Y,OAAiDkY,KA8QjCwD,GACV3T,KAzQQ4T,MAClB,OAAQ5C,GACN,IAAK,UAEL,IAAK,QAUL,QACE,MAAO,GATT,IAAK,aACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,WACH,MAAO,IACT,IAAK,cACH,MAAO,OA4PK4C,GACNnF,eAAe,GAvPDoF,MACxB,OAAQ7C,GACN,IAAK,UACH,OACEjf,EAAAA,cAACJ,EAAa,CACZE,WAAY6f,EACZ5f,QAAS2f,IAGf,IAAK,QACH,OACE1f,EAAAA,cAACgJ,EAAS,CACRC,UAAW2W,EACX1W,OAAQA,IAAMgW,EAAe,WAC7B/V,SAAUA,IAIhB,IAAK,aACH,OACEnJ,EAAAA,cAACiP,EAAmB,CAClBC,WAAYoR,EACZpX,OAAQA,IAAMgW,EAAe,SAC7B/P,QAASA,GAAW,mDACpBC,QAASgP,EACTvN,UAAUsO,aAAQ,EAARA,EAAU/V,SAAS+V,aAAQ,EAARA,EAAUtO,UACvC1H,SAAUA,IAIhB,IAAK,MACH,OACEnJ,EAAAA,cAAC6T,EAAQ,CACP3E,WAAYuR,EACZ3M,UAAWqL,aAAQ,EAARA,EAAU/V,QAI3B,IAAK,WACH,OACEpJ,EAAAA,cAAC0Y,EAAiB,CAChBxJ,WAAYyR,EACZ7M,UAAWqL,aAAQ,EAARA,EAAU/V,MACrBgG,QAASgP,EACT/O,mBAAmB8P,aAAQ,EAARA,EAAU9P,oBAAqB,GAClDlG,SAAUA,IAIhB,IAAK,cACH,OACEnJ,EAAAA,cAACyhB,EAAW,CACVvS,WAAY4R,EACZhN,UAAWqL,aAAQ,EAARA,EAAU/V,MACrB+U,YAAaA,EACb/O,QAASgP,EACThJ,UAAWA,EACXjM,SAAUA,EACVgG,QAASA,EACTE,mBAAmB8P,aAAQ,EAARA,EAAU9P,oBAAqB,CAAC,IAIzD,QACE,OACErP,EAAAA,cAAA,OAAKC,UAAU,4CACbD,EAAAA,cAAA,OAAKC,UAAU,oFACfD,EAAAA,cAAA,KAAGC,UAAU,iBAAgB,iBAsL1B6hB,KAOf,CAEA,Y,6mCC5gBOhY,eAAeiY,KAAgC,IAAbC,EAAM9G,UAAA3P,OAAA,QAAA4P,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAM,YACJiD,EAAc,CAAC,QAAS,eAAc,YACtCC,EAAc,SAAQ,WACtBlP,EAAa,KAAI,UACjBkG,GAAY,EAAK,SACjBjM,GAAW,EAAK,QAChBgG,EAAU,KAAI,eACdkG,GAAiB,EAAI,eACrBC,EAAiB,CAAE8F,mBAAmB,EAAMC,cAAc,IAExD2G,EADCC,E,6WAAUnb,CACXkb,EAAMjb,IAEV,OAAO,IAAImb,QAAQ,CAACC,EAASC,KAC3B,IAEE,MAAMC,EAAc,mBAAHnc,OAAsByQ,KAAK2L,SAAS9L,SAAS,IAAI+L,OAAO,EAAG,IACtEC,EAAYC,SAASze,cAAc,OACzCwe,EAAUpU,GAAKiU,EACfG,EAAUtiB,MAAMkH,SAAW,QAC3Bob,EAAUtiB,MAAM4H,IAAM,IACtB0a,EAAUtiB,MAAM6H,KAAO,IACvBya,EAAUtiB,MAAMoD,MAAQ,OACxBkf,EAAUtiB,MAAMC,OAAS,OACzBqiB,EAAUtiB,MAAM4c,OAAS,OACzB0F,EAAUtiB,MAAMwiB,cAAgB,OAEhCD,SAAS5X,KAAK8X,YAAYH,GAG1B,MAAMI,EAAUA,KACd,GAAIJ,GAAaA,EAAUK,WAAY,CACrC,IACEC,EAAAA,uBAAgCN,EAClC,CAAE,MAAO7c,GACPwE,QAAQ8R,KAAK,oCAAqCtW,EACpD,CACA6c,EAAUK,WAAWE,YAAYP,EACnC,GAIIQ,EAAkB7K,IACtB,IAAI8I,EAAkB9I,EAGtB,GAAI9C,SAAkB8C,GAAAA,EAAQC,YAC5B,IACE6I,EAAe9Z,GAAAA,GAAA,GACVgR,GAAM,IACTC,YAAa2C,EAAsB5C,EAAOC,YAAa9C,IAE3D,CAAE,MAAO3P,GACPwE,QAAQ8R,KAAK,6BAA8BtW,EAE7C,CAIF,GAAIuJ,GAAoC,mBAAfA,EACvB,IACEA,EAAW+R,EACb,CAAE,MAAOtb,GACPwE,QAAQxE,MAAM,gCAAiCA,EACjD,CAIF0E,WAAWuY,EAAS,MAIhBK,EAAiBjjB,EAAAA,cAAoBke,GAAa/W,GAAA,CACtDgX,cACAC,cACAlP,WAAY8T,EACZ5N,YACAjM,WACAgG,UACA0P,WAAY,OACZH,WAAY,OACZF,UAAW,QACXte,MAAO,CAAEwH,QAAS,EAAGN,SAAU,WAAYU,IAAK,YAC7Cma,IAILa,EAAAA,OAAgBG,EAAgBT,GAGhCnY,WAAW,KACT,MAAM6Y,EAASV,EAAUW,cAAc,UACnCD,GACFA,EAAOE,QACPjB,EAAQS,KAERA,IACAR,EAAO,IAAIlX,MAAM,sCAElB,IAEL,CAAE,MAAOvF,GACPwE,QAAQxE,MAAM,iCAAkCA,GAChDyc,EAAOzc,EACT,GAEJ,CAOO,SAAS0d,KAA+B,IAAbrB,EAAM9G,UAAA3P,OAAA,QAAA4P,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1C,MAAOoI,EAAQC,GAAavjB,EAAAA,UAAe,IACpC0J,EAAWC,GAAgB3J,EAAAA,UAAe,GAC3CwjB,EAAaxjB,EAAAA,OAAa,MAE1B8R,EAAO9R,EAAAA,YAAkB8J,iBAA+B,IAAxB2Z,EAAcvI,UAAA3P,OAAA,QAAA4P,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,IAAIoI,IAAU5Z,EAAd,CAEAC,GAAa,GAEb,IACE,MAAM+Z,EAAWvc,GAAAA,GAAAA,GAAA,GACZ6a,GACAyB,GAAc,IACjBvU,WAAaiJ,IACXoL,GAAU,GACV5Z,GAAa,GAGTqY,EAAO9S,YACT8S,EAAO9S,WAAWiJ,GAEhBsL,EAAevU,YACjBuU,EAAevU,WAAWiJ,MAK1ByK,QAAgBb,GAAmB2B,GACzCF,EAAWG,QAAUf,EACrBW,GAAU,GACV5Z,GAAa,EACf,CAAE,MAAOhE,GACPgE,GAAa,GACbQ,QAAQxE,MAAM,yBAA0BA,EAC1C,CA7B+B,CA8BjC,EAAG,CAACqc,EAAQsB,EAAQ5Z,IAEdyI,EAAQnS,EAAAA,YAAkB,KAC1BwjB,EAAWG,UACbH,EAAWG,UACXH,EAAWG,QAAU,MAEvBJ,GAAU,GACV5Z,GAAa,IACZ,IAWH,OARA3J,EAAAA,UAAgB,IACP,KACDwjB,EAAWG,SACbH,EAAWG,WAGd,IAEI,CACL7R,OACAK,QACAmR,SACA5Z,YAEJ,CAYOI,eAAe8Z,KAA4B,IAAb5B,EAAM9G,UAAA3P,OAAA,QAAA4P,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7C,MAAM,YACJiD,EAAc,CAAC,QAAS,eAAc,UACtCrK,EAAY,GAAE,QACd1E,EAAU,SAAQ,SAClBjG,GAAW,EAAK,eAChBkM,GAAiB,EAAI,eACrBC,EAAiB,CAAE8F,mBAAmB,EAAMC,cAAc,IACxD2G,EAIJ,MAAM,IAAI9W,MAAM,+GAClB,CC3NO,SAAS2Y,GAAQ3gB,GACtB,OACElD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACke,GAAkBhb,GAGzB,CAIA,YAoBa4gB,GAAmBha,UAE9BK,QAAQC,IAAI,kCAAmC4X,GACxCE,QAAQC,kB","sources":["webpack://onairos/webpack/bootstrap","webpack://onairos/./src/components/WelcomeScreen.jsx","webpack://onairos/webpack/runtime/define property getters","webpack://onairos/webpack/runtime/hasOwnProperty shorthand","webpack://onairos/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://onairos/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://onairos/./node_modules/lucide-react/dist/esm/Icon.js","webpack://onairos/./node_modules/lucide-react/dist/esm/icons/check.js","webpack://onairos/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://onairos/./src/theme/colors.js","webpack://onairos/./src/components/ui/PrimaryButton.jsx","webpack://onairos/./src/components/EmailAuth.js","webpack://onairos/./src/components/UniversalOnboarding.jsx","webpack://onairos/./src/components/PinSetup.js","webpack://onairos/./src/components/DataRequest.js","webpack://onairos/./src/components/TrainingComponent.jsx","webpack://onairos/./src/components/LoadingScreen.jsx","webpack://onairos/./src/utils/responseFormatter.js","webpack://onairos/./src/components/ui/PageLayout.jsx","webpack://onairos/./src/onairosButton.jsx","webpack://onairos/./src/utils/overlayHandler.js","webpack://onairos/./src/onairos.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","import React from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Header with close button */}\n      <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n        <button\n          onClick={onClose}\n          className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n        >\n          <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Avatar */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center\">\n            <div className=\"w-8 h-8 relative\">\n              {/* VR Headset Icon */}\n              <svg viewBox=\"0 0 32 32\" className=\"w-full h-full\">\n                <path\n                  d=\"M4 12c0-2.2 1.8-4 4-4h16c2.2 0 4 1.8 4 4v8c0 2.2-1.8 4-4 4h-4l-2-3h-4l-2 3H8c-2.2 0-4-1.8-4-4v-8z\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                />\n                <circle cx=\"10\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\n                <circle cx=\"22\" cy=\"16\" r=\"2\" fill=\"currentColor\" />\n                <path d=\"M12 24c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]];\nconst Check = createLucideIcon(\"check\", __iconNode);\n\nexport { __iconNode, Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.503.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, onBack, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'verify',\n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Header */}\n      <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n        <button\n          onClick={onBack}\n          className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n        >\n          <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Your AI persona is getting closer\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#4285F4\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"#34A853\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"#FBBC05\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"#EA4335\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full mb-10\">\n        <h1 \n          className=\"font-bold text-left mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"text-left mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n      {/* Test mode notice */}\n      {testMode && (\n        <div \n          className=\"p-3 rounded-lg border text-center mb-6\"\n          style={{ \n            backgroundColor: '#EBF8FF', \n            borderColor: '#BEE3F8',\n            color: '#2B6CB0'\n          }}\n        >\n          <p className=\"text-sm\">Test mode: Use code 123456</p>\n        </div>\n      )}\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-4 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"w-full mb-6\">\n        <PrimaryButton\n          label=\"Continue\"\n          onClick={handleCodeSubmit}\n          loading={isLoading}\n          disabled={isLoading || code.length !== 6}\n          testId=\"verify-code-button\"\n        />\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"w-full\">\n        <button\n          type=\"button\"\n          onClick={() => setStep('email')}\n          className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Use a different email\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\n\nconst platforms = [\n  { \n    name: 'Google', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n        <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n        <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n        <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n        <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'gmail',\n    description: \"We use your search, YouTube, and location signals to better understand your interests and routines.\"\n  },\n  { \n    name: 'Reddit', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#FF4500\">\n        <path d=\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\" />\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'reddit',\n    description: \"We use your search history to better understand your interests and routines.\"\n  },\n  { \n    name: 'Instagram', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n        <defs>\n          <radialGradient id=\"instagram-gradient\" cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FD5949\" />\n            <stop offset=\"50%\" stopColor=\"#D6249F\" />\n            <stop offset=\"100%\" stopColor=\"#285AEB\" />\n          </radialGradient>\n        </defs>\n        <path fill=\"url(#instagram-gradient)\" d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.073-1.689-.073-4.849 0-3.204.013-3.583.072-4.948.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'instagram',\n    description: \"We use your search history to better understand your interests and routines.\"\n  },\n  { \n    name: 'LinkedIn', \n    icon: (\n      <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#0077B5\">\n        <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n      </svg>\n    ), \n    color: 'bg-white', \n    connector: 'linkedin',\n    description: \"We use your search history to better understand your interests and routines.\"\n  }\n];\n\n// Enhanced SDK configuration\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web', // web, mobile, desktop\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true\n};\n\n/**\n * UniversalOnboarding Component - Compact & Enhanced\n * Displays a streamlined onboarding screen for data connections\n */\nexport default function UniversalOnboarding({ onComplete, onBack, appIcon, appName = 'App' }) {\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [connectionErrors, setConnectionErrors] = useState({});\n  const [connectionHealth, setConnectionHealth] = useState({});\n  const [healthScore, setHealthScore] = useState(0);\n\n  // Mobile device detection\n  const isMobileDevice = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n           (window.innerWidth <= 768);\n  };\n\n  // Handle mobile OAuth return\n  useEffect(() => {\n    const handleOAuthReturn = () => {\n      const platform = localStorage.getItem('onairos_oauth_platform');\n      if (platform) {\n        console.log(`📱 OAuth return detected for: ${platform}`);\n        \n        // Clear OAuth state\n        localStorage.removeItem('onairos_oauth_platform');\n        localStorage.removeItem('onairos_oauth_return');\n        \n        // Mark as connected\n        setConnectedAccounts(prev => ({\n          ...prev,\n          [platform]: true\n        }));\n        \n        // Clear any errors\n        setConnectionErrors(prev => ({\n          ...prev,\n          [platform]: null\n        }));\n        \n        console.log(`✅ ${platform} marked as connected from OAuth return`);\n      }\n    };\n\n    handleOAuthReturn();\n  }, []);\n\n  const connectToPlatform = async (platformName) => {\n    console.log(`🚀 connectToPlatform called for: ${platformName}`);\n    \n    const platform = platforms.find(p => p.name === platformName);\n    if (!platform?.connector) {\n      console.error(`❌ No connector found for platform: ${platformName}`);\n      return false;\n    }\n\n    try {\n      setIsConnecting(true);\n      setConnectingPlatform(platformName);\n      \n      // Clear any previous errors\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n      \n      console.log(`🔗 Starting OAuth connection for ${platformName}...`);\n      \n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      // Enhanced authorize endpoint with SDK type\n      const authorizeUrl = `${sdkConfig.baseUrl}/${platform.connector}/authorize`;\n      \n      const response = await fetch(authorizeUrl, {\n        method: 'POST',\n        headers: {\n          'x-api-key': sdkConfig.apiKey,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session: {\n            username: username\n          }\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n             const responseData = await response.json();\n       console.log(`📋 ${platformName} OAuth response:`, responseData);\n       \n       // Check for platform-specific URL keys with multiple fallbacks\n       const platformUrlKeys = {\n         'youtube': ['youtubeURL', 'youtubeUrl', 'youtube_url'],\n         'linkedin': ['linkedinURL', 'linkedinUrl', 'linkedin_url'], \n         'reddit': ['redditURL', 'redditUrl', 'reddit_url'],\n         'pinterest': ['pinterestURL', 'pinterestUrl', 'pinterest_url'],\n         'instagram': ['instagramURL', 'instagramUrl', 'instagram_url'],\n         'github': ['githubURL', 'githubUrl', 'github_url'],\n         'facebook': ['facebookURL', 'facebookUrl', 'facebook_url'],\n         'gmail': ['gmailURL', 'gmailUrl', 'gmail_url']\n       };\n       \n       const possibleKeys = platformUrlKeys[platform.connector] || [\n         `${platform.connector}URL`,\n         `${platform.connector}Url`, \n         `${platform.connector}_url`,\n         'platformURL',\n         'authUrl', \n         'url'\n       ];\n       \n       let oauthUrl = null;\n       let usedKey = null;\n       \n       // Try each possible key\n       for (const key of possibleKeys) {\n         if (responseData[key]) {\n           oauthUrl = responseData[key];\n           usedKey = key;\n           break;\n         }\n       }\n       \n       if (!oauthUrl) {\n         console.error(`❌ No OAuth URL found for ${platformName}:`);\n         console.error(`Expected one of:`, possibleKeys);\n         console.error(`Response keys:`, Object.keys(responseData));\n         console.error(`Full response:`, responseData);\n         throw new Error(`No OAuth URL found. Backend should return one of: ${possibleKeys.join(', ')}`);\n       }\n       \n       console.log(`✅ Found OAuth URL for ${platformName} using key: ${usedKey}`);\n        \n      if (isMobileDevice()) {\n        // Mobile: Use redirect flow\n        localStorage.setItem('onairos_oauth_platform', platformName);\n        localStorage.setItem('onairos_oauth_return', window.location.href);\n        window.location.href = oauthUrl;\n        return true;\n      } else {\n        // Desktop: Use popup flow with enhanced monitoring\n        const popup = window.open(\n          oauthUrl,\n          `${platform.connector}_oauth`,\n          'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no'\n        );\n        \n        if (!popup) {\n          throw new Error('Popup blocked. Please allow popups and try again.');\n        }\n\n                 // Enhanced popup monitoring with onairos.uk detection\n         let hasNavigatedToOnairos = false;\n         const checkInterval = setInterval(() => {\n           try {\n             // Try to detect if popup has navigated to onairos.uk (indicates success)\n             if (popup.location && popup.location.hostname === 'onairos.uk') {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated to onairos.uk - treating as success`);\n               \n               // Close the popup since it shows \"not found\"\n               popup.close();\n               return; // Let the popup.closed check handle the rest\n             }\n           } catch (e) {\n             // Cross-origin error is expected when popup navigates to onairos.uk\n             // This actually indicates the OAuth likely succeeded\n             if (!hasNavigatedToOnairos) {\n               hasNavigatedToOnairos = true;\n               console.log(`🔄 ${platformName} popup navigated (cross-origin) - likely to onairos.uk`);\n             }\n           }\n           \n           try {\n             // Check if popup is closed\n             if (popup.closed) {\n               clearInterval(checkInterval);\n               \n               // Check for success or error signals from callback page\n               const successFlag = localStorage.getItem(`onairos_${platformName}_success`);\n               const errorFlag = localStorage.getItem(`onairos_${platformName}_error`);\n               const timestamp = localStorage.getItem(`onairos_${platformName}_timestamp`);\n               \n               // Only process recent signals (within 30 seconds)\n               const isRecentSignal = timestamp && (Date.now() - parseInt(timestamp) < 30000);\n               \n               if (successFlag && isRecentSignal) {\n                 // Success flow from callback page\n                 console.log(`✅ ${platformName} OAuth completed successfully (callback page)`);\n                 localStorage.removeItem(`onairos_${platformName}_success`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else if (errorFlag && isRecentSignal) {\n                 // Error flow from callback page\n                 console.log(`❌ ${platformName} OAuth failed:`, errorFlag);\n                 localStorage.removeItem(`onairos_${platformName}_error`);\n                 localStorage.removeItem(`onairos_${platformName}_timestamp`);\n                 \n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: errorFlag\n                 }));\n                 \n               } else if (hasNavigatedToOnairos) {\n                 // Popup navigated to onairos.uk - assume success\n                 console.log(`✅ ${platformName} OAuth likely successful (navigated to onairos.uk)`);\n                 setConnectedAccounts(prev => ({\n                   ...prev,\n                   [platformName]: true\n                 }));\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: null\n                 }));\n                 \n               } else {\n                 // No signal and no onairos navigation - assume user cancelled\n                 console.log(`⚠️ ${platformName} OAuth cancelled or no response`);\n                 setConnectionErrors(prev => ({\n                   ...prev,\n                   [platformName]: 'Connection was cancelled'\n                 }));\n               }\n               \n               setIsConnecting(false);\n               setConnectingPlatform(null);\n             }\n           } catch (error) {\n             // Cross-origin error when popup navigates away - this is normal\n             // console.log(`🔄 Popup navigated away for ${platformName}`);\n           }\n         }, 1000);\n\n                 // Auto-close popup if it shows onairos.uk \"not found\" page after 10 seconds\n         setTimeout(() => {\n           try {\n             if (!popup.closed && popup.location && popup.location.hostname === 'onairos.uk') {\n               console.log(`🚪 Auto-closing ${platformName} popup showing onairos.uk (not found)`);\n               popup.close();\n             }\n           } catch (e) {\n             // Cross-origin error is expected - try to close anyway if it's been 10 seconds\n             if (!popup.closed && hasNavigatedToOnairos) {\n               console.log(`🚪 Auto-closing ${platformName} popup (cross-origin, likely onairos.uk)`);\n               popup.close();\n             }\n           }\n         }, 10000);\n\n         // Final timeout after 5 minutes\n         setTimeout(() => {\n           if (!popup.closed) {\n             popup.close();\n             clearInterval(checkInterval);\n             setConnectionErrors(prev => ({\n               ...prev,\n               [platformName]: 'Connection timeout'\n             }));\n             setIsConnecting(false);\n             setConnectingPlatform(null);\n           }\n         }, 300000);\n\n        return true;\n      }\n    } catch (error) {\n      console.error(`❌ Error connecting to ${platformName}:`, error);\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: error.message\n      }));\n      setIsConnecting(false);\n      setConnectingPlatform(null);\n      return false;\n    }\n  };\n\n  const handleToggle = async (platformName) => {\n    console.log(`🔥 TOGGLE CLICKED: ${platformName}`);\n    \n    if (isConnecting && connectingPlatform !== platformName) {\n      console.log(`⚠️ Already connecting to ${connectingPlatform}, ignoring click on ${platformName}`);\n      return;\n    }\n    \n    const isConnected = connectedAccounts[platformName];\n    \n    if (isConnected) {\n      // Disconnect\n      console.log(`🔌 Disconnecting from ${platformName}...`);\n      setConnectedAccounts(prev => ({\n        ...prev,\n        [platformName]: false\n      }));\n      setConnectionErrors(prev => ({\n        ...prev,\n        [platformName]: null\n      }));\n    } else {\n      // Connect\n      await connectToPlatform(platformName);\n    }\n  };\n\n  const handleContinue = () => {\n    const connected = Object.entries(connectedAccounts)\n      .filter(([platform, isConnected]) => isConnected)\n      .map(([platform]) => platform);\n    \n    onComplete({\n      connectedAccounts: connected,\n      totalConnections: connected.length,\n      healthScore: healthScore,\n      connectionHealth: connectionHealth,\n      sdkVersion: '2.1.7',\n      enhancedFeatures: {\n        healthMonitoring: sdkConfig.enableHealthMonitoring,\n        autoRefresh: sdkConfig.enableAutoRefresh,\n        connectionValidation: sdkConfig.enableConnectionValidation\n      }\n    });\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">Connect app data</h1>\n          <p className=\"text-gray-600 text-base\">More connections, better personalization.</p>\n        </div>\n\n        <div className=\"mb-6 flex justify-center flex-shrink-0\">\n          <div className=\"w-32 h-32 rounded-3xl shadow-lg\" style={{\n            background: 'linear-gradient(135deg, #f97316 0%, #ec4899 50%, #8b5cf6 100%)'\n          }}></div>\n        </div>\n\n        {/* Scrollable platform list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-4 pb-4\">\n            {platforms.map((platform) => {\n              const isConnected = connectedAccounts[platform.name] || false;\n              const isCurrentlyConnecting = connectingPlatform === platform.name;\n              const hasError = connectionErrors[platform.name];\n              const isDisabled = isConnecting && !isCurrentlyConnecting;\n              \n              return (\n                <div\n                  key={platform.name}\n                  className=\"flex items-start gap-4 p-4 rounded-xl hover:bg-gray-50 transition-colors\"\n                  style={{\n                    backgroundColor: \"#ffffff\",\n                    border: \"none\",\n                    outline: \"none\",\n                  }}\n                  onClick={() => !isDisabled && handleToggle(platform.name)}\n                >\n                  <div className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center flex-shrink-0 border border-gray-100\">\n                    {isCurrentlyConnecting ? (\n                      <div className=\"animate-spin h-5 w-5 border-2 border-gray-400 rounded-full border-t-transparent\"></div>\n                    ) : (\n                      platform.icon\n                    )}\n                  </div>\n                  <div className=\"flex-1 min-w-0 pr-4\">\n                    <h3\n                      className=\"font-medium mb-1\"\n                      style={{\n                        backgroundColor: \"#ffffff !important\",\n                        color: \"#111827 !important\",\n                        border: \"none\",\n                        outline: \"none\",\n                      }}\n                    >\n                      {platform.name}\n                    </h3>\n                    <p\n                      className=\"text-sm leading-relaxed\"\n                      style={{\n                        backgroundColor: \"#ffffff !important\",\n                        color: \"#4B5563 !important\",\n                        border: \"none\",\n                        outline: \"none\",\n                      }}\n                    >\n                      {platform.description}\n                    </p>\n                    \n                    {/* Error Message */}\n                    {hasError && (\n                      <p className=\"text-xs text-red-600 mt-1\">\n                        {hasError}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <div\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (!isDisabled) handleToggle(platform.name);\n                      }}\n                      className={`relative inline-flex h-7 w-12 items-center rounded-full transition-colors cursor-pointer ${\n                        isConnected ? \"bg-green-500\" : \"bg-gray-300\"\n                      } ${isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n                    >\n                      <span\n                        className={`inline-block h-5 w-5 transform rounded-full bg-white transition-transform shadow-md ${\n                          isConnected ? \"translate-x-6\" : \"translate-x-0.5\"\n                        }`}\n                      />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\"\n          onClick={handleContinue}\n        >\n          Update\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ connectedAccounts: [], totalConnections: 0 })}\n          className=\"w-full text-gray-600 text-base font-medium py-3 text-center cursor-pointer hover:text-gray-800 transition-colors\"\n        >\n          Skip\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [pinRequirements, setPinRequirements] = useState({\n    length: false,\n    uppercase: false,\n    number: false,\n  });\n\n  // Check PIN requirements\n  useEffect(() => {\n    setPinRequirements({\n      length: pin.length >= 6,\n      uppercase: /[A-Z]/.test(pin),\n      number: /\\d/.test(pin),\n    });\n  }, [pin]);\n\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\n\n  const handleSubmit = () => {\n    if (allRequirementsMet) {\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\n        </div>\n\n        <div className=\"mb-6 flex-shrink-0\">\n          <input\n            type=\"password\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-gray-50\"\n            placeholder=\"Enter your PIN\"\n            maxLength={20}\n          />\n        </div>\n\n        {/* Scrollable requirements list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-3 pb-4\">\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.length && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.uppercase && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.number && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain a number.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors ${\n            allRequirementsMet ? \"bg-gray-900 hover:bg-gray-800 text-white\" : \"bg-gray-400 text-white\"\n          }`}\n          onClick={handleSubmit}\n        >\n          Continue\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Profile', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: 'User',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'preferences', \n    name: 'User Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: 'Grid3X3',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  },\n  { \n    id: 'personality', \n    name: 'Personality Traits', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  }\n];\n\n// Data Type Toggle Component with new checkbox design\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const handleToggle = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  const getIconComponent = (iconName) => {\n    const iconProps = { className: \"w-5 h-5 text-gray-600\" };\n    \n    switch (iconName) {\n      case 'User':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        );\n      case 'Grid3X3':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n          </svg>\n        );\n      case 'Brain':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return <span className=\"text-xl\">{iconName}</span>;\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-between p-4 rounded-xl bg-gray-50\">\n      <div className=\"flex items-center gap-4\">\n        <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center\">\n          {getIconComponent(dataType.icon)}\n        </div>\n        <span className=\"font-medium text-gray-900\">{dataType.name}</span>\n      </div>\n      <div\n        onClick={handleToggle}\n        className={`w-6 h-6 rounded border-2 flex items-center justify-center cursor-pointer transition-colors ${\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\n        }`}\n      >\n        {isEnabled && (\n          <svg className=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 flex-1 flex flex-col min-h-0 pb-4\">\n        {/* Icon Flow */}\n        <div className=\"mb-6 flex justify-center items-center gap-4 flex-shrink-0\">\n          <div className=\"w-16 h-16 bg-white rounded-2xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </div>\n          <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <div className=\"w-16 h-16 bg-white rounded-2xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <span className=\"text-2xl font-serif font-bold text-black\">E</span>\n          </div>\n        </div>\n\n        {/* Title Section */}\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Enoch wants to personalize your experience\n          </h1>\n          <p className=\"text-gray-600 text-base\">Choose what to share:</p>\n        </div>\n\n        {/* Consent Options */}\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"space-y-4 pb-6\">\n            {dataTypes.map((dataType, index) => (\n              <DataTypeToggle\n                key={dataType.id}\n                dataType={dataType}\n                isEnabled={selectedData[dataType.id]}\n                onToggle={handleDataToggle}\n                isLast={index === dataTypes.length - 1}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-8 pt-4 flex-shrink-0 space-y-3\">\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\"\n          onClick={fetchUserData}\n          disabled={isLoadingApi || selectedCount === 0}\n        >\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ cancelled: true })}\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-4 text-base font-medium text-center cursor-pointer transition-colors\"\n        >\n          Decline\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div className=\"mt-4 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\n            <p className=\"text-sm\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from \"react\";\n\nexport default function LoadingScreen({ onComplete }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dotCount, setDotCount] = useState(0);\n\n  const loadingStates = [\n    { message: \"Validating PIN and continuing training\", progress: 20 },\n    { message: \"Uploading model to secure storage\", progress: 40 },\n    { message: \"Running test inference\", progress: 60 },\n    { message: \"Storing results in databases\", progress: 80 },\n    { message: \"Complete!\", progress: 100 },\n  ];\n\n  useEffect(() => {\n    const stateInterval = setInterval(() => {\n      setCurrentStep((prev) => {\n        const nextStep = prev + 1;\n        if (nextStep >= loadingStates.length) {\n          // Loading complete, call onComplete after a short delay\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return prev; // Keep at last step\n        }\n        return nextStep;\n      });\n    }, 3000); // Change state every 3 seconds\n\n    return () => clearInterval(stateInterval);\n  }, [loadingStates.length, onComplete]);\n\n  useEffect(() => {\n    const dotInterval = setInterval(() => {\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\n    }, 500); // Change dots every 500ms\n\n    return () => clearInterval(dotInterval);\n  }, []);\n\n  const currentState = loadingStates[currentStep];\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-end justify-center\">\n      {/* Modal - Full height from bottom */}\n      <div className=\"bg-white rounded-t-3xl w-full max-w-sm mx-auto shadow-2xl overflow-hidden h-screen max-h-screen flex flex-col\">\n        {/* Header */}\n        <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n          <div className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors cursor-pointer\">\n            <svg className=\"w-5 h-5 text-gray-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </div>\n\n          {/* Progress Bar */}\n          <div className=\"flex justify-center mb-8\">\n            <div className=\"w-24 h-1 bg-gray-300 rounded-full\">\n              <div className=\"w-16 h-1 bg-gray-900 rounded-full\"></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content - Centered loading state */}\n        <div className=\"flex-1 flex flex-col justify-center items-center px-6\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-lg font-bold text-gray-900 mb-8 leading-tight\">\n              {currentState.message}\n              {currentState.message !== \"Complete!\" && (\n                <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\n              )}\n            </h1>\n\n            <div className=\"w-64 mx-auto\">\n              <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                <div\n                  className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\n                  style={{ width: `${currentState.progress}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom spacing */}\n        <div className=\"h-20 flex-shrink-0\"></div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: '12px 24px 8px',\n    borderBottom: `1px solid ${COLORS.borderLight}`\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '24px',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 8px 0',\n    textAlign: centerContent ? 'center' : 'left'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: '16px',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 32px 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: '48px',\n    height: '48px',\n    margin: '0 auto 24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '24px'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '100vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport LoadingScreen from './components/LoadingScreen.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = true, // Auto-enabled for design testing - set to false for production\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true }\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to loading flow\n    setCurrentFlow('loading');\n  };\n\n  const handleLoadingComplete = () => {\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n          />\n        );\n      case 'email':\n        return (\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            onBack={() => setCurrentFlow('welcome')}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n\n                  {/* Progress Bar */}\n                  <div className=\"flex justify-center mb-8\">\n                    <div className=\"w-24 h-1 bg-gray-300 rounded-full\">\n                      <div className=\"w-20 h-1 bg-gray-900 rounded-full\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'dataRequest' ? (\n            // Special case for dataRequest - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n\n                  {/* Progress Bar */}\n                  <div className=\"flex justify-center mb-8\">\n                    <div className=\"w-24 h-1 bg-gray-300 rounded-full\">\n                      <div className=\"w-24 h-1 bg-gray-900 rounded-full\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* DataRequest Content */}\n                <DataRequest \n                  onComplete={handleDataRequestComplete}\n                  userEmail={userData?.email}\n                  requestData={requestData}\n                  appName={webpageName}\n                  autoFetch={autoFetch}\n                  testMode={testMode}\n                  appIcon={appIcon}\n                  connectedAccounts={userData?.connectedAccounts || {}}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'pin' ? (\n            // Special case for pin - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '100vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-6 top-6 p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n\n                  {/* Progress Bar */}\n                  <div className=\"flex justify-center mb-8\">\n                    <div className=\"w-24 h-1 bg-gray-300 rounded-full\">\n                      <div className=\"w-20 h-1 bg-gray-900 rounded-full\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* PinSetup Content */}\n                <PinSetup \n                  onComplete={handlePinSetupComplete}\n                  onBack={() => setCurrentFlow('onboarding')}\n                  userEmail={userData?.email}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'loading' ? (\n            // Loading screen\n            <LoadingScreen onComplete={handleLoadingComplete} />\n          ) : (\n            // All other flows use PageLayout wrapper\n            <ModalPageLayout\n              visible={showOverlay}\n              onClose={handleCloseOverlay}\n              showBackButton={currentFlow !== 'welcome' && currentFlow !== 'email' && currentFlow !== 'dataRequest' && currentFlow !== 'pin' && currentFlow !== 'loading'}\n              onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n                if (currentFlow === 'onboarding') setCurrentFlow('email');\n                if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n                if (currentFlow === 'training') setCurrentFlow('pin');\n              }}\n              title={getFlowTitle()}\n              subtitle={getFlowSubtitle()}\n              icon={getFlowIcon()}\n              centerContent={true}\n            >\n              {renderCurrentFlow()}\n            </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","/**\n * Standalone Onairos Overlay Handler\n * Allows developers to trigger the Onairos flow programmatically without the button component\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { OnairosButton } from '../onairosButton.jsx';\nimport { formatOnairosResponse } from './responseFormatter.js';\n\n/**\n * Opens the Onairos overlay flow programmatically\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request ['basic', 'personality', 'preferences']\n * @param {string} config.webpageName - Name of your application\n * @param {Function} config.onComplete - Callback function when flow completes\n * @param {boolean} config.autoFetch - Whether to auto-fetch data (default: false)\n * @param {boolean} config.testMode - Whether to use test mode (default: false)\n * @param {string} config.appIcon - URL to your app icon (optional)\n * @param {boolean} config.formatResponse - Whether to format response with dictionary (default: true)\n * @param {Object} config.responseFormat - Response formatting options\n * @returns {Promise<Function>} Promise that resolves to a cleanup function\n */\nexport async function openOnairosOverlay(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    webpageName = 'My App',\n    onComplete = null,\n    autoFetch = false,\n    testMode = false,\n    appIcon = null,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true },\n    ...otherProps\n  } = config;\n\n  return new Promise((resolve, reject) => {\n    try {\n      // Create a container for the overlay\n      const containerId = `onairos-overlay-${Math.random().toString(36).substr(2, 9)}`;\n      const container = document.createElement('div');\n      container.id = containerId;\n      container.style.position = 'fixed';\n      container.style.top = '0';\n      container.style.left = '0';\n      container.style.width = '100%';\n      container.style.height = '100%';\n      container.style.zIndex = '9999';\n      container.style.pointerEvents = 'none'; // Allow clicks to pass through to the button\n      \n      document.body.appendChild(container);\n\n      // Cleanup function\n      const cleanup = () => {\n        if (container && container.parentNode) {\n          try {\n            ReactDOM.unmountComponentAtNode(container);\n          } catch (error) {\n            console.warn('Error unmounting React component:', error);\n          }\n          container.parentNode.removeChild(container);\n        }\n      };\n\n      // Enhanced onComplete handler\n      const handleComplete = (result) => {\n        let formattedResult = result;\n        \n        // Format response if requested\n        if (formatResponse && result?.apiResponse) {\n          try {\n            formattedResult = {\n              ...result,\n              apiResponse: formatOnairosResponse(result.apiResponse, responseFormat)\n            };\n          } catch (error) {\n            console.warn('Error formatting response:', error);\n            // Continue with original result if formatting fails\n          }\n        }\n\n        // Call the original onComplete callback\n        if (onComplete && typeof onComplete === 'function') {\n          try {\n            onComplete(formattedResult);\n          } catch (error) {\n            console.error('Error in onComplete callback:', error);\n          }\n        }\n\n        // Cleanup after a short delay to allow animations\n        setTimeout(cleanup, 100);\n      };\n\n      // Create the Onairos button component with auto-open\n      const OnairosElement = React.createElement(OnairosButton, {\n        requestData,\n        webpageName,\n        onComplete: handleComplete,\n        autoFetch,\n        testMode,\n        appIcon,\n        visualType: 'icon', // Use icon-only to minimize visual footprint\n        buttonType: 'pill',\n        textColor: 'white',\n        style: { opacity: 0, position: 'absolute', top: '-9999px' }, // Hide the button\n        ...otherProps\n      });\n\n      // Render the component\n      ReactDOM.render(OnairosElement, container);\n\n      // Auto-click the button to open overlay after render\n      setTimeout(() => {\n        const button = container.querySelector('button');\n        if (button) {\n          button.click();\n          resolve(cleanup); // Resolve with cleanup function\n        } else {\n          cleanup();\n          reject(new Error('Failed to render Onairos button'));\n        }\n      }, 100);\n\n    } catch (error) {\n      console.error('Error opening Onairos overlay:', error);\n      reject(error);\n    }\n  });\n}\n\n/**\n * Alternative method using React hooks for React applications\n * @param {Object} config - Same configuration as openOnairosOverlay\n * @returns {Object} Hook object with open function and state\n */\nexport function useOnairosOverlay(config = {}) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const cleanupRef = React.useRef(null);\n\n  const open = React.useCallback(async (overrideConfig = {}) => {\n    if (isOpen || isLoading) return;\n    \n    setIsLoading(true);\n    \n    try {\n      const finalConfig = {\n        ...config,\n        ...overrideConfig,\n        onComplete: (result) => {\n          setIsOpen(false);\n          setIsLoading(false);\n          \n          // Call original onComplete if provided\n          if (config.onComplete) {\n            config.onComplete(result);\n          }\n          if (overrideConfig.onComplete) {\n            overrideConfig.onComplete(result);\n          }\n        }\n      };\n\n      const cleanup = await openOnairosOverlay(finalConfig);\n      cleanupRef.current = cleanup;\n      setIsOpen(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error('Error opening overlay:', error);\n    }\n  }, [config, isOpen, isLoading]);\n\n  const close = React.useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n      cleanupRef.current = null;\n    }\n    setIsOpen(false);\n    setIsLoading(false);\n  }, []);\n\n  // Cleanup on unmount\n  React.useEffect(() => {\n    return () => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n      }\n    };\n  }, []);\n\n  return {\n    open,\n    close,\n    isOpen,\n    isLoading\n  };\n}\n\n/**\n * Simple function to get user data without UI (for existing authenticated users)\n * @param {Object} config - Configuration options\n * @param {Array} config.requestData - Data types to request\n * @param {string} config.userEmail - User email (if known)\n * @param {string} config.appName - App name\n * @param {boolean} config.testMode - Whether to use test mode\n * @param {boolean} config.formatResponse - Whether to format response\n * @returns {Promise<Object>} Promise that resolves to user data\n */\nexport async function getOnairosData(config = {}) {\n  const {\n    requestData = ['basic', 'personality'],\n    userEmail = '',\n    appName = 'My App',\n    testMode = false,\n    formatResponse = true,\n    responseFormat = { includeDictionary: true, includeArray: true }\n  } = config;\n\n  // This would need to be implemented based on your existing API logic\n  // For now, it's a placeholder that developers can use as a reference\n  throw new Error('getOnairosData requires authenticated user session. Use openOnairosOverlay for the full authentication flow.');\n} ","import React from 'react';\nimport OnairosButton from './onairosButton.jsx';\n\n// Main Onairos component\nexport function Onairos(props) {\n  return (\n    <>\n      <OnairosButton {...props} />\n    </>\n  );\n}\n\n// Export both the main component and individual components\nexport { OnairosButton };\nexport default Onairos;\n\n// Export overlay handler functions for programmatic access\nexport { \n  openOnairosOverlay, \n  useOnairosOverlay, \n  getOnairosData \n} from './utils/overlayHandler.js';\n\n// Export response formatting utilities\nexport { \n  formatOnairosResponse, \n  formatPersonalityScores,\n  getPersonalityTypes,\n  getTraitCategories,\n  PERSONALITY_TYPES,\n  TRAIT_CATEGORIES\n} from './utils/responseFormatter.js';\n\n// Initialize SDK functionality (if needed)\nexport const initializeApiKey = async (config) => {\n  // SDK initialization logic would go here\n  console.log('🔧 SDK initialized with config:', config);\n  return Promise.resolve();\n};\n"],"names":["__webpack_require__","WelcomeScreen","_ref","onContinue","onClose","React","className","style","height","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","cx","cy","r","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","startsWith","defaultAttributes","xmlns","width","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","Check","iconName","Component","displayName","createLucideIcon","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","concat","borderRadius","fontSize","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","onBack","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","handleEmailSubmit","async","e","preventDefault","test","validateEmail","console","log","setTimeout","apiKey","window","onairosApiKey","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","data","json","message","handleCodeSubmit","length","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","jwtToken","type","value","onChange","target","placeholder","required","lineHeight","borderColor","from","_","maxLength","newCode","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","PrimaryButton","flex","minHeight","platforms","name","icon","connector","description","id","offset","stopColor","sdkConfig","process","env","REACT_APP_ONAIROS_API_KEY","baseUrl","REACT_APP_ONAIROS_BASE_URL","sdkType","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","UniversalOnboarding","onComplete","appIcon","appName","connectedAccounts","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","connectionErrors","setConnectionErrors","connectionHealth","setConnectionHealth","healthScore","setHealthScore","useEffect","handleOAuthReturn","platform","localStorage","getItem","removeItem","prev","connectToPlatform","platformName","find","p","_localStorage$getItem","username","authorizeUrl","session","status","statusText","responseData","possibleKeys","oauthUrl","usedKey","keys","navigator","userAgent","innerWidth","setItem","location","href","popup","open","hasNavigatedToOnairos","checkInterval","setInterval","hostname","close","closed","clearInterval","successFlag","errorFlag","timestamp","isRecentSignal","parseInt","handleToggle","values","isConnected","isCurrentlyConnecting","hasError","isDisabled","outline","stopPropagation","handleContinue","connected","entries","_ref3","totalConnections","sdkVersion","enhancedFeatures","healthMonitoring","autoRefresh","connectionValidation","PinSetup","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","handleSubmit","pinCreated","dataTypes","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","iconProps","getIconComponent","fillRule","clipRule","autoFetch","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","selectedCount","userHash","hash","str","toString","i","charCodeAt","Math","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","progress","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","min","completionDelay","trainingComplete","simulatedTraining","clearTimeout","round","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","repeat","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","options","arguments","undefined","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","warn","getPersonalityTypes","getTraitCategories","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","zIndex","padding","borderBottom","contentStyle","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","enableTraining","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","parse","onboardingComplete","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","buttonClass","logoStyle","marginRight","src","alt","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","openOnairosOverlay","config","otherProps","Promise","resolve","reject","containerId","random","substr","container","document","pointerEvents","appendChild","cleanup","parentNode","ReactDOM","removeChild","handleComplete","OnairosElement","button","querySelector","click","useOnairosOverlay","isOpen","setIsOpen","cleanupRef","overrideConfig","finalConfig","current","getOnairosData","Onairos","initializeApiKey"],"sourceRoot":""}