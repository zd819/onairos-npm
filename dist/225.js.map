{"version":3,"file":"225.js","mappings":"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","sources":["webpack://OnairosLaravel/./src/components/WelcomeScreen.jsx","webpack://OnairosLaravel/./src/theme/colors.js","webpack://OnairosLaravel/./src/components/ui/PrimaryButton.jsx","webpack://OnairosLaravel/./src/components/EmailAuth.js","webpack://OnairosLaravel/./src/utils/extensionDetection.js","webpack://OnairosLaravel/./src/components/ExtensionInstallPrompt.jsx","webpack://OnairosLaravel/./src/components/LLMConnectorManager.jsx","webpack://OnairosLaravel/./src/components/UniversalOnboarding.jsx","webpack://OnairosLaravel/./src/components/PinSetup.js","webpack://OnairosLaravel/./src/components/DataRequest.js","webpack://OnairosLaravel/./src/components/TrainingComponent.jsx","webpack://OnairosLaravel/./src/components/LoadingScreen.jsx","webpack://OnairosLaravel/./src/utils/responseFormatter.js","webpack://OnairosLaravel/./src/components/ui/PageLayout.jsx","webpack://OnairosLaravel/./src/onairosButton.jsx","webpack://OnairosLaravel/./src/utils/userDataFormatter.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  // Load Sirv script for responsive images\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://scripts.sirv.com/sirvjs/v3/sirv.js';\n    script.async = true;\n    document.head.appendChild(script);\n    \n    return () => {\n      const existingScript = document.querySelector('script[src=\"https://scripts.sirv.com/sirvjs/v3/sirv.js\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Logo */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-20 h-20 flex items-center justify-center\">\n            <img \n              className=\"Sirv w-full h-full object-contain\" \n              data-src=\"https://anushkasirv.sirv.com/OnairosBlack.png\" \n              alt=\"Onairos Logo\"\n            />\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useState, useEffect } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = false }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Auto-focus first PIN input when code step loads\n  useEffect(() => {\n    if (step === 'code') {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\n        if (firstInput) {\n          firstInput.focus();\n        }\n      }, 100);\n    }\n  }, [step]);\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // In production mode, validate email format\n    if (!testMode && !validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const doFetchWithRetry = async (url, options, attempts = 3) => {\n        let lastErr;\n        for (let i = 0; i < attempts; i++) {\n          try {\n            const res = await fetch(url, options);\n            if (!res.ok) {\n              // Capture response body for better diagnostics\n              try {\n                const body = await res.json();\n                lastErr = new Error(body?.error || `HTTP ${res.status}`);\n              } catch {\n                lastErr = new Error(`HTTP ${res.status}`);\n              }\n            } else {\n              return res;\n            }\n          } catch (err) {\n            lastErr = err;\n          }\n          // backoff: 400ms, 800ms\n          await new Promise(r => setTimeout(r, 400 * (i + 1)));\n        }\n        throw lastErr || new Error('Network error');\n      };\n\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const baseUrl = (typeof window !== 'undefined' && window.onairosBaseUrl) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_BASE_URL) || 'https://api2.onairos.uk';\n        const apiKey = (typeof window !== 'undefined' && window.onairosApiKey) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_API_KEY) || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey';\n        console.log('🔑 [EmailAuth] Env Check:', { baseUrl, hasWindowKey: !!(typeof window !== 'undefined' && window.onairosApiKey), viteKey: (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_API_KEY) ? 'present' : 'absent' });\n\n        const headers = {\n          'Content-Type': 'application/json',\n          'x-api-key': apiKey,\n          // Keep Authorization for backwards compatibility\n          'Authorization': `Bearer ${apiKey}`\n        };\n        console.log('🔑 [EmailAuth] Using headers (keys redacted):', { ...headers, 'x-api-key': '***', Authorization: '***' });\n\n        const response = await doFetchWithRetry(`${baseUrl}/email/verify`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({ \n            email: (email || '').trim().toLowerCase()\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      if (testMode) {\n        // In test mode, proceed anyway\n        setStep('code');\n        setIsLoading(false);\n      } else {\n        // In production mode, show error\n        setError('Could not send code. Please try again.');\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      // Use the same Google OAuth logic as UniversalOnboarding\n      const sdkConfig = {\n        baseUrl: (typeof window !== 'undefined' && window.onairosBaseUrl) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_BASE_URL) || 'https://api2.onairos.uk',\n        apiKey: (typeof window !== 'undefined' && window.onairosApiKey) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_API_KEY) || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey',\n        enableHealthMonitoring: true,\n        enableAutoRefresh: true,\n        enableConnectionValidation: true\n      };\n\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\n      const params = new URLSearchParams({\n        username: username,\n        sdk_type: 'web',\n        return_url: window.location.origin + '/oauth-callback.html'\n      });\n\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\n      console.log('🔗 Starting Google OAuth from email flow...');\n      console.log('📋 Google OAuth URL:', fullUrl);\n\n      const popup = window.open(fullUrl, 'gmail_oauth', 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\n      \n      if (!popup) {\n        console.error('❌ Popup blocked');\n        setError('Please allow popups to continue with Google sign-in');\n        return;\n      }\n\n      // Monitor popup for OAuth completion\n      const checkPopup = setInterval(() => {\n        try {\n          if (popup.closed) {\n            clearInterval(checkPopup);\n            console.log('🔄 OAuth popup closed');\n            // Check if we got a successful OAuth response\n            // For now, just proceed to next step\n            // In a real implementation, you'd check for OAuth success\n          }\n        } catch (err) {\n          // Cross-origin error is expected\n        }\n      }, 500);\n\n    } catch (error) {\n      console.error('Google auth error:', error);\n      setError('Failed to start Google authentication');\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      const doFetchWithRetry = async (url, options, attempts = 3) => {\n        let lastErr;\n        for (let i = 0; i < attempts; i++) {\n          try {\n            const res = await fetch(url, options);\n            if (!res.ok) {\n              try {\n                const body = await res.json();\n                lastErr = new Error(body?.error || `HTTP ${res.status}`);\n              } catch {\n                lastErr = new Error(`HTTP ${res.status}`);\n              }\n            } else {\n              return res;\n            }\n          } catch (err) {\n            lastErr = err;\n          }\n          await new Promise(r => setTimeout(r, 400 * (i + 1)));\n        }\n        throw lastErr || new Error('Network error');\n      };\n\n      if (testMode) {\n        // Test mode: Accept any code for testing\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Please enter a 6-digit code');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const baseUrl = (typeof window !== 'undefined' && window.onairosBaseUrl) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_BASE_URL) || 'https://api2.onairos.uk';\n        const apiKey = (typeof window !== 'undefined' && window.onairosApiKey) || (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_API_KEY) || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey';\n        console.log('🔑 [EmailAuth - Code Verify] Env Check:', { baseUrl, hasWindowKey: !!(typeof window !== 'undefined' && window.onairosApiKey), viteKey: (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_ONAIROS_API_KEY) ? 'present' : 'absent' });\n\n        const headers = {\n          'Content-Type': 'application/json',\n          'x-api-key': apiKey,\n          'Authorization': `Bearer ${apiKey}`\n        };\n        console.log('🔑 [EmailAuth - Code Verify] Using headers (keys redacted):', { ...headers, 'x-api-key': '***', Authorization: '***' });\n\n        const response = await doFetchWithRetry(`${baseUrl}/email/verify/confirm`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({ \n            email: (email || '').trim().toLowerCase(), \n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          const userData = { \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName || data.user?.userName,\n            existingUser: !data.isNewUser, // Backend returns isNewUser, we need existingUser\n            accountInfo: data.user || data.accountInfo,\n            isNewUser: data.isNewUser, // Use backend's isNewUser directly\n            flowType: data.isNewUser ? 'onboarding' : 'dataRequest',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated || data.isNewUser,\n            accountDetails: data.user || data.accountDetails\n          };\n          console.log('📧 Calling onSuccess with userData:', userData);\n          onSuccess(userData);\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      if (testMode) {\n        // In test mode, proceed anyway\n        setStep('success');\n        setTimeout(() => {\n          const fallbackResponse = { \n            email, \n            verified: true, \n            token: 'fallback-token-' + Date.now(),\n            userName: email.split('@')[0],\n            existingUser: false,\n            accountInfo: null,\n            isNewUser: true,\n            flowType: 'onboarding',\n            adminMode: false,\n            userCreated: true,\n            accountDetails: {\n              email: email,\n              createdAt: new Date().toISOString()\n            }\n          };\n          onSuccess(fallbackResponse);\n        }, 600);\n      } else {\n        // In production mode, show error\n        setError('Invalid code. Please try again.');\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Use pre-existing Persona or create a new one in seconds\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              color: '#000000'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif',\n              color: '#000000',\n              WebkitTextFillColor: '#000000'\n            }}\n            onClick={handleGoogleAuth}\n          >\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <path d=\"M19.6 10.227c0-.709-.064-1.39-.182-2.045H10v3.868h5.382a4.6 4.6 0 01-1.996 3.018v2.51h3.232c1.891-1.742 2.982-4.305 2.982-7.35z\" fill=\"#4285F4\"/>\n              <path d=\"M10 20c2.7 0 4.964-.895 6.618-2.423l-3.232-2.509c-.895.6-2.04.955-3.386.955-2.605 0-4.81-1.76-5.595-4.123H1.064v2.59A9.996 9.996 0 0010 20z\" fill=\"#34A853\"/>\n              <path d=\"M4.405 11.9c-.2-.6-.314-1.24-.314-1.9 0-.66.114-1.3.314-1.9V5.51H1.064A9.996 9.996 0 000 10c0 1.614.386 3.14 1.064 4.49l3.34-2.59z\" fill=\"#FBBC05\"/>\n              <path d=\"M10 3.977c1.468 0 2.786.505 3.823 1.496l2.868-2.868C14.959.99 12.695 0 10 0 6.09 0 2.71 2.24 1.064 5.51l3.34 2.59C5.19 5.736 7.395 3.977 10 3.977z\" fill=\"#EA4335\"/>\n            </svg>\n            <span style={{ color: '#000000', WebkitTextFillColor: '#000000' }}>Continue with Google</span>\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 text-red-600 text-sm\">{error}</div>\n        )}\n      </div>\n\n      {/* Footer - Fixed at bottom */}\n      <div className=\"px-12 pb-8 flex-shrink-0\">\n        <button\n          type=\"button\"\n          className=\"w-full max-w-sm mx-auto bg-gray-900 text-white py-4 rounded-xl font-medium hover:bg-gray-800 transition-colors flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\n        <h1 \n          className=\"font-bold mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif',\n                color: '#000000'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-12 mb-4\">\n          <p className=\"text-red-600 text-sm text-center\">{error}</p>\n        </div>\n      )}\n\n      {/* Spacer to push button to bottom */}\n      <div className=\"flex-1\" />\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-12 pb-8\">\n        <PrimaryButton\n          label={isLoading ? 'Verifying...' : 'Continue'}\n          onPress={handleCodeSubmit}\n          disabled={isLoading || code.length !== 6}\n          fullWidth\n        />\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full h-full flex flex-col items-center justify-center px-12\">\n      <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4\">\n        <Check className=\"w-8 h-8 text-green-600\" />\n      </div>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Email Verified!</h2>\n      <p className=\"text-gray-600 text-center\">Setting up your account...</p>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full h-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n}\n","/**\n * Onairos Browser Extension Detection Utility\n * \n * This utility detects if the Onairos browser extension is installed\n * by checking for the global window.onairos object that the extension injects.\n * \n * Based on the extension's inject-script.js implementation:\n * - window.onairos.isOnairos = true\n * - window.onairos.version = '1.0.0'\n * - 'onairosReady' event is dispatched when extension loads\n */\n\n/**\n * Chrome Web Store URL for the Onairos browser extension\n */\nexport const ONAIROS_EXTENSION_STORE_URL = 'https://chromewebstore.google.com/detail/onairos/apkfageplidiblifhnadehmplfccapkf?hl=en';\n\n/**\n * Timeout for extension detection (in milliseconds)\n */\nconst DETECTION_TIMEOUT = 2000;\n\n/**\n * Detect if the Onairos browser extension is installed\n * @returns {Promise<boolean>} True if extension is installed and active\n */\nexport const detectOnairosExtension = () => {\n  return new Promise((resolve) => {\n    // Method 1: Direct detection - check if already loaded\n    if (window.onairos && window.onairos.isOnairos) {\n      console.log('✅ OnairosTerminal extension detected (already loaded)');\n      resolve(true);\n      return;\n    }\n\n    // Method 2: Event-based detection - wait for extension to load\n    let resolved = false;\n    \n    const handleOnairosReady = () => {\n      if (!resolved) {\n        resolved = true;\n        console.log('✅ OnairosTerminal extension detected (via event)');\n        resolve(true);\n      }\n    };\n\n    // Listen for the onairosReady event\n    window.addEventListener('onairosReady', handleOnairosReady, { once: true });\n\n    // Set timeout to avoid waiting indefinitely\n    setTimeout(() => {\n      if (!resolved) {\n        resolved = true;\n        window.removeEventListener('onairosReady', handleOnairosReady);\n        console.log('❌ OnairosTerminal extension not detected (timeout)');\n        resolve(false);\n      }\n    }, DETECTION_TIMEOUT);\n  });\n};\n\n/**\n * Get extension information if available\n * @returns {Object|null} Extension info or null if not available\n */\nexport const getExtensionInfo = () => {\n  if (window.onairos && window.onairos.getInfo) {\n    return window.onairos.getInfo();\n  }\n  return null;\n};\n\n/**\n * Check if extension is available synchronously (for already loaded extensions)\n * @returns {boolean} True if extension is immediately available\n */\nexport const isExtensionAvailableSync = () => {\n  return !!(window.onairos && window.onairos.isOnairos);\n};\n\n/**\n * Open Chrome Web Store to install the extension\n * @param {string} source - Source identifier for analytics (e.g., 'chatgpt', 'claude')\n */\nexport const openExtensionInstallPage = (source = 'unknown') => {\n  console.log(`🔗 Opening Chrome Web Store for extension installation (source: ${source})`);\n  \n  // For now, use a placeholder URL - replace with actual extension ID when available\n  const storeUrl = ONAIROS_EXTENSION_STORE_URL;\n  \n  // Try to open in new tab\n  const installWindow = window.open(storeUrl, '_blank');\n  \n  if (!installWindow) {\n    // Fallback if popup is blocked\n    console.warn('⚠️ Popup blocked, redirecting to extension store');\n    window.location.href = storeUrl;\n  }\n};\n\n/**\n * LLM Platform URLs\n */\nexport const LLM_URLS = {\n  chatgpt: 'https://chatgpt.com',\n  claude: 'https://claude.ai',\n  gemini: 'https://gemini.google.com',\n  grok: 'https://grok.x.ai'\n};\n\n/**\n * Open LLM platform if extension is installed, otherwise prompt for extension installation\n * @param {string} platform - LLM platform name ('chatgpt', 'claude', 'gemini', 'grok')\n * @param {Function} onExtensionMissing - Callback when extension is not installed\n * @param {Object} userInfo - User information to pass to the LLM platform\n * @param {string} userInfo.username - User's username/email\n * @param {string} userInfo.userId - User's unique identifier\n * @param {string} userInfo.sessionToken - Optional session token\n * @returns {Promise<boolean>} True if LLM was opened, false if extension missing\n */\nexport const openLLMWithExtensionCheck = async (platform, onExtensionMissing = null, userInfo = {}) => {\n  console.log(`🤖 Attempting to open ${platform} with extension check...`);\n  \n  // Check if extension is installed\n  const hasExtension = await detectOnairosExtension();\n  \n  if (hasExtension) {\n    // Extension is installed - open the LLM platform with user info\n    const baseUrl = LLM_URLS[platform];\n    if (baseUrl) {\n      // Build URL with user parameters for the browser extension to detect\n      const url = new URL(baseUrl);\n      \n      // Add Onairos-specific parameters that the extension can read\n      if (userInfo.username) {\n        url.searchParams.set('onairos_user', encodeURIComponent(userInfo.username));\n      }\n      if (userInfo.userId) {\n        url.searchParams.set('onairos_id', encodeURIComponent(userInfo.userId));\n      }\n      if (userInfo.sessionToken) {\n        url.searchParams.set('onairos_session', encodeURIComponent(userInfo.sessionToken));\n      }\n      \n      // Add platform identifier for the extension\n      url.searchParams.set('onairos_platform', platform);\n      url.searchParams.set('onairos_source', 'npm_connector');\n      url.searchParams.set('onairos_timestamp', Date.now().toString());\n      \n      const finalUrl = url.toString();\n      console.log(`✅ Extension detected, opening ${platform} at ${finalUrl}`);\n      console.log(`👤 User info: ${JSON.stringify(userInfo)}`);\n      \n      const llmWindow = window.open(finalUrl, '_blank');\n      \n      if (!llmWindow) {\n        console.warn(`⚠️ Popup blocked for ${platform}`);\n        return false;\n      }\n      return true;\n    } else {\n      console.error(`❌ Unknown LLM platform: ${platform}`);\n      return false;\n    }\n  } else {\n    // Extension is not installed - handle missing extension\n    console.log(`❌ Extension not detected for ${platform}, prompting installation`);\n    \n    if (onExtensionMissing) {\n      onExtensionMissing(platform);\n    } else {\n      // Default behavior: open extension store\n      openExtensionInstallPage(platform);\n    }\n    \n    return false;\n  }\n};\n\n/**\n * Enhanced extension detection with retry mechanism\n * @param {number} maxRetries - Maximum number of detection attempts\n * @param {number} retryDelay - Delay between retries in milliseconds\n * @returns {Promise<boolean>} True if extension is detected\n */\nexport const detectExtensionWithRetry = async (maxRetries = 3, retryDelay = 500) => {\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    console.log(`🔍 Extension detection attempt ${attempt}/${maxRetries}`);\n    \n    const detected = await detectOnairosExtension();\n    if (detected) {\n      return true;\n    }\n    \n    if (attempt < maxRetries) {\n      await new Promise(resolve => setTimeout(resolve, retryDelay));\n    }\n  }\n  \n  console.log(`❌ Extension not detected after ${maxRetries} attempts`);\n  return false;\n};\n\n/**\n * Extract Onairos user information from URL parameters\n * This function is intended to be used by the browser extension to read user info\n * @param {string} url - URL to parse (defaults to current page URL)\n * @returns {Object|null} User information object or null if no Onairos params found\n */\nexport const extractUserInfoFromURL = (url = window.location.href) => {\n  try {\n    const urlObj = new URL(url);\n    const params = urlObj.searchParams;\n    \n    // Check if this URL has Onairos parameters\n    if (!params.has('onairos_user') && !params.has('onairos_id')) {\n      return null;\n    }\n    \n    const userInfo = {\n      username: params.get('onairos_user') ? decodeURIComponent(params.get('onairos_user')) : null,\n      userId: params.get('onairos_id') ? decodeURIComponent(params.get('onairos_id')) : null,\n      sessionToken: params.get('onairos_session') ? decodeURIComponent(params.get('onairos_session')) : null,\n      platform: params.get('onairos_platform') || null,\n      source: params.get('onairos_source') || null,\n      timestamp: params.get('onairos_timestamp') || null\n    };\n    \n    // Only return if we have at least username or userId\n    if (userInfo.username || userInfo.userId) {\n      console.log('📋 Extracted Onairos user info from URL:', userInfo);\n      return userInfo;\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('❌ Error extracting user info from URL:', error);\n    return null;\n  }\n};\n\n/**\n * Send user information to the browser extension\n * This function communicates with the extension to provide user context\n * @param {Object} userInfo - User information to send\n * @returns {Promise<boolean>} True if successfully sent to extension\n */\nexport const sendUserInfoToExtension = async (userInfo) => {\n  try {\n    if (!window.onairos || !window.onairos.isOnairos) {\n      console.warn('⚠️ Onairos extension not detected, cannot send user info');\n      return false;\n    }\n    \n    // Send user info via postMessage to the extension\n    window.postMessage({\n      source: 'onairos_npm_connector',\n      type: 'USER_INFO',\n      data: {\n        ...userInfo,\n        timestamp: new Date().toISOString(),\n        connectorVersion: '3.4.2'\n      }\n    }, '*');\n    \n    console.log('📤 Sent user info to Onairos extension:', userInfo);\n    return true;\n  } catch (error) {\n    console.error('❌ Error sending user info to extension:', error);\n    return false;\n  }\n};\n\n/**\n * Send LLM conversation data to backend (for browser extension)\n * This function formats and sends encrypted conversation data to the new /llm-data/store endpoint\n * @param {Object} conversationData - Raw conversation data\n * @param {Object} userInfo - User authentication info\n * @param {string} platform - LLM platform (chatgpt, claude, gemini, grok)\n * @returns {Promise<boolean>} True if successfully stored\n */\nexport const storeLLMConversationData = async (conversationData, userInfo, platform) => {\n  try {\n    // Format data according to new backend API schema\n    const payload = {\n      encryptedData: btoa(JSON.stringify(conversationData)), // Base64 encode for now\n      encryptionMetadata: {\n        algorithm: \"AES-GCM\",\n        keyDerivation: \"PBKDF2\",\n        iterations: 100000\n      },\n      authentication: {\n        username: userInfo.username || userInfo.email,\n        timestamp: Date.now()\n      },\n      integrity: {\n        hash: await generateDataHash(conversationData),\n        algorithm: \"SHA-256\"\n      },\n      platform: platform,\n      source: 'browser_extension'\n    };\n\n    const response = await fetch('https://api2.onairos.uk/llm-data/store', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.sessionToken || userInfo.jwtToken}`,\n        'X-Onairos-User': userInfo.userId || userInfo.username\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (response.ok) {\n      console.log('✅ LLM conversation data stored successfully');\n      return true;\n    } else {\n      console.error('❌ Failed to store LLM data:', response.status);\n      return false;\n    }\n  } catch (error) {\n    console.error('❌ Error storing LLM conversation data:', error);\n    return false;\n  }\n};\n\n/**\n * Generate SHA-256 hash of data for integrity verification\n * @param {Object} data - Data to hash\n * @returns {Promise<string>} SHA-256 hash\n */\nasync function generateDataHash(data) {\n  try {\n    const encoder = new TextEncoder();\n    const dataString = JSON.stringify(data);\n    const dataBuffer = encoder.encode(dataString);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', dataBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n    return `sha256-${hashHex}`;\n  } catch (error) {\n    console.error('Error generating hash:', error);\n    return `sha256-${Date.now()}`; // Fallback\n  }\n}\n\n/**\n * Get user information from standard Onairos localStorage keys\n * @returns {Object} User information from localStorage\n */\nexport const getUserInfoFromStorage = () => {\n  try {\n    // Primary storage locations used by Onairos\n    const userDataStr = localStorage.getItem('onairosUser'); // Main user data object\n    const jwtToken = localStorage.getItem('onairos_jwt_token'); // JWT token from email verification\n    const legacyToken = localStorage.getItem('onairosToken'); // Legacy token from login\n    const username = localStorage.getItem('username'); // Username from login\n    const userDataSDK = localStorage.getItem('onairos_user_data'); // SDK user data\n    \n    let userData = null;\n    \n    // Try to parse main user data\n    if (userDataStr) {\n      try {\n        userData = JSON.parse(userDataStr);\n      } catch (error) {\n        console.warn('⚠️ Failed to parse onairosUser from localStorage');\n      }\n    }\n    \n    // Try to parse SDK user data as fallback\n    if (!userData && userDataSDK) {\n      try {\n        userData = JSON.parse(userDataSDK);\n      } catch (error) {\n        console.warn('⚠️ Failed to parse onairos_user_data from localStorage');\n      }\n    }\n    \n    // Build comprehensive user info object\n    const userInfo = {\n      // User identification\n      username: userData?.email || userData?.username || username || null,\n      userId: userData?.userId || userData?.email || username || null,\n      email: userData?.email || null,\n      \n      // Authentication tokens\n      sessionToken: jwtToken || userData?.token || legacyToken || null,\n      jwtToken: jwtToken || userData?.token || null,\n      \n      // User metadata\n      isNewUser: userData?.isNewUser || false,\n      verified: userData?.verified || false,\n      onboardingComplete: userData?.onboardingComplete || false,\n      pinCreated: userData?.pinCreated || false,\n      \n      // Account details\n      accountInfo: userData?.accountInfo || null,\n      connectedAccounts: userData?.connectedAccounts || [],\n      \n      // Timestamps\n      lastLogin: userData?.lastLogin || null,\n      createdAt: userData?.createdAt || null,\n      \n      // Source tracking\n      source: 'localStorage_extraction',\n      extractedAt: new Date().toISOString()\n    };\n    \n    console.log('📋 Extracted user info from localStorage:', userInfo);\n    return userInfo;\n  } catch (error) {\n    console.error('❌ Error extracting user info from localStorage:', error);\n    return {\n      username: null,\n      userId: null,\n      sessionToken: null,\n      source: 'extraction_failed',\n      error: error.message\n    };\n  }\n};\n\n/**\n * Initialize user context for the current page\n * This should be called when the page loads to set up user context for the extension\n * @param {Object} userInfo - User information to initialize (optional, will auto-extract if not provided)\n */\nexport const initializeUserContext = async (userInfo = null) => {\n  console.log('🚀 Initializing Onairos user context...');\n  \n  // If no user info provided, extract from localStorage\n  if (!userInfo) {\n    userInfo = getUserInfoFromStorage();\n  }\n  \n  // First try to extract user info from URL (in case we're on an LLM platform)\n  const urlUserInfo = extractUserInfoFromURL();\n  \n  // Merge URL info with provided/extracted info (URL takes precedence)\n  const finalUserInfo = {\n    ...userInfo,\n    ...urlUserInfo\n  };\n  \n  if (finalUserInfo.username || finalUserInfo.userId) {\n    // Try to send to extension\n    const sent = await sendUserInfoToExtension(finalUserInfo);\n    \n    if (sent) {\n      console.log('✅ User context initialized successfully');\n    } else {\n      console.log('⚠️ Extension not available, user context stored locally');\n      // Store in localStorage as fallback\n      localStorage.setItem('onairos_user_context', JSON.stringify(finalUserInfo));\n    }\n    \n    return finalUserInfo;\n  } else {\n    console.log('⚠️ No user information available to initialize');\n    return null;\n  }\n};\n","import React from 'react';\nimport { openExtensionInstallPage, LLM_URLS } from '../utils/extensionDetection';\n\n/**\n * Extension Installation Prompt Component\n * \n * Displays when a user tries to connect to an LLM but doesn't have \n * the Onairos browser extension installed.\n */\nconst ExtensionInstallPrompt = ({ \n  open = false, \n  onClose, \n  platform = 'chatgpt',\n  onInstallClick = null \n}) => {\n  if (!open) return null;\n\n  const platformNames = {\n    chatgpt: 'ChatGPT',\n    claude: 'Claude',\n    gemini: 'Gemini',\n    grok: 'Grok'\n  };\n\n  const platformName = platformNames[platform] || 'LLM';\n  const platformUrl = LLM_URLS[platform] || '#';\n\n  const handleInstallClick = () => {\n    if (onInstallClick) {\n      onInstallClick(platform);\n    } else {\n      openExtensionInstallPage(platform);\n    }\n  };\n\n  const handleDirectVisit = () => {\n    window.open(platformUrl, '_blank');\n    if (onClose) onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n            </div>\n            <h2 className=\"text-xl font-bold text-gray-900\">\n              Install Onairos Extension\n            </h2>\n          </div>\n          \n          {/* Content */}\n          <div className=\"space-y-4 text-gray-700\">\n            <p>\n              To connect with <strong>{platformName}</strong> and enable personalized AI interactions, \n              you need the Onairos browser extension installed.\n            </p>\n            \n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold text-blue-900 mb-2\">🚀 What the extension does:</h3>\n              <ul className=\"list-disc ml-4 space-y-1 text-blue-800 text-sm\">\n                <li>Detects when you're on {platformName} and other LLM sites</li>\n                <li>Enables secure data sharing with your consent</li>\n                <li>Personalizes AI responses based on your preferences</li>\n                <li>Works seamlessly in the background</li>\n              </ul>\n            </div>\n\n            <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold text-amber-900 mb-2\">⚡ Quick Setup:</h3>\n              <ol className=\"list-decimal ml-4 space-y-1 text-amber-800 text-sm\">\n                <li>Click \"Install Extension\" below</li>\n                <li>Add the extension from Chrome Web Store</li>\n                <li>Return here and try connecting again</li>\n              </ol>\n            </div>\n            \n            <p className=\"text-sm text-gray-600\">\n              Don't want to install the extension? You can still visit{' '}\n              <a \n                href={platformUrl} \n                className=\"text-blue-600 hover:underline\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n              >\n                {platformUrl}\n              </a>\n              {' '}directly, but you won't get personalized AI features.\n            </p>\n          </div>\n          \n          {/* Actions */}\n          <div className=\"flex flex-col space-y-3 mt-6\">\n            <button\n              onClick={handleInstallClick}\n              className=\"w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium flex items-center justify-center\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              Install Onairos Extension\n            </button>\n            \n            <div className=\"flex space-x-3\">\n              <button\n                onClick={handleDirectVisit}\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm\"\n              >\n                Visit {platformName} Anyway\n              </button>\n              <button\n                onClick={onClose}\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n\n          {/* Footer */}\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\n            <p className=\"text-xs text-gray-500 text-center\">\n              The Onairos extension is free, secure, and respects your privacy. \n              <br />\n              <a href=\"https://onairos.uk/privacy\" className=\"text-blue-600 hover:underline\">\n                Learn more about our privacy policy\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtensionInstallPrompt;\n","import React, { useState, useCallback } from 'react';\nimport { openLLMWithExtensionCheck, detectOnairosExtension, getUserInfoFromStorage } from '../utils/extensionDetection';\nimport ExtensionInstallPrompt from './ExtensionInstallPrompt';\n\n/**\n * LLM Connector Manager Component\n * \n * Manages the connection flow for LLM platforms (ChatGPT, Claude, Gemini, Grok).\n * Handles extension detection and shows appropriate prompts.\n */\nconst LLMConnectorManager = ({ \n  children,\n  onConnectionChange = null,\n  username = null \n}) => {\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n  const [currentPlatform, setCurrentPlatform] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  /**\n   * Handle LLM connection attempt\n   * @param {string} platform - LLM platform name\n   * @param {Function} onSuccess - Callback for successful connection\n   * @param {Function} onError - Callback for connection error\n   */\n  const handleLLMConnect = useCallback(async (platform, onSuccess = null, onError = null) => {\n    if (isConnecting) {\n      console.log('⚠️ Already connecting, ignoring request');\n      return;\n    }\n\n    setIsConnecting(true);\n    setCurrentPlatform(platform);\n\n    try {\n      console.log(`🤖 Attempting to connect to ${platform}...`);\n\n      // Prepare user information for the browser extension\n      // First try to get comprehensive user info from localStorage\n      const storedUserInfo = getUserInfoFromStorage();\n      \n      const userInfo = {\n        // Use stored info as primary source, fallback to props\n        username: storedUserInfo.username || username,\n        userId: storedUserInfo.userId || storedUserInfo.username || username,\n        email: storedUserInfo.email,\n        sessionToken: storedUserInfo.sessionToken,\n        jwtToken: storedUserInfo.jwtToken,\n        \n        // User metadata\n        isNewUser: storedUserInfo.isNewUser,\n        verified: storedUserInfo.verified,\n        onboardingComplete: storedUserInfo.onboardingComplete,\n        pinCreated: storedUserInfo.pinCreated,\n        \n        // Account details\n        accountInfo: storedUserInfo.accountInfo,\n        connectedAccounts: storedUserInfo.connectedAccounts,\n        \n        // Add additional context\n        source: 'onairos_npm_connector',\n        connectorVersion: '3.4.2', // Updated version from package.json\n        timestamp: new Date().toISOString(),\n        platform: platform\n      };\n\n      // Use the extension detection utility with user info\n      const success = await openLLMWithExtensionCheck(\n        platform,\n        (missingPlatform) => {\n          // Extension is missing - show install prompt\n          console.log(`❌ Extension missing for ${missingPlatform}, showing install prompt`);\n          setCurrentPlatform(missingPlatform);\n          setShowInstallPrompt(true);\n        },\n        userInfo\n      );\n\n      if (success) {\n        // LLM was opened successfully\n        console.log(`✅ ${platform} opened successfully`);\n        \n        // Simulate connection after a short delay (like the original ChatGPT connector)\n        setTimeout(() => {\n          if (onConnectionChange) {\n            onConnectionChange(platform, true);\n          }\n          if (onSuccess) {\n            onSuccess(platform);\n          }\n          setIsConnecting(false);\n        }, 1000);\n      } else {\n        // Failed to open (popup blocked or other error)\n        console.log(`❌ Failed to open ${platform}`);\n        setIsConnecting(false);\n        \n        if (onError) {\n          onError(platform, 'Failed to open LLM platform');\n        }\n      }\n    } catch (error) {\n      console.error(`❌ Error connecting to ${platform}:`, error);\n      setIsConnecting(false);\n      \n      if (onError) {\n        onError(platform, error.message);\n      }\n    }\n  }, [isConnecting, onConnectionChange]);\n\n  /**\n   * Handle disconnection from LLM platform\n   * @param {string} platform - LLM platform name\n   */\n  const handleLLMDisconnect = useCallback((platform) => {\n    console.log(`🔌 Disconnecting from ${platform}`);\n    \n    if (onConnectionChange) {\n      onConnectionChange(platform, false);\n    }\n  }, [onConnectionChange]);\n\n  /**\n   * Close the extension install prompt\n   */\n  const handleCloseInstallPrompt = useCallback(() => {\n    setShowInstallPrompt(false);\n    setCurrentPlatform(null);\n    setIsConnecting(false);\n  }, []);\n\n  /**\n   * Handle extension installation click\n   */\n  const handleExtensionInstall = useCallback((platform) => {\n    console.log(`🔗 User clicked to install extension for ${platform}`);\n    // The ExtensionInstallPrompt component will handle opening the store\n    // We'll close the prompt after a delay to let the user install\n    setTimeout(() => {\n      setShowInstallPrompt(false);\n      setCurrentPlatform(null);\n      setIsConnecting(false);\n    }, 1000);\n  }, []);\n\n  /**\n   * Check extension status\n   * @returns {Promise<boolean>} True if extension is available\n   */\n  const checkExtensionStatus = useCallback(async () => {\n    return await detectOnairosExtension();\n  }, []);\n\n  // Provide context to children components\n  const contextValue = {\n    // Connection methods\n    connectToLLM: handleLLMConnect,\n    disconnectFromLLM: handleLLMDisconnect,\n    \n    // State\n    isConnecting,\n    currentPlatform,\n    \n    // Utilities\n    checkExtensionStatus,\n    \n    // User info\n    username\n  };\n\n  return (\n    <div data-llm-manager=\"true\">\n      {/* Render children with context */}\n      {React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            ...child.props,\n            llmConnectorManager: contextValue\n          });\n        }\n        return child;\n      })}\n\n      {/* Extension Install Prompt */}\n      <ExtensionInstallPrompt\n        open={showInstallPrompt}\n        platform={currentPlatform}\n        onClose={handleCloseInstallPrompt}\n        onInstallClick={handleExtensionInstall}\n      />\n    </div>\n  );\n};\n\n/**\n * Hook for using LLM Connector Manager context\n * @param {Object} props - Component props that might contain llmConnectorManager\n * @returns {Object} LLM connector manager context\n */\nexport const useLLMConnectorManager = (props) => {\n  return props.llmConnectorManager || {\n    connectToLLM: () => console.warn('LLM Connector Manager not available'),\n    disconnectFromLLM: () => console.warn('LLM Connector Manager not available'),\n    isConnecting: false,\n    currentPlatform: null,\n    checkExtensionStatus: () => Promise.resolve(false),\n    username: null\n  };\n};\n\nexport default LLMConnectorManager;\n","import React, { useEffect, useId, useState, useRef } from 'react';\nimport Lottie from 'lottie-react';\nimport personaAnim from '../../public/persona-anim.json';\nimport LLMConnectorManager from './LLMConnectorManager';\nconst chatgptIcon = 'https://anushkasirv.sirv.com/openai.png';\nconst claudeIcon = 'https://anushkasirv.sirv.com/claude-color.png';\nconst geminiIcon = 'https://anushkasirv.sirv.com/gemini-color.png';\nconst grokIcon = 'https://anushkasirv.sirv.com/grok.png';\n\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'ona_VvoHNg1fdCCUa9eBy4Iz3IfvXdgLfMFI7TNcyHLDKEadPogkbjAeE2iDOs6M7Aey',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web',\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true,\n};\n\nconst fadeSlideInKeyframes = `\n@keyframes fadeSlideIn {\n  from { opacity: 0; transform: translateX(var(--slide-x)); }\n  to { opacity: 1; transform: translateX(0); }\n}\n`;\n\nexport default function UniversalOnboarding({ onComplete, llmConnectorManager }) {\n  const lottieRef = useRef(null);\n  const lastFrameRef = useRef(0);\n  const rafRef = useRef(null);\n\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [selected, setSelected] = useState('Instagram');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // swipe state\n  const touchStartX = useRef(0);\n  const touchDeltaX = useRef(0);\n\n  const [vh, setVh] = useState(() => (typeof window !== 'undefined' ? window.innerHeight : 800));\n  useEffect(() => {\n    const onResize = () => setVh(window.innerHeight);\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  // Reset flow on every page load/refresh\n  useEffect(() => {\n    // Clear any persisted OAuth state on mount\n    localStorage.removeItem('onairos_oauth_platform');\n    localStorage.removeItem('onairos_oauth_return');\n  }, []);\n\n  const FOOTER_H = 88;\n\n  // persona stays as requested (background, unchanged placement)\n  const personaSide = Math.min(vh * 0.52, 500);\n  const PERSONA_TOP = 96;\n\n  // icon layout (restore tighter spacing on page 1; place the band lower)\n  const SLOT = Math.max(56, Math.min(64, Math.floor(vh * 0.07)));\n  const CIRCLE = 42;\n  const GAP_PAGE1 = 12;\n  const GAP_PAGE2 = 20;\n  const ACTIVE_SCALE = vh < 760 ? 1.12 : 1.22;\n\n  const ICONS_H = 84;\n\n  const igGradId = useId();\n\n  // ---- official brand SVGs (compact, consistent viewboxes) ----\n  const Brand = {\n    ChatGPT: <img src={chatgptIcon} alt=\"ChatGPT\" style={{ width: 22, height: 22, objectFit: 'contain' }} />,\n    Claude: <img src={claudeIcon} alt=\"Claude\" style={{ width: 22, height: 22, objectFit: 'contain' }} />,\n    Gemini: <img src={geminiIcon} alt=\"Gemini\" style={{ width: 22, height: 22, objectFit: 'contain' }} />,\n    Grok: <img src={grokIcon} alt=\"Grok\" style={{ width: 22, height: 22, objectFit: 'contain' }} />,\n    Instagram: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden style={{ width: 22, height: 22 }}>\n        <defs>\n          <radialGradient id={igGradId} cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FDBB4B\"/>\n            <stop offset=\"40%\" stopColor=\"#E95950\"/>\n            <stop offset=\"70%\" stopColor=\"#BC2A8D\"/>\n            <stop offset=\"100%\" stopColor=\"#4C68D7\"/>\n          </radialGradient>\n        </defs>\n        <path fill={`url(#${igGradId})`} d=\"M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5zm5 5.5A4.5 4.5 0 1 0 16.5 12 4.5 4.5 0 0 0 12 7.5zm0 7.4A2.9 2.9 0 1 1 14.9 12 2.9 2.9 0 0 1 12 14.9Zm5.35-8.25a1.15 1.15 0 1 0 1.15 1.15 1.15 1.15 0 0 0-1.15-1.15Z\"/>\n      </svg>\n    ),\n    YouTube: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden style={{ width: 22, height: 22 }}>\n        <path fill=\"#FF0000\" d=\"M22.54 6.42a3 3 0 0 0-2.11-2.12C18.49 3.75 12 3.75 12 3.75s-6.49 0-8.43.55A3 3 0 0 0 1.46 6.42 31.63 31.63 0 0 0 1 12a31.63 31.63 0 0 0 .46 5.58 3 3 0 0 0 2.11 2.12C5.51 20.25 12 20.25 12 20.25s6.49 0 8.43-.55a3 3 0 0 0 2.11-2.12A31.63 31.63 0 0 0 23 12a31.63 31.63 0 0 0-.46-5.58z\"/>\n        <path fill=\"#FFF\" d=\"M10 8.75v6.5l6-3.25-6-3.25z\"/>\n        </svg>\n      ),\n    Reddit: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden style={{ width: 22, height: 22 }}>\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#FF4500\"/>\n        <circle cx=\"8.75\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <circle cx=\"15.25\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M7.9 15c.8.8 2.3 1.05 4.1 1.05S15.3 15.8 16.1 15c.2-.2.2-.5 0-.7-.2-.2-.5-.2-.7 0-.6.6-1.9.85-3.4.85S9.3 14.9 8.7 14.3c-.2-.2-.5-.2-.7 0-.2.2-.2.5 0 .7z\"/>\n        </svg>\n      ),\n    LinkedIn: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden style={{ width: 22, height: 22 }}>\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"3\" fill=\"#0A66C2\"/>\n        <rect x=\"5\" y=\"9\" width=\"3\" height=\"10\" fill=\"#FFF\"/>\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"1.5\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M16.8 19H13.9v-5c0-1.2-.5-1.8-1.4-1.8-.9 0-1.6.6-1.6 1.8V19H8V9h2.8v1.3c.5-.8 1.4-1.5 2.7-1.5 2 0 3.3 1.3 3.3 3.7V19z\"/>\n        </svg>\n      ),\n    Twitter: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden style={{ width: 22, height: 22 }}>\n        <path fill=\"#1DA1F2\" d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"/>\n        </svg>\n      ),\n  };\n\n  const aiLinks = {\n    ChatGPT: 'https://chat.openai.com',\n    Claude: 'https://claude.ai',\n    Gemini: 'https://gemini.google.com',\n    Grok: 'https://grok.x.ai',\n  };\n\n  const descriptions = {\n    ChatGPT: <>We analyze your <strong className=\"font-semibold\">prompt style</strong> and <strong className=\"font-semibold\">chat history</strong> to match your writing and thinking patterns.</>,\n    Claude: <>We learn your <strong className=\"font-semibold\">document workflow</strong> and <strong className=\"font-semibold\">reasoning preferences</strong> to tune output format and detail.</>,\n    Gemini: <>We study your <strong className=\"font-semibold\">search patterns</strong> and <strong className=\"font-semibold\">multimodal usage</strong> to improve response accuracy.</>,\n    Grok: <>We adapt to your <strong className=\"font-semibold\">X posting style</strong> and <strong className=\"font-semibold\">meme literacy</strong> to match your tone.</>,\n    Twitter: <>We analyze your <strong className=\"font-semibold\">tweets</strong> and <strong className=\"font-semibold\">interests</strong> to understand your preferences.</>,\n    YouTube: <>We study your <strong className=\"font-semibold\">watch history</strong> and <strong className=\"font-semibold\">interactions</strong> to learn your interests.</>,\n    Reddit: <>We examine your <strong className=\"font-semibold\">search history</strong> and <strong className=\"font-semibold\">discussions</strong> to understand your interests.</>,\n    Instagram: <>We analyze your <strong className=\"font-semibold\">photos</strong> and <strong className=\"font-semibold\">interactions</strong> to learn visual preferences.</>,\n    LinkedIn: <>We study your <strong className=\"font-semibold\">professional graph</strong> and <strong className=\"font-semibold\">content</strong> to understand career interests.</>,\n  };\n\n  const allPlatforms = [\n    // Page 1\n    { name: 'Instagram', connector: 'instagram', icon: Brand.Instagram },\n    { name: 'YouTube', connector: 'youtube', icon: Brand.YouTube },\n    { name: 'ChatGPT', connector: 'chatgpt', icon: Brand.ChatGPT, directLink: aiLinks.ChatGPT },\n    // Page 2\n    { name: 'Claude', connector: 'claude', icon: Brand.Claude, directLink: aiLinks.Claude },\n    { name: 'Gemini', connector: 'gemini', icon: Brand.Gemini, directLink: aiLinks.Gemini },\n    { name: 'Twitter', connector: 'twitter', icon: Brand.Twitter },\n    // Page 3\n    { name: 'LinkedIn', connector: 'linkedin', icon: Brand.LinkedIn },\n    { name: 'Reddit', connector: 'reddit', icon: Brand.Reddit },\n    { name: 'Grok', connector: 'grok', icon: Brand.Grok, directLink: aiLinks.Grok },\n  ];\n\n  const getPlatformsForPage = (page) => {\n    if (page === 1) return allPlatforms.slice(0, 3);\n    if (page === 2) return allPlatforms.slice(3, 6);\n    return allPlatforms.slice(6);\n  };\n\n  const platforms = getPlatformsForPage(currentPage);\n\n  useEffect(() => {\n    const p = localStorage.getItem('onairos_oauth_platform');\n    if (p) {\n      localStorage.removeItem('onairos_oauth_platform');\n      localStorage.removeItem('onairos_oauth_return');\n      setConnectedAccounts((s) => ({ ...s, [p]: true }));\n    }\n  }, []);\n\n  async function connectToPlatform(name) {\n    const plat = allPlatforms.find((p) => p.name === name);\n    if (!plat) return false;\n    try {\n      // For direct-link platforms (no OAuth), mark connected immediately and return\n      if (plat.directLink) {\n        setConnectedAccounts((s) => ({ ...s, [name]: true }));\n        setIsConnecting(false);\n        setConnectingPlatform(null);\n        return true;\n      }\n\n      // Immediately reflect selection in UI without spinner while starting OAuth\n      setConnectedAccounts((s) => ({ ...s, [name]: true }));\n      setIsConnecting(true);\n      setConnectingPlatform(name);\n      const username = localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com';\n\n      const res = await fetch(`${sdkConfig.baseUrl}/${plat.connector}/authorize`, {\n        method: 'POST', headers: { 'x-api-key': sdkConfig.apiKey, 'Content-Type': 'application/json' },\n        body: JSON.stringify({ session: { username } }),\n      });\n      if (!res.ok) throw new Error('auth failed');\n      const data = await res.json();\n\n      const candidates = (\n        {\n          youtube: ['youtubeURL','youtubeUrl','youtube_url'],\n          linkedin: ['linkedinURL','linkedinUrl','linkedin_url'],\n          reddit: ['redditURL','redditUrl','reddit_url'],\n          pinterest: ['pinterestURL','pinterestUrl','pinterest_url'],\n          instagram: ['instagramURL','instagramUrl','instagram_url'],\n          github: ['githubURL','githubUrl','github_url'],\n          facebook: ['facebookURL','facebookUrl','facebook_url'],\n          gmail: ['gmailURL','gmailUrl','gmail_url'],\n        }[plat.connector]\n      ) || [`${plat.connector}URL`, `${plat.connector}Url`, `${plat.connector}_url`, 'platformURL', 'authUrl', 'url'];\n\n      let oauthUrl = null; for (const k of candidates) if (data[k]) { oauthUrl = data[k]; break; }\n      if (!oauthUrl) throw new Error('no url');\n\n      const popup = window.open(oauthUrl, `${plat.connector}_oauth`, 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\n      if (!popup) throw new Error('popup blocked');\n\n      let touched = false; const it = setInterval(() => {\n        try { if (popup.location && popup.location.hostname === 'onairos.uk') { touched = true; popup.close(); } } catch { if (!touched) touched = true; }\n        try { if (popup.closed) { clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } } catch {}\n      }, 800);\n\n      setTimeout(() => { try { if (!popup.closed && touched) popup.close(); } catch {} }, 10000);\n      setTimeout(() => { if (!popup.closed) { popup.close(); clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } }, 300000);\n      return true;\n    } catch {\n      // On failure, revert the optimistic toggle\n      setConnectedAccounts((s) => ({ ...s, [name]: false }));\n      setIsConnecting(false); setConnectingPlatform(null); return false;\n    }\n  }\n\n  const handleSwitch = async (name, llmConnectorManager = null) => {\n    // Don't allow toggling other platforms while one is connecting\n    if (isConnecting && connectingPlatform !== name) return;\n    \n    const on = !!connectedAccounts[name];\n    \n    if (on) {\n      // Disconnect - always allow immediate toggle off\n      console.log(`🔄 Disconnecting ${name}`);\n      setConnectedAccounts((s) => ({ ...s, [name]: false }));\n      setIsConnecting(false);\n      setConnectingPlatform(null);\n    } else {\n      // Connect\n      console.log(`🔄 Connecting ${name}`);\n      const platform = allPlatforms.find(p => p.name === name);\n      \n      // Check if this is an LLM platform that should use extension detection\n      if (platform && platform.directLink) {\n        // For AI platforms: open their website and auto-toggle\n        window.open(platform.directLink, '_blank');\n        setConnectedAccounts((s) => ({ ...s, [name]: true }));\n        \n        // Also try LLM Connector Manager if available\n        if (llmConnectorManager) {\n          const platformKey = platform.connector;\n          llmConnectorManager.connectToLLM(\n            platformKey,\n            (connectedPlatform) => {\n              console.log(`✅ ${connectedPlatform} connected via extension`);\n            },\n            (errorPlatform, error) => {\n              console.error(`❌ ${errorPlatform} connection error:`, error);\n            }\n          );\n        }\n      } else {\n        // Use traditional OAuth flow for social media platforms\n        await connectToPlatform(name);\n      }\n    }\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  useEffect(() => {\n    if (!lottieRef.current) return;\n    const totalFrames = (personaAnim.op || 0) - (personaAnim.ip || 0);\n    const TOTAL_PLATFORMS = 9; // Total number of platforms across all pages\n    const progress = connectedCount / TOTAL_PLATFORMS;\n    const target = Math.max(0, Math.floor(progress * totalFrames));\n    const start = lastFrameRef.current || 0;\n    const duration = 420; const startTs = performance.now();\n    const step = (now) => {\n      const t = Math.min(1, (now - startTs) / duration);\n      const eased = t < 0.5 ? 2*t*t : -1 + (4 - 2*t)*t;\n      const frame = Math.floor(start + (target - start) * eased);\n      lottieRef.current.goToAndStop(frame, true);\n      if (t < 1) rafRef.current = requestAnimationFrame(step); else lastFrameRef.current = target;\n    };\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    rafRef.current = requestAnimationFrame(step);\n    return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); };\n  }, [connectedCount]);\n\n  // swipe handlers for smooth paging\n  const onTouchStart = (e) => { touchStartX.current = e.touches[0].clientX; touchDeltaX.current = 0; };\n  const onTouchMove  = (e) => { touchDeltaX.current = e.touches[0].clientX - touchStartX.current; };\n  const onTouchEnd   = () => {\n    const dx = touchDeltaX.current; const THRESH = 40;\n    if (dx < -THRESH && currentPage < 3) setCurrentPage(currentPage + 1);\n    else if (dx > THRESH && currentPage > 1) setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <LLMConnectorManager\n      onConnectionChange={(platform, connected) => {\n        const platformName = platform.charAt(0).toUpperCase() + platform.slice(1);\n        const displayName = platformName === 'Chatgpt' ? 'ChatGPT' : platformName;\n        setConnectedAccounts((s) => ({ ...s, [displayName]: connected }));\n      }}\n      username={localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com'}\n    >\n      <style dangerouslySetInnerHTML={{ __html: fadeSlideInKeyframes }} />\n      <div\n        className=\"relative w-full h-full grid overflow-hidden\"\n        style={{\n          height: Math.min('90vh', Math.max(600, Math.min(720, vh * 0.9))),\n          minHeight: 580,\n          maxHeight: 720,\n          gridTemplateRows: 'auto 1fr auto',\n        }}\n      >\n        {/* persona bg */}\n        <div\n          aria-hidden\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: PERSONA_TOP,\n            transform: 'translateX(-50%)',\n            width: personaSide,\n            height: personaSide,\n            zIndex: 0,\n            pointerEvents: 'none',\n            opacity: 0.95,\n          }}\n        >\n          <div className=\"overflow-hidden rounded-[28px] w-full h-full\">\n            <Lottie\n              lottieRef={lottieRef}\n              animationData={personaAnim}\n              autoplay={false}\n              loop={false}\n              style={{ width: '100%', height: '100%' }}\n            />\n        </div>\n      </div>\n\n        {/* header */}\n        <div className=\"px-6 pt-16 pb-4 text-center z-10\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 leading-tight\">Connect App Data</h1>\n          <p className=\"text-gray-600 text-base\">More Connections, Better Personalization.</p>\n        </div>\n\n        {/* middle scrollable */}\n        <div className=\"min-h-0 overflow-y-auto px-6 flex flex-col\" style={{ zIndex: 10, position: 'relative' }}>\n          <div className=\"flex-1\" />\n          {/* icons */}\n          <div className=\"w-full mb-3\" style={{ zIndex: 15, position: 'relative' }}>\n            <div className=\"grid w-full\" onTouchStart={onTouchStart} onTouchMove={onTouchMove} onTouchEnd={onTouchEnd} style={{ height: ICONS_H, gridAutoFlow: 'column', gridTemplateColumns: `repeat(${platforms.length}, minmax(0,1fr))`, columnGap: currentPage === 1 ? GAP_PAGE1 : GAP_PAGE2, alignItems: 'center', justifyItems: 'center', paddingInline: 8 }}>\n              {platforms.map((p, idx) => {\n                const on = !!connectedAccounts[p.name];\n                const isSel = selected === p.name;\n                const shift = (currentPage === 1 ? idx : idx - 2) * 14;\n                return (\n                  <div key={p.name} style={{ opacity: 0, transform: `translateX(${shift}px)`, animation: 'fadeSlideIn 0.28s forwards', ['--slide-x']: `${shift}px` }}>\n                    <button type=\"button\" onClick={() => { setSelected(p.name); handleSwitch(p.name, llmConnectorManager); }} className=\"grid place-items-center outline-none\" style={{ width: SLOT, height: SLOT }} title={p.name}>\n                      <div className={`rounded-full border-3 flex items-center justify-center shadow transition-all ${on ? 'border-blue-600 shadow-blue-500/50' : 'border-gray-300 hover:border-gray-400'} bg-white`} style={{ width: CIRCLE, height: CIRCLE, transform: `scale(${isSel ? ACTIVE_SCALE : 1})` }}>\n                        {p.icon}\n                      </div>\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          {/* dots */}\n          <div className=\"flex justify-center gap-4 mb-3\">\n            {[1, 2, 3].map((n) => (\n              <button key={n} onClick={() => setCurrentPage(n)} style={{ width: 12, height: 12 }}>\n                <span className={`block rounded-full ${currentPage === n ? 'bg-blue-600 scale-110' : 'bg-gray-300'} transition-transform`} style={{ width: 12, height: 12 }} />\n              </button>\n                ))}\n              </div>\n          {/* card */}\n          <div className=\"rounded-2xl bg-white shadow-sm border border-gray-200 px-4 py-2.5 mx-auto mb-2\" style={{ width: 'min(420px,90%)' }}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-gray-900 font-medium text-sm\">{selected}</div>\n              <button type=\"button\" role=\"switch\" aria-checked={!!connectedAccounts[selected]} onClick={() => handleSwitch(selected, llmConnectorManager)} disabled={isConnecting && connectingPlatform !== selected} className={`relative inline-flex items-center transition-colors ${connectedAccounts[selected] ? 'bg-black' : 'bg-gray-200'} rounded-full`} style={{ width: 44, height: 26 }}>\n                <span className=\"absolute bg-white rounded-full shadow\" style={{ width: 18, height: 18, transform: connectedAccounts[selected] ? 'translateX(20px)' : 'translateX(5px)', transition: 'transform 160ms ease' }} />\n              </button>\n            </div>\n            <div className=\"mt-1.5 text-xs text-gray-700 leading-4 bg-gray-50 rounded-xl px-3 py-2\">\n              {descriptions[selected] || null}\n            </div>\n          </div>\n        </div>\n\n        {/* footer anchored */}\n        <div className=\"px-6 pb-4 pt-3 bg-gradient-to-t from-white via-white/90 to-transparent z-20\">\n          <div className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\" onClick={() => { const connected = Object.entries(connectedAccounts).filter(([, v]) => v).map(([k]) => k); onComplete?.({ connectedAccounts: connected, totalConnections: connected.length }); }}>\n            Update\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n          </div>\n          <div onClick={() => onComplete?.({ connectedAccounts: [], totalConnections: 0 })} className=\"w-full text-gray-600 text-base font-medium py-2 text-center cursor-pointer hover:text-gray-800 transition-colors\">Skip</div>\n        </div>\n      </div>\n    </LLMConnectorManager>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [pinRequirements, setPinRequirements] = useState({\n    length: false,\n    uppercase: false,\n    number: false,\n  });\n\n  // Check PIN requirements\n  useEffect(() => {\n    setPinRequirements({\n      length: pin.length >= 6,\n      uppercase: /[A-Z]/.test(pin),\n      number: /\\d/.test(pin),\n    });\n  }, [pin]);\n\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\n\n  const handleSubmit = () => {\n    if (allRequirementsMet) {\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\n        </div>\n\n        <div className=\"mb-6 flex-shrink-0\">\n          <input\n            type=\"password\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-white\"\n            placeholder=\"Enter your PIN\"\n            maxLength={20}\n            style={{\n              color: '#000000',\n              WebkitTextFillColor: '#000000',\n              backgroundColor: '#FFFFFF'\n            }}\n          />\n        </div>\n\n        {/* Scrollable requirements list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-3 pb-4\">\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.length && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.uppercase && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.number && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain a number.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\n            allRequirementsMet \n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n          }`}\n          onClick={allRequirementsMet ? handleSubmit : undefined}\n        >\n          Continue\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Profile', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: 'User',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'preferences', \n    name: 'User Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: 'Grid3X3',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  },\n  { \n    id: 'personality', \n    name: 'Personality Traits', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  }\n];\n\n// Data Type Toggle Component with compact checkbox design\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const handleToggle = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  const getIconComponent = (iconName) => {\n    const iconProps = { className: \"w-4 h-4 text-gray-600\" };\n    \n    switch (iconName) {\n      case 'User':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        );\n      case 'Grid3X3':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n          </svg>\n        );\n      case 'Brain':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return <span className=\"text-lg\">{iconName}</span>;\n    }\n  };\n\n            return (\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center gap-4\">\n                        <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0\">\n                            {getIconComponent(dataType.icon)}\n                        </div>\n                        <div className=\"min-w-0 flex-1\">\n                            <span className=\"font-medium text-gray-900 text-sm\">{dataType.name}</span>\n                        </div>\n                    </div>\n      <div\n        onClick={handleToggle}\n        className={`w-5 h-5 rounded border-2 flex items-center justify-center cursor-pointer transition-colors flex-shrink-0 ${\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\n        }`}\n      >\n        {isEnabled && (\n          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = false, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col min-h-0\">\n      {/* Content - Flexible center area with proper constraints */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0\" style={{ minHeight: 'calc(100vh - 200px)' }}>\n        {/* Icon Flow */}\n        <div className=\"mb-4 flex justify-center items-center gap-4 flex-shrink-0\">\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </div>\n          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <span className=\"text-xl font-serif font-bold text-black\">B</span>\n          </div>\n        </div>\n\n        {/* Title Section */}\n        <div className=\"mb-4 flex-shrink-0\">\n          <h1 className=\"text-xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            {appName} wants to personalize your experience\n          </h1>\n          <p className=\"text-gray-600 text-sm\">Choose what to share:</p>\n        </div>\n\n        {/* Consent Options - Scrollable area */}\n        <div className=\"flex-1 overflow-y-auto min-h-0\">\n          <div className=\"space-y-4 pb-4\">\n            {dataTypes.map((dataType, index) => (\n              <DataTypeToggle\n                key={dataType.id}\n                dataType={dataType}\n                isEnabled={selectedData[dataType.id]}\n                onToggle={handleDataToggle}\n                isLast={index === dataTypes.length - 1}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom with guaranteed visibility */}\n      <div className=\"px-6 pb-6 pt-3 flex-shrink-0 space-y-2 bg-white border-t border-gray-100\">\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-3 text-sm font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          onClick={fetchUserData}\n          disabled={isLoadingApi || selectedCount === 0}\n        >\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ cancelled: true })}\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-3 text-sm font-medium text-center cursor-pointer transition-colors\"\n        >\n          Decline\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div className=\"mt-3 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\n            <p className=\"text-xs\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = false }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from \"react\";\nimport Lottie from 'lottie-react';\nimport rainAnim from '../../public/rain-anim.json';\n\nexport default function LoadingScreen({ onComplete }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dotCount, setDotCount] = useState(0);\n\n  const loadingStates = [\n    { message: \"Validating PIN and continuing training\", progress: 20 },\n    { message: \"Uploading model to secure storage\", progress: 40 },\n    { message: \"Running test inference\", progress: 60 },\n    { message: \"Storing results in databases\", progress: 80 },\n    { message: \"Complete!\", progress: 100 },\n  ];\n\n  useEffect(() => {\n    const stateInterval = setInterval(() => {\n      setCurrentStep((prev) => {\n        const nextStep = prev + 1;\n        if (nextStep >= loadingStates.length) {\n          // Loading complete, call onComplete after a short delay\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return prev; // Keep at last step\n        }\n        return nextStep;\n      });\n    }, 3000); // Change state every 3 seconds\n\n    return () => clearInterval(stateInterval);\n  }, [loadingStates.length, onComplete]);\n\n  useEffect(() => {\n    const dotInterval = setInterval(() => {\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\n    }, 500); // Change dots every 500ms\n\n    return () => clearInterval(dotInterval);\n  }, []);\n\n  const currentState = loadingStates[currentStep];\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647, pointerEvents: 'auto' }}>\n      {/* Modal - Full height from bottom */}\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n        {/* Header */}\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\n        </div>\n\n        {/* Content - Rain animation and loading state */}\n        <div className=\"flex-1 flex flex-col px-6\">\n          {/* Rain Animation */}\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div style={{ width: '100%', maxWidth: '400px', aspectRatio: '1' }}>\n              <Lottie\n                animationData={rainAnim}\n                loop={true}\n                autoplay={true}\n                style={{ width: '100%', height: '100%' }}\n              />\n            </div>\n          </div>\n\n          {/* Loading State - Positioned at bottom */}\n          <div className=\"flex-shrink-0 pb-12\">\n            <div className=\"text-center\">\n              <h1 className=\"font-bold text-gray-900 leading-tight mb-6\" style={{ fontSize: 'clamp(16px, 4vw, 20px)' }}>\n                {currentState.message}\n                {currentState.message !== \"Complete!\" && (\n                  <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\n                )}\n              </h1>\n\n              <div className=\"mx-auto\" style={{ width: 'clamp(200px, 50vw, 300px)' }}>\n                <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                  <div\n                    className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\n                    style={{ width: `${currentState.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom spacing */}\n        <div className=\"h-20 flex-shrink-0\"></div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} ","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: 'clamp(8px, 2vw, 16px) clamp(16px, 4vw, 32px) clamp(6px, 1.5vw, 12px)'\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: 'clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(20px, 5vw, 28px)',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 clamp(6px, 1.5vw, 12px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.2'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(14px, 3.5vw, 18px)',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 clamp(20px, 5vw, 40px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: 'clamp(40px, 8vw, 56px)',\n    height: 'clamp(40px, 8vw, 56px)',\n    margin: '0 auto clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(20px, 5vw, 28px)'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 2147483647,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 200ms ease',\n    willChange: 'opacity',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '90vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    transform: 'translateY(0)',\n    transition: 'transform 220ms ease, opacity 220ms ease',\n    willChange: 'transform, opacity',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport LoadingScreen from './components/LoadingScreen.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = false, // Production mode by default - set to true for testing\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true },\n  priorityPlatform = null // Platform to prioritize (e.g., 'gmail', 'pinterest', 'linkedin')\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called - resetting flow');\n      console.log('🔥 testMode prop:', testMode);\n      console.log('🔥 window.onairosApiKey:', window.onairosApiKey);\n      // ALWAYS reset flow on open to start fresh every time\n      setCurrentFlow('welcome');\n      setUserData(null);\n      try { localStorage.removeItem('onairosUser'); } catch {}\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n    // Reset flow and session so next open starts fresh\n    setCurrentFlow('welcome');\n    try { localStorage.removeItem('onairosUser'); } catch {}\n    setUserData(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to loading flow\n    setCurrentFlow('loading');\n  };\n\n  const handleLoadingComplete = () => {\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    // Use centralized close to also reset flow and session\n    handleCloseOverlay();\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Enhanced user data formatting for better display\n    const { logFormattedUserData } = require('./utils/userDataFormatter');\n    \n    // Add user data to the result for comprehensive formatting\n    const completeResult = {\n      ...formattedResult,\n      userData: updatedUserData\n    };\n\n    // Log formatted user data for better readability\n    const enhancedResult = logFormattedUserData(completeResult);\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with enhanced result');\n    if (onComplete) {\n      try {\n        onComplete(enhancedResult);\n        console.log('🔥 onComplete callback executed successfully with enhanced formatting');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n            webpageName={webpageName}\n            appIcon={appIcon}\n            testMode={testMode}\n          />\n        );\n      case 'email':\n        return (\n          <div className=\"h-[min(85vh,700px)]\">\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n          </div>\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n            priorityPlatform={priorityPlatform}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'email' ? (\n            // Special case for email - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={handleCloseOverlay}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Email Content */}\n                <div className=\"h-[min(85vh,700px)]\">\n                  <EmailAuth \n                    onSuccess={handleEmailAuthSuccess}\n                    testMode={testMode}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                  priorityPlatform={priorityPlatform}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'dataRequest' ? (\n            // Special case for dataRequest - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('loading')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* DataRequest Content */}\n                <DataRequest \n                  onComplete={handleDataRequestComplete}\n                  userEmail={userData?.email}\n                  requestData={requestData}\n                  appName={webpageName}\n                  autoFetch={autoFetch}\n                  testMode={testMode}\n                  appIcon={appIcon}\n                  connectedAccounts={userData?.connectedAccounts || {}}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'pin' ? (\n            // Special case for pin - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\" style={{ zIndex: 2147483647 }}>\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* PinSetup Content - Must take remaining height */}\n                <div className=\"flex-1 min-h-0\">\n                  <PinSetup \n                    onComplete={handlePinSetupComplete}\n                    onBack={() => setCurrentFlow('onboarding')}\n                    userEmail={userData?.email}\n                  />\n                </div>\n            </div>\n          </div>\n          ) : currentFlow === 'loading' ? (\n            // Loading screen\n            <LoadingScreen onComplete={handleLoadingComplete} />\n        ) : (\n            // All other flows use PageLayout wrapper\n          <ModalPageLayout\n            visible={showOverlay}\n            onClose={handleCloseOverlay}\n              showBackButton={currentFlow === 'training'}\n            onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n              if (currentFlow === 'onboarding') setCurrentFlow('email');\n              if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n              if (currentFlow === 'training') setCurrentFlow('pin');\n            }}\n            title={getFlowTitle()}\n            subtitle={getFlowSubtitle()}\n            icon={getFlowIcon()}\n            centerContent={true}\n          >\n            {renderCurrentFlow()}\n          </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","/**\n * Enhanced User Data Formatter for onComplete Callback\n * Provides structured, readable formatting of Onairos user data\n */\n\n/**\n * Formats user data for better readability in onComplete callback\n * @param {Object} result - The complete result object from data request\n * @returns {Object} Enhanced result with formatted user data display\n */\nexport function formatUserDataForDisplay(result) {\n  if (!result) return result;\n\n  const formatted = { ...result };\n  \n  // Create a structured summary of the user data\n  const userDataSummary = {\n    // Basic request information\n    requestInfo: {\n      timestamp: result.timestamp || new Date().toISOString(),\n      appName: result.appName || 'Unknown App',\n      userHash: result.userHash || 'Unknown User',\n      testMode: result.testMode || false,\n      dataTypesRequested: result.approvedData || []\n    },\n    \n    // User authentication and profile data\n    userProfile: {\n      email: result.userData?.email || 'Not provided',\n      userType: result.userData?.userType || 'Unknown',\n      onboardingComplete: result.userData?.onboardingComplete || false,\n      pinCreated: result.userData?.pinCreated || false,\n      trainingComplete: result.userData?.trainingComplete || false,\n      modelReady: result.userData?.modelReady || false\n    },\n    \n    // Connected platforms/accounts\n    connectedAccounts: formatConnectedAccounts(result.userData?.connectedAccounts || []),\n    \n    // API response data (personality, preferences, etc.)\n    aiData: formatAIResponseData(result.apiResponse),\n    \n    // Success status and any errors\n    status: {\n      success: result.success || false,\n      hasApiResponse: !!result.apiResponse,\n      hasErrors: !!result.error || !!result.apiError\n    }\n  };\n\n  // Add the formatted summary to the result\n  formatted.userDataSummary = userDataSummary;\n  \n  // Create a pretty-printed version for console logging\n  formatted.prettyPrint = createPrettyPrintVersion(userDataSummary);\n  \n  return formatted;\n}\n\n/**\n * Formats connected accounts data\n * @param {Array} accounts - Array of connected account objects\n * @returns {Object} Formatted accounts summary\n */\nfunction formatConnectedAccounts(accounts) {\n  if (!Array.isArray(accounts) || accounts.length === 0) {\n    return {\n      count: 0,\n      platforms: [],\n      summary: 'No connected accounts'\n    };\n  }\n\n  return {\n    count: accounts.length,\n    platforms: accounts.map(account => ({\n      name: account.platform || account.name || 'Unknown Platform',\n      status: account.status || 'Unknown',\n      connectedAt: account.connectedAt || 'Unknown date',\n      hasData: account.hasData || false\n    })),\n    summary: `${accounts.length} platform(s) connected: ${accounts.map(a => a.platform || a.name).join(', ')}`\n  };\n}\n\n/**\n * Formats AI response data (personality scores, traits, etc.)\n * @param {Object} apiResponse - The API response containing AI data\n * @returns {Object} Formatted AI data summary\n */\nfunction formatAIResponseData(apiResponse) {\n  if (!apiResponse) {\n    return {\n      available: false,\n      summary: 'No AI data available'\n    };\n  }\n\n  const aiData = {\n    available: true,\n    dataTypes: []\n  };\n\n  // Check for personality data\n  if (apiResponse.InferenceResult?.traits || apiResponse.personalityDict || apiResponse.traits) {\n    const personalityData = {\n      type: 'personality',\n      available: true\n    };\n\n    // If we have dictionary format, use it for better readability\n    if (apiResponse.personalityDict) {\n      personalityData.data = apiResponse.personalityDict;\n      personalityData.summary = `Personality analysis with ${Object.keys(apiResponse.personalityDict).length} traits`;\n    } else if (apiResponse.InferenceResult?.traits) {\n      personalityData.data = apiResponse.InferenceResult.traits;\n      personalityData.summary = `Personality scores array with ${apiResponse.InferenceResult.traits.length} values`;\n    } else if (apiResponse.traits) {\n      personalityData.data = apiResponse.traits;\n      personalityData.summary = `Personality traits with ${Array.isArray(apiResponse.traits) ? apiResponse.traits.length : Object.keys(apiResponse.traits).length} items`;\n    }\n\n    aiData.dataTypes.push(personalityData);\n  }\n\n  // Check for preferences/traits data\n  if (apiResponse.traitResult || apiResponse.traitDict) {\n    const preferencesData = {\n      type: 'preferences',\n      available: true\n    };\n\n    if (apiResponse.traitDict) {\n      preferencesData.data = apiResponse.traitDict;\n      preferencesData.summary = `Preferences analysis with ${Object.keys(apiResponse.traitDict).length} categories`;\n    } else if (apiResponse.traitResult) {\n      preferencesData.data = apiResponse.traitResult;\n      preferencesData.summary = `Trait results with ${Array.isArray(apiResponse.traitResult) ? apiResponse.traitResult.length : Object.keys(apiResponse.traitResult).length} items`;\n    }\n\n    aiData.dataTypes.push(preferencesData);\n  }\n\n  // Check for basic info/output\n  if (apiResponse.InferenceResult?.output || apiResponse.output) {\n    aiData.dataTypes.push({\n      type: 'basic_info',\n      available: true,\n      data: apiResponse.InferenceResult?.output || apiResponse.output,\n      summary: 'Basic user information and insights'\n    });\n  }\n\n  // Create overall summary\n  aiData.summary = aiData.dataTypes.length > 0 \n    ? `AI analysis complete with ${aiData.dataTypes.length} data type(s): ${aiData.dataTypes.map(d => d.type).join(', ')}`\n    : 'AI data structure present but no recognized data types found';\n\n  return aiData;\n}\n\n/**\n * Creates a pretty-printed version for console logging\n * @param {Object} userDataSummary - The formatted user data summary\n * @returns {string} Pretty-printed string for console output\n */\nfunction createPrettyPrintVersion(userDataSummary) {\n  const lines = [];\n  \n  lines.push('🎉 ONAIROS USER DATA SUMMARY');\n  lines.push('=' .repeat(50));\n  \n  // Request Info\n  lines.push('\\n📋 REQUEST INFORMATION:');\n  lines.push(`   App: ${userDataSummary.requestInfo.appName}`);\n  lines.push(`   User: ${userDataSummary.requestInfo.userHash}`);\n  lines.push(`   Mode: ${userDataSummary.requestInfo.testMode ? 'Test' : 'Production'}`);\n  lines.push(`   Data Types: ${userDataSummary.requestInfo.dataTypesRequested.join(', ') || 'None'}`);\n  lines.push(`   Timestamp: ${new Date(userDataSummary.requestInfo.timestamp).toLocaleString()}`);\n  \n  // User Profile\n  lines.push('\\n👤 USER PROFILE:');\n  lines.push(`   Email: ${userDataSummary.userProfile.email}`);\n  lines.push(`   Type: ${userDataSummary.userProfile.userType}`);\n  lines.push(`   Onboarding: ${userDataSummary.userProfile.onboardingComplete ? '✅' : '❌'}`);\n  lines.push(`   PIN Setup: ${userDataSummary.userProfile.pinCreated ? '✅' : '❌'}`);\n  lines.push(`   Training: ${userDataSummary.userProfile.trainingComplete ? '✅' : '❌'}`);\n  lines.push(`   Model Ready: ${userDataSummary.userProfile.modelReady ? '✅' : '❌'}`);\n  \n  // Connected Accounts\n  lines.push('\\n🔗 CONNECTED ACCOUNTS:');\n  lines.push(`   ${userDataSummary.connectedAccounts.summary}`);\n  if (userDataSummary.connectedAccounts.platforms.length > 0) {\n    userDataSummary.connectedAccounts.platforms.forEach(platform => {\n      lines.push(`   • ${platform.name}: ${platform.status} ${platform.hasData ? '(has data)' : '(no data)'}`);\n    });\n  }\n  \n  // AI Data\n  lines.push('\\n🤖 AI ANALYSIS DATA:');\n  lines.push(`   ${userDataSummary.aiData.summary}`);\n  if (userDataSummary.aiData.dataTypes.length > 0) {\n    userDataSummary.aiData.dataTypes.forEach(dataType => {\n      lines.push(`   • ${dataType.type.toUpperCase()}: ${dataType.summary}`);\n    });\n  }\n  \n  // Status\n  lines.push('\\n✅ STATUS:');\n  lines.push(`   Success: ${userDataSummary.status.success ? '✅' : '❌'}`);\n  lines.push(`   API Response: ${userDataSummary.status.hasApiResponse ? '✅' : '❌'}`);\n  lines.push(`   Errors: ${userDataSummary.status.hasErrors ? '❌ Yes' : '✅ None'}`);\n  \n  lines.push('\\n' + '=' .repeat(50));\n  \n  return lines.join('\\n');\n}\n\n/**\n * Console logging helper that prints formatted user data\n * @param {Object} result - The result object from onComplete\n */\nexport function logFormattedUserData(result) {\n  const formatted = formatUserDataForDisplay(result);\n  \n  console.log('\\n' + formatted.prettyPrint + '\\n');\n  \n  // Also log the structured data for programmatic access\n  console.log('📊 Structured User Data Summary:', formatted.userDataSummary);\n  \n  return formatted;\n}\n\nexport default {\n  formatUserDataForDisplay,\n  logFormattedUserData\n};\n"],"names":["WelcomeScreen","_ref","onContinue","onClose","useEffect","script","document","createElement","src","async","head","appendChild","existingScript","querySelector","removeChild","React","className","style","height","alt","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","COLORS","btnGradStart","btnGradEnd","btnLabel","btnBorder","iconCircleGradientStart","iconCircleGradientEnd","background","backgroundSecondary","textPrimary","textSecondary","textMuted","border","borderLight","success","error","warning","info","hover","pressed","focus","IconCircle","size","children","concat","width","borderRadius","fontSize","color","backgroundColor","_ref2","label","iconRight","loading","disabled","testId","textStyle","centered","props","_objectWithoutProperties","_excluded","setPressed","useState","buttonStyle","_objectSpread","position","overflow","minWidth","maxWidth","margin","cursor","opacity","boxShadow","transition","pressedOverlayStyle","top","left","right","bottom","labelStyle","fontFamily","fontWeight","textAlign","_extends","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","display","justifyContent","alignItems","EmailAuth","onSuccess","testMode","email","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","setTimeout","firstInput","handleEmailSubmit","e","preventDefault","test","validateEmail","doFetchWithRetry","url","options","lastErr","attempts","arguments","length","undefined","i","res","fetch","ok","body","json","Error","status","_unused","err","Promise","r","console","log","baseUrl","window","onairosBaseUrl","apiKey","onairosApiKey","hasWindowKey","viteKey","headers","Authorization","response","method","JSON","stringify","trim","toLowerCase","data","handleGoogleAuth","_localStorage$getItem","sdkConfig","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","toString","popup","open","checkPopup","setInterval","closed","clearInterval","handleCodeSubmit","_unused2","simulatedResponse","verified","token","Date","now","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","toISOString","testAccount","_data$user","userData","jwtToken","user","fallbackResponse","type","value","onChange","target","placeholder","required","WebkitTextFillColor","lineHeight","Array","from","_","index","key","maxLength","newCode","join","_e$target$parentEleme","nextInput","parentElement","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","PrimaryButton","onPress","fullWidth","Check","detectOnairosExtension","resolve","onairos","isOnairos","resolved","handleOnairosReady","addEventListener","once","removeEventListener","openExtensionInstallPage","source","storeUrl","warn","href","LLM_URLS","chatgpt","claude","gemini","grok","getUserInfoFromStorage","_userData","_userData2","_userData3","_userData4","_userData5","_userData6","_userData7","_userData8","_userData9","_userData0","_userData1","_userData10","_userData11","_userData12","_userData13","userDataStr","legacyToken","userDataSDK","parse","userInfo","userId","sessionToken","onboardingComplete","pinCreated","connectedAccounts","lastLogin","extractedAt","message","platform","onInstallClick","platformName","platformUrl","rel","handleInstallClick","handleDirectVisit","onConnectionChange","showInstallPrompt","setShowInstallPrompt","currentPlatform","setCurrentPlatform","isConnecting","setIsConnecting","handleLLMConnect","useCallback","onError","storedUserInfo","connectorVersion","timestamp","onExtensionMissing","URL","searchParams","set","encodeURIComponent","finalUrl","openLLMWithExtensionCheck","missingPlatform","handleLLMDisconnect","handleCloseInstallPrompt","handleExtensionInstall","checkExtensionStatus","contextValue","connectToLLM","disconnectFromLLM","map","child","llmConnectorManager","ExtensionInstallPrompt","chatgptIcon","claudeIcon","geminiIcon","grokIcon","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","fadeSlideInKeyframes","UniversalOnboarding","_JSON$parse2","onComplete","lottieRef","useRef","lastFrameRef","rafRef","setConnectedAccounts","connectingPlatform","setConnectingPlatform","selected","setSelected","currentPage","setCurrentPage","touchStartX","touchDeltaX","vh","setVh","innerHeight","onResize","removeItem","personaSide","Math","min","SLOT","max","floor","ACTIVE_SCALE","igGradId","useId","Brand","ChatGPT","objectFit","Claude","Gemini","Grok","Instagram","id","cx","cy","offset","stopColor","YouTube","Reddit","LinkedIn","x","y","rx","Twitter","aiLinks","descriptions","allPlatforms","name","connector","icon","directLink","platforms","page","slice","p","s","handleSwitch","find","platformKey","connectedPlatform","errorPlatform","plat","_JSON$parse","session","candidates","youtube","linkedin","reddit","pinterest","instagram","github","facebook","gmail","oauthUrl","k","touched","it","hostname","close","_unused3","_unused4","connectToPlatform","connectedCount","Object","values","filter","Boolean","current","totalFrames","personaAnim","progress","start","startTs","performance","t","eased","frame","goToAndStop","requestAnimationFrame","cancelAnimationFrame","LLMConnectorManager","connected","charAt","toUpperCase","displayName","dangerouslySetInnerHTML","__html","minHeight","maxHeight","gridTemplateRows","transform","zIndex","pointerEvents","Lottie","animationData","autoplay","loop","onTouchStart","touches","clientX","onTouchMove","onTouchEnd","dx","gridAutoFlow","gridTemplateColumns","columnGap","justifyItems","paddingInline","idx","on","isSel","shift","animation","title","n","role","entries","v","_ref3","totalConnections","xmlns","PinSetup","onBack","userEmail","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","handleSubmit","dataTypes","description","tooltip","privacyLink","DataTypeToggle","dataType","isEnabled","onToggle","isLast","iconName","iconProps","getIconComponent","handleToggle","fillRule","clipRule","autoFetch","appName","formatResponse","responseFormat","selectedData","setSelectedData","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","dt","prev","selectedCount","userHash","hash","str","charCodeAt","abs","generateUserHash","approvedData","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","dataTypeMapping","forEach","push","date","apiEndpoint","baseResult","apiUrl","simulatedApiData","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","requestBody","apiData","errorResult","cancelled","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","currentStep","setCurrentStep","setProgress","isComplete","setIsComplete","steps","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","completionDelay","trainingComplete","simulatedTraining","clearTimeout","round","LoadingScreen","dotCount","setDotCount","loadingStates","stateInterval","nextStep","dotInterval","currentState","aspectRatio","rainAnim","repeat","PERSONALITY_TYPES","TRAIT_CATEGORIES","formatOnairosResponse","_apiResponse$Inferenc","includeDictionary","includeArray","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","isArray","personalityDict","_formatted$InferenceR","traitResult","traitDict","category","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","layoutStyle","flexDirection","headerStyle","padding","contentStyle","flex","titleStyle","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","willChange","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","currentTarget","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","appIcon","enableTraining","priorityPlatform","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","setUserData","checkExistingSession","savedUser","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","logFormattedUserData","require","enhancedResult","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","formatUserDataForDisplay","_result$userData","_result$userData2","_result$userData3","_result$userData4","_result$userData5","_result$userData6","_result$userData7","userDataSummary","requestInfo","dataTypesRequested","userProfile","userType","modelReady","formatConnectedAccounts","aiData","formatAIResponseData","hasApiResponse","hasErrors","prettyPrint","lines","toLocaleString","summary","hasData","createPrettyPrintVersion","accounts","count","account","connectedAt","a","_apiResponse$Inferenc3","available","personalityData","keys","preferencesData","_apiResponse$Inferenc4","output"],"sourceRoot":""}