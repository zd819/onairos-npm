{"version":3,"file":"src_onairosButton_jsx.js","mappings":"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","sources":["webpack://OnairosLaravel/./src/components/DataRequest.js","webpack://OnairosLaravel/./src/components/EmailAuth.js","webpack://OnairosLaravel/./src/components/LoadingScreen.jsx","webpack://OnairosLaravel/./src/components/PinSetup.js","webpack://OnairosLaravel/./src/components/TrainingComponent.jsx","webpack://OnairosLaravel/./src/components/UniversalOnboarding.jsx","webpack://OnairosLaravel/./src/components/WelcomeScreen.jsx","webpack://OnairosLaravel/./src/components/ui/PageLayout.jsx","webpack://OnairosLaravel/./src/components/ui/PrimaryButton.jsx","webpack://OnairosLaravel/./src/onairosButton.jsx","webpack://OnairosLaravel/./src/theme/colors.js","webpack://OnairosLaravel/./src/utils/responseFormatter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nconst dataTypes = [\n  { \n    id: 'basic', \n    name: 'Basic Profile', \n    description: 'Essential profile information, account details, and basic demographics', \n    icon: 'User',\n    required: true,\n    tooltip: 'Includes name, email, basic profile information. This data is essential for personalization and is always included.',\n    privacyLink: 'https://onairos.uk/privacy#basic-info'\n  },\n  { \n    id: 'preferences', \n    name: 'User Preferences', \n    description: 'User preferences, interests, settings and personal choices', \n    icon: 'Grid3X3',\n    required: false,\n    tooltip: 'Your stated preferences and interests from connected platforms. Helps customize your experience.',\n    privacyLink: 'https://onairos.uk/privacy#preferences-data'\n  },\n  { \n    id: 'personality', \n    name: 'Personality Traits', \n    description: 'Personality traits, behavioral patterns and psychological insights', \n    icon: 'Brain',\n    required: false,\n    tooltip: 'AI-analyzed personality traits based on your social media activity and interactions. Used to improve content recommendations.',\n    privacyLink: 'https://onairos.uk/privacy#personality-data'\n  }\n];\n\n// Data Type Toggle Component with compact checkbox design\nconst DataTypeToggle = ({ dataType, isEnabled, onToggle, isLast }) => {\n  const handleToggle = () => {\n    if (dataType.required) return; // Don't allow toggling required items\n    onToggle(dataType.id, !isEnabled);\n  };\n\n  const getIconComponent = (iconName) => {\n    const iconProps = { className: \"w-4 h-4 text-gray-600\" };\n    \n    switch (iconName) {\n      case 'User':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        );\n      case 'Grid3X3':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n          </svg>\n        );\n      case 'Brain':\n        return (\n          <svg {...iconProps} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return <span className=\"text-lg\">{iconName}</span>;\n    }\n  };\n\n            return (\n                <div className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center gap-4\">\n                        <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0\">\n                            {getIconComponent(dataType.icon)}\n                        </div>\n                        <div className=\"min-w-0 flex-1\">\n                            <span className=\"font-medium text-gray-900 text-sm\">{dataType.name}</span>\n                        </div>\n                    </div>\n      <div\n        onClick={handleToggle}\n        className={`w-5 h-5 rounded border-2 flex items-center justify-center cursor-pointer transition-colors flex-shrink-0 ${\n          isEnabled ? \"bg-gray-900 border-gray-900\" : \"bg-white border-gray-300\"\n        }`}\n      >\n        {isEnabled && (\n          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DataRequest = ({ \n  userEmail = 'user@example.com', \n  testMode = true, \n  onComplete, \n  autoFetch = true,\n  appName = 'Test App',\n  formatResponse = false,\n  responseFormat = 'simple'\n}) => {\n  const [selectedData, setSelectedData] = useState({\n    basic: true, // Always true for required data\n    personality: false,\n    preferences: false\n  });\n  const [isLoadingApi, setIsLoadingApi] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  const handleDataToggle = (dataId, enabled) => {\n    const dataType = dataTypes.find(dt => dt.id === dataId);\n    if (dataType?.required) return; // Don't allow toggling required items\n\n    setSelectedData(prev => ({\n      ...prev,\n      [dataId]: enabled\n    }));\n  };\n\n  const generateUserHash = (email) => {\n    let hash = 0;\n    const str = email + Date.now().toString();\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return `user_${Math.abs(hash).toString(36)}`;\n  };\n\n  const fetchUserData = async () => {\n    console.log('🔥 DataRequest: fetchUserData called');\n    console.log('🔥 DataRequest: onComplete function:', typeof onComplete);\n    console.log('🔥 DataRequest: selectedData:', selectedData);\n    console.log('🔥 DataRequest: selectedCount:', selectedCount);\n    \n    setIsLoadingApi(true);\n    setApiError(null);\n    \n    try {\n      const userHash = generateUserHash(userEmail);\n      \n      // Get selected data types\n      const approvedData = Object.entries(selectedData)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n      const mapDataTypesToConfirmations = (approvedData) => {\n        const confirmations = [];\n        const currentDate = new Date().toISOString();\n        \n        const dataTypeMapping = {\n          'basic': 'Medium',\n          'personality': 'Large', \n          'preferences': 'Traits'\n        };\n        \n        approvedData.forEach(dataType => {\n          if (dataTypeMapping[dataType]) {\n            confirmations.push({\n              data: dataTypeMapping[dataType],\n              date: currentDate\n            });\n          }\n        });\n        \n        return confirmations;\n      };\n\n      const apiEndpoint = testMode \n        ? 'https://api2.onairos.uk/inferenceTest'\n        : 'https://api2.onairos.uk/getAPIurlMobile';\n      \n      const baseResult = {\n        userHash,\n        appName,\n        approvedData,\n        apiUrl: apiEndpoint,\n        testMode,\n        timestamp: new Date().toISOString()\n      };\n\n      if (autoFetch) {\n        if (testMode) {\n          // Test mode: Skip API call completely, simulate response\n          console.log('🧪 Test mode: Simulating data request API call for:', approvedData);\n          \n          setTimeout(() => {\n            const simulatedApiData = {\n              success: true,\n              message: \"Data request simulated successfully\",\n              data: {\n                personalityScores: {\n                  openness: 0.75,\n                  conscientiousness: 0.68,\n                  extraversion: 0.82,\n                  agreeableness: 0.71,\n                  neuroticism: 0.43\n                },\n                insights: [\n                  \"You show high creativity and openness to new experiences\",\n                  \"Strong social tendencies with good interpersonal skills\",\n                  \"Well-organized approach to tasks and goals\"\n                ],\n                dataProcessed: approvedData,\n                timestamp: new Date().toISOString(),\n                testMode: true\n              }\n            };\n\n            const result = {\n              ...baseResult,\n              apiResponse: simulatedApiData,\n              success: true,\n              simulated: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🧪 Test mode: Simulated data request completed:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully (test mode)');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined (test mode)');\n            }\n          }, 1200); // Simulate realistic processing time\n        } else {\n          // Production mode: Make real API call\n          try {\n            const confirmations = mapDataTypesToConfirmations(approvedData);\n            \n            const requestBody = {\n              approvedData,\n              userEmail,\n              appName,\n              confirmations\n            };\n\n            console.log('🔥 DataRequest: Making API call to:', apiEndpoint);\n            console.log('🔥 Request body:', requestBody);\n\n            const apiResponse = await fetch(apiEndpoint, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(requestBody)\n            });\n\n            if (!apiResponse.ok) {\n              throw new Error(`API request failed with status ${apiResponse.status}`);\n            }\n\n            const apiData = await apiResponse.json();\n            console.log('🔥 API Response:', apiData);\n\n            const result = {\n              ...baseResult,\n              apiResponse: apiData,\n              success: true\n            };\n\n            setIsLoadingApi(false);\n            console.log('🔥 DataRequest: Calling onComplete with result:', result);\n            console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n            if (onComplete && typeof onComplete === 'function') {\n              onComplete(result);\n              console.log('🔥 DataRequest: onComplete called successfully');\n            } else {\n              console.error('🔥 DataRequest: onComplete is not a function or is undefined');\n            }\n\n          } catch (apiError) {\n            console.error('🔥 API Error:', apiError);\n            setApiError(apiError.message);\n            setIsLoadingApi(false);\n            \n            const errorResult = {\n              ...baseResult,\n              apiResponse: null,\n              error: apiError.message,\n              success: false\n            };\n            \n            onComplete(errorResult);\n          }\n        }\n      } else {\n        setIsLoadingApi(false);\n        console.log('🔥 DataRequest: Auto-fetch disabled, calling onComplete with base result');\n        console.log('🔥 DataRequest: onComplete function type:', typeof onComplete);\n        if (onComplete && typeof onComplete === 'function') {\n          onComplete(baseResult);\n          console.log('🔥 DataRequest: onComplete called successfully (auto-fetch disabled)');\n        } else {\n          console.error('🔥 DataRequest: onComplete is not a function or is undefined (auto-fetch disabled)');\n        }\n      }\n    } catch (error) {\n      console.error('🔥 DataRequest Error:', error);\n      setApiError(error.message);\n      setIsLoadingApi(false);\n      \n      if (onComplete) {\n        onComplete({\n          error: error.message,\n          success: false,\n          userEmail,\n          appName,\n          testMode\n        });\n      }\n    }\n  };\n\n  // Count selected data types\n  const selectedCount = Object.values(selectedData).filter(Boolean).length;\n\n  return (\n    <div className=\"w-full h-full flex flex-col min-h-0\">\n      {/* Content - Flexible center area with proper constraints */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col min-h-0\" style={{ minHeight: 'calc(100vh - 200px)' }}>\n        {/* Icon Flow */}\n        <div className=\"mb-4 flex justify-center items-center gap-4 flex-shrink-0\">\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path\n                d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M21 9V7L15 6.5V9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9V6.5L3 7V9C3 12.87 6.13 16 10 16V22H14V16C17.87 16 21 12.87 21 9Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </div>\n          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <div className=\"w-12 h-12 bg-white rounded-xl shadow-lg flex items-center justify-center border border-gray-100\">\n            <span className=\"text-xl font-serif font-bold text-black\">E</span>\n          </div>\n        </div>\n\n        {/* Title Section */}\n        <div className=\"mb-4 flex-shrink-0\">\n          <h1 className=\"text-xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Enoch wants to personalize your experience\n          </h1>\n          <p className=\"text-gray-600 text-sm\">Choose what to share:</p>\n        </div>\n\n        {/* Consent Options - Scrollable area */}\n        <div className=\"flex-1 overflow-y-auto min-h-0\">\n          <div className=\"space-y-4 pb-4\">\n            {dataTypes.map((dataType, index) => (\n              <DataTypeToggle\n                key={dataType.id}\n                dataType={dataType}\n                isEnabled={selectedData[dataType.id]}\n                onToggle={handleDataToggle}\n                isLast={index === dataTypes.length - 1}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom with guaranteed visibility */}\n      <div className=\"px-6 pb-6 pt-3 flex-shrink-0 space-y-2 bg-white border-t border-gray-100\">\n        <div\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-3 text-sm font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          onClick={fetchUserData}\n          disabled={isLoadingApi || selectedCount === 0}\n        >\n          {isLoadingApi ? \"Processing...\" : \"Accept & Continue\"}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n        <div\n          onClick={() => onComplete({ cancelled: true })}\n          className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full py-3 text-sm font-medium text-center cursor-pointer transition-colors\"\n        >\n          Decline\n        </div>\n\n        {/* Error display */}\n        {apiError && (\n          <div className=\"mt-3 p-3 rounded-lg text-center bg-red-50 border border-red-200 text-red-600\">\n            <p className=\"text-xs\">{apiError}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataRequest; ","import React, { useState, useEffect } from 'react';\nimport { Mail, ArrowRight, Check } from 'lucide-react';\nimport PrimaryButton from './ui/PrimaryButton.jsx';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function EmailAuth({ onSuccess, testMode = true }) {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState('email'); // 'email' | 'code' | 'success'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Auto-focus first PIN input when code step loads\n  useEffect(() => {\n    if (step === 'code') {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        const firstInput = document.querySelector('input[maxLength=\"1\"]');\n        if (firstInput) {\n          firstInput.focus();\n        }\n      }, 100);\n    }\n  }, [step]);\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate instant success\n        console.log('🧪 Test mode: Simulating email verification request for:', email);\n        setTimeout(() => {\n          setStep('code');\n          setIsLoading(false);\n          console.log('🧪 Test mode: Email verification simulated successfully');\n        }, 800); // Shorter delay for faster testing\n      } else {\n        // Production mode: Use proper email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'request' \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to send verification code');\n        }\n\n        const data = await response.json();\n        if (!data.success) {\n          throw new Error(data.error || 'Failed to send verification code');\n        }\n\n        console.log('📧 Email request response:', data);\n\n        setStep('code');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Email request error:', error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      // Use the same Google OAuth logic as UniversalOnboarding\n      const sdkConfig = {\n        baseUrl: 'https://api2.onairos.uk',\n        apiKey: window.onairosApiKey || 'test-key',\n        enableHealthMonitoring: true,\n        enableAutoRefresh: true,\n        enableConnectionValidation: true\n      };\n\n      const username = localStorage.getItem('username') || localStorage.getItem('onairosUser')?.email || 'user@example.com';\n      \n      const authorizeUrl = `${sdkConfig.baseUrl}/gmail/authorize`;\n      const params = new URLSearchParams({\n        username: username,\n        sdk_type: 'web',\n        return_url: window.location.origin + '/oauth-callback.html'\n      });\n\n      const fullUrl = `${authorizeUrl}?${params.toString()}`;\n      console.log('🔗 Starting Google OAuth from email flow...');\n      console.log('📋 Google OAuth URL:', fullUrl);\n\n      // Open popup for OAuth\n      const popup = window.open(\n        fullUrl,\n        'google_oauth',\n        'width=500,height=600,scrollbars=yes,resizable=yes'\n      );\n\n      if (!popup) {\n        throw new Error('Popup blocked. Please allow popups for this site.');\n      }\n\n      // Monitor popup for completion\n      const checkInterval = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(checkInterval);\n          console.log('✅ Google OAuth popup closed');\n          // Simulate successful OAuth for now\n          onSuccess({ \n            email: 'user@gmail.com', \n            method: 'google',\n            connectedAccounts: { Google: true }\n          });\n        }\n      }, 1000);\n\n    } catch (error) {\n      console.error('❌ Google OAuth failed:', error);\n      setError('Google authentication failed. Please try again.');\n    }\n  };\n\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      if (testMode) {\n        // Test mode: Skip API call completely, simulate verification\n        console.log('🧪 Test mode: Simulating code verification for:', email, 'with code:', code);\n        \n        if (code === '123456' || code.length === 6) {\n          setStep('success');\n          setTimeout(() => {\n            // Simulate new user for design testing\n            const simulatedResponse = { \n              email, \n              verified: true, \n              token: 'test-token-' + Date.now(),\n              userName: email.split('@')[0],\n              existingUser: false, // Always simulate new user for full flow testing\n              accountInfo: null,\n              isNewUser: true,\n              flowType: 'onboarding',\n              adminMode: false,\n              userCreated: true,\n              accountDetails: {\n                email: email,\n                createdAt: new Date().toISOString(),\n                testAccount: true\n              }\n            };\n            console.log('🧪 Test mode: Simulated verification successful, user data:', simulatedResponse);\n            onSuccess(simulatedResponse);\n          }, 600); // Faster for design testing\n        } else {\n          setError('Invalid code. Use any 6-digit code (e.g., 123456) for testing.');\n          setIsLoading(false);\n        }\n      } else {\n        // Production mode: Use real email verification API from schema\n        const apiKey = window.onairosApiKey || 'test-key';\n        \n        const response = await fetch('https://api2.onairos.uk/email/verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({ \n            email, \n            action: 'verify',\n            code \n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid verification code');\n        }\n\n        const data = await response.json();\n        \n        if (!data.success) {\n          throw new Error(data.error || 'Verification failed');\n        }\n\n        console.log('📧 Email verification response:', data);\n\n        setStep('success');\n        setTimeout(() => {\n          // Pass complete API response for flow determination\n          onSuccess({ \n            email, \n            verified: true, \n            token: data.token || data.jwtToken,\n            userName: data.userName,\n            existingUser: data.existingUser,\n            accountInfo: data.accountInfo,\n            isNewUser: !data.existingUser, // Set based on API response\n            flowType: data.existingUser ? 'dataRequest' : 'onboarding',\n            adminMode: data.adminMode,\n            userCreated: data.userCreated,\n            accountDetails: data.accountDetails\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      setError(error.message || 'Invalid code. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  const renderEmailStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-12 pt-16 pb-8 text-center flex-1 flex flex-col\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 text-balance leading-tight\">\n            Use pre-existing Persona or create a new one in seconds\n          </h1>\n          <p className=\"text-gray-600 text-base\">Sign in or create an account</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className=\"w-full max-w-sm mx-auto px-4 py-4 text-base bg-gray-50 border-0 rounded-xl placeholder:text-gray-400 focus:bg-white focus:ring-2 focus:ring-gray-200 outline-none transition-all duration-200\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            required\n          />\n        </div>\n\n        <div className=\"mb-6 text-center\">\n          <span className=\"text-gray-500 text-sm\">Or</span>\n        </div>\n\n        <div className=\"mb-8\">\n          <button\n            type=\"button\"\n            className=\"w-full max-w-sm mx-auto py-4 text-base font-medium rounded-xl border border-gray-200 hover:bg-gray-50 flex items-center justify-center gap-3 bg-transparent transition-colors\"\n            style={{ \n              fontFamily: 'Inter, system-ui, sans-serif'\n            }}\n            onClick={handleGoogleAuth}\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"#4285F4\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"#34A853\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"#FBBC05\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"#EA4335\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Continue Button - Fixed at bottom */}\n      <div className=\"px-12 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full max-w-sm mx-auto bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors disabled:opacity-50\"\n          onClick={handleEmailSubmit}\n          disabled={isLoading || !email.trim()}\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif'\n          }}\n        >\n          {isLoading ? 'Loading...' : 'Continue'}\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderCodeStep = () => (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Heading - matching VerificationStep.tsx */}\n      <div className=\"w-full pt-16 px-12 mb-10 text-center\">\n        <h1 \n          className=\"font-bold mb-2\"\n          style={{ \n            fontFamily: 'IBM Plex Sans, system-ui, sans-serif',\n            fontWeight: '700',\n            fontSize: '24px',\n            lineHeight: '32px',\n            color: COLORS.textPrimary\n          }}\n        >\n          Enter verification code\n        </h1>\n        <p \n          className=\"mb-2\"\n          style={{ \n            fontFamily: 'Inter, system-ui, sans-serif',\n            fontWeight: '400',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: COLORS.textSecondary\n          }}\n        >\n          We've sent a 6-digit code to {email}\n        </p>\n      </div>\n\n\n      {/* Code Input - matching VerificationStep design with individual digit boxes */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"flex justify-center space-x-3\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              maxLength=\"1\"\n              value={code[index] || ''}\n              onChange={(e) => {\n                const newCode = code.split('');\n                newCode[index] = e.target.value;\n                setCode(newCode.join(''));\n                \n                // Auto-focus next input\n                if (e.target.value && index < 5) {\n                  const nextInput = e.target.parentElement?.children[index + 1];\n                  if (nextInput) nextInput.focus();\n                }\n              }}\n              onKeyDown={(e) => {\n                // Handle backspace to focus previous input\n                if (e.key === 'Backspace' && !code[index] && index > 0) {\n                  const prevInput = e.target.parentElement?.children[index - 1];\n                  if (prevInput) prevInput.focus();\n                }\n              }}\n              className=\"w-12 h-12 border rounded-lg text-center text-lg font-medium focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\n              style={{ \n                borderColor: COLORS.border,\n                backgroundColor: COLORS.background,\n                fontFamily: 'Inter, system-ui, sans-serif'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-12 mb-6\">\n          <p className=\"text-sm text-center\" style={{ color: COLORS.error }}>{error}</p>\n        </div>\n      )}\n\n      {/* Continue Button - positioned right below code inputs */}\n      <div className=\"px-12 mb-6\">\n        <div className=\"max-w-sm mx-auto\">\n          <PrimaryButton\n            label=\"Continue\"\n            onClick={handleCodeSubmit}\n            loading={isLoading}\n            disabled={isLoading || code.length !== 6}\n            testId=\"verify-code-button\"\n          />\n        </div>\n      </div>\n\n      {/* Spacer */}\n      <div style={{ flex: 1, minHeight: '20px' }} />\n\n      {/* Back to email option */}\n      <div className=\"px-12 w-full\">\n        <div className=\"max-w-sm mx-auto\">\n          <button\n            type=\"button\"\n            onClick={() => setStep('email')}\n            className=\"w-full py-2 px-4 font-medium transition-colors text-sm\"\n            style={{ color: COLORS.textSecondary }}\n          >\n            Use a different email\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSuccessStep = () => (\n    <div className=\"w-full flex flex-col items-center space-y-6 pt-16 px-12\">\n      <div \n        className=\"flex items-center justify-center w-16 h-16 rounded-full\"\n        style={{ backgroundColor: '#D1FAE5' }}\n      >\n        <Check className=\"w-8 h-8\" style={{ color: COLORS.success }} />\n      </div>\n      \n      <div className=\"text-center space-y-2\">\n        <h2 \n          className=\"text-xl font-semibold\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          Email verified!\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>Setting up your account...</p>\n      </div>\n\n      <div className=\"w-8 h-8\">\n        <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"w-full\">\n      {step === 'email' && renderEmailStep()}\n      {step === 'code' && renderCodeStep()}\n      {step === 'success' && renderSuccessStep()}\n    </div>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\nimport Lottie from 'lottie-react';\nimport rainAnim from '../../public/rain-anim.json';\n\nexport default function LoadingScreen({ onComplete }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dotCount, setDotCount] = useState(0);\n\n  const loadingStates = [\n    { message: \"Validating PIN and continuing training\", progress: 20 },\n    { message: \"Uploading model to secure storage\", progress: 40 },\n    { message: \"Running test inference\", progress: 60 },\n    { message: \"Storing results in databases\", progress: 80 },\n    { message: \"Complete!\", progress: 100 },\n  ];\n\n  useEffect(() => {\n    const stateInterval = setInterval(() => {\n      setCurrentStep((prev) => {\n        const nextStep = prev + 1;\n        if (nextStep >= loadingStates.length) {\n          // Loading complete, call onComplete after a short delay\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return prev; // Keep at last step\n        }\n        return nextStep;\n      });\n    }, 3000); // Change state every 3 seconds\n\n    return () => clearInterval(stateInterval);\n  }, [loadingStates.length, onComplete]);\n\n  useEffect(() => {\n    const dotInterval = setInterval(() => {\n      setDotCount((prev) => (prev + 1) % 4); // 0, 1, 2, 3 dots\n    }, 500); // Change dots every 500ms\n\n    return () => clearInterval(dotInterval);\n  }, []);\n\n  const currentState = loadingStates[currentStep];\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center p-6\">\n      {/* Modal - Full height from bottom */}\n      <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n        {/* Header */}\n        <div className=\"px-6 pt-6 pb-4 flex-shrink-0\">\n        </div>\n\n        {/* Content - Rain animation and loading state */}\n        <div className=\"flex-1 flex flex-col px-6\">\n          {/* Rain Animation */}\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div style={{ width: '100%', maxWidth: '400px', aspectRatio: '1' }}>\n              <Lottie\n                animationData={rainAnim}\n                loop={true}\n                autoplay={true}\n                style={{ width: '100%', height: '100%' }}\n              />\n            </div>\n          </div>\n\n          {/* Loading State - Positioned at bottom */}\n          <div className=\"flex-shrink-0 pb-12\">\n            <div className=\"text-center\">\n              <h1 className=\"font-bold text-gray-900 leading-tight mb-6\" style={{ fontSize: 'clamp(16px, 4vw, 20px)' }}>\n                {currentState.message}\n                {currentState.message !== \"Complete!\" && (\n                  <span className=\"inline-block w-8 text-left\">{\".\".repeat(dotCount)}</span>\n                )}\n              </h1>\n\n              <div className=\"mx-auto\" style={{ width: 'clamp(200px, 50vw, 300px)' }}>\n                <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                  <div\n                    className=\"h-2 bg-gray-900 rounded-full transition-all duration-1000 ease-out\"\n                    style={{ width: `${currentState.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom spacing */}\n        <div className=\"h-20 flex-shrink-0\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function PinSetup({ onComplete, onBack, userEmail }) {\n  const [pin, setPin] = useState('');\n  const [pinRequirements, setPinRequirements] = useState({\n    length: false,\n    uppercase: false,\n    number: false,\n  });\n\n  // Check PIN requirements\n  useEffect(() => {\n    setPinRequirements({\n      length: pin.length >= 6,\n      uppercase: /[A-Z]/.test(pin),\n      number: /\\d/.test(pin),\n    });\n  }, [pin]);\n\n  const allRequirementsMet = pinRequirements.length && pinRequirements.uppercase && pinRequirements.number;\n\n  const handleSubmit = () => {\n    if (allRequirementsMet) {\n      onComplete({\n        pin: pin, // This should be hashed in production\n        pinCreated: true,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full flex flex-col\" style={{ height: '100%', minHeight: 0 }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 pt-16 flex-1 flex flex-col\" style={{ minHeight: 0, overflow: 'hidden' }}>\n        <div className=\"mb-6 flex-shrink-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create a PIN</h1>\n          <p className=\"text-gray-600 text-base\">A PIN so only you have the access to your data</p>\n        </div>\n\n        <div className=\"mb-6 flex-shrink-0\">\n          <input\n            type=\"password\"\n            value={pin}\n            onChange={(e) => setPin(e.target.value)}\n            className=\"w-full px-4 py-4 border-2 border-gray-300 rounded-xl text-center text-lg font-medium focus:border-gray-900 focus:outline-none bg-gray-50\"\n            placeholder=\"Enter your PIN\"\n            maxLength={20}\n          />\n        </div>\n\n        {/* Scrollable requirements list */}\n        <div className=\"flex-1 overflow-y-auto\" style={{ minHeight: 0 }}>\n          <div className=\"space-y-3 pb-4\">\n            <p className=\"text-gray-900 font-medium mb-4\">Your PIN must:</p>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.length ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.length && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Be at least 6 characters in length.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.uppercase ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.uppercase && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain an uppercase letter.</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 ${pinRequirements.number ? \"border-green-500 bg-green-500\" : \"border-gray-300 bg-white\"}`}\n                >\n                  {pinRequirements.number && (\n                    <svg className=\"w-3 h-3 text-white m-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  )}\n                </div>\n                <span className=\"text-gray-700\">Contain a number.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Buttons - Fixed at bottom */}\n      <div className=\"px-6 pb-6 pt-4 flex-shrink-0 space-y-3\" style={{ minHeight: 'auto' }}>\n        <div\n          className={`w-full rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors ${\n            allRequirementsMet \n              ? \"bg-gray-900 hover:bg-gray-800 text-white cursor-pointer\" \n              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n          }`}\n          onClick={allRequirementsMet ? handleSubmit : undefined}\n        >\n          Continue\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function TrainingComponent({ onComplete, userEmail, appName = 'App', testMode = true }) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const steps = [\n    {\n      title: 'Setting up your personal AI',\n      description: 'Initializing your secure data model',\n      icon: '🤖',\n      duration: testMode ? 800 : 2000 // Much faster in test mode\n    },\n    {\n      title: 'Processing your connections',\n      description: 'Analyzing your social media patterns',\n      icon: '🔗',\n      duration: testMode ? 600 : 2500\n    },\n    {\n      title: 'Training your model',\n      description: 'Building your personalized insights',\n      icon: '🧠',\n      duration: testMode ? 700 : 3000\n    },\n    {\n      title: 'Finalizing setup',\n      description: 'Preparing your Onairos experience',\n      icon: '✨',\n      duration: testMode ? 500 : 2000\n    }\n  ];\n\n  useEffect(() => {\n    let interval;\n    let stepTimeout;\n\n    if (currentStep < steps.length) {\n      const stepDuration = steps[currentStep].duration;\n      const stepProgress = 100 / steps.length;\n\n      // Update progress gradually\n      interval = setInterval(() => {\n        setProgress(prev => {\n          const newProgress = prev + (stepProgress / (stepDuration / 100));\n          return Math.min(newProgress, (currentStep + 1) * stepProgress);\n        });\n      }, 100);\n\n      // Move to next step after duration\n      stepTimeout = setTimeout(() => {\n        if (currentStep < steps.length - 1) {\n          setCurrentStep(prev => prev + 1);\n        } else {\n          setIsComplete(true);\n          const completionDelay = testMode ? 400 : 1000; // Faster completion in test mode\n          \n          if (testMode) {\n            console.log('🧪 Test mode: Training simulation completed');\n          }\n          \n          setTimeout(() => {\n            onComplete({\n              trainingComplete: true,\n              timestamp: new Date().toISOString(),\n              userEmail: userEmail,\n              appName: appName,\n              testMode: testMode,\n              simulatedTraining: testMode\n            });\n          }, completionDelay);\n        }\n      }, stepDuration);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n      if (stepTimeout) clearTimeout(stepTimeout);\n    };\n  }, [currentStep, onComplete, userEmail, appName]);\n\n  return (\n    <div className=\"w-full flex flex-col items-center space-y-8\">\n      <div className=\"text-center\">\n        <div \n          className=\"w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-4\"\n          style={{\n            background: `linear-gradient(135deg, ${COLORS.info}, #8B5CF6)`\n          }}\n        >\n          <div className=\"text-3xl\">\n            {isComplete ? '🎉' : steps[currentStep]?.icon}\n          </div>\n        </div>\n        <h2 \n          className=\"text-2xl font-bold mb-2\"\n          style={{ color: COLORS.textPrimary }}\n        >\n          {isComplete ? 'All set!' : steps[currentStep]?.title}\n        </h2>\n        <p style={{ color: COLORS.textSecondary }}>\n          {isComplete \n            ? 'Your personal AI is ready to use' \n            : steps[currentStep]?.description\n          }\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full\">\n        <div \n          className=\"flex justify-between text-sm mb-2\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          <span>Progress</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n        <div \n          className=\"w-full rounded-full h-2\"\n          style={{ backgroundColor: COLORS.borderLight }}\n        >\n          <div \n            className=\"h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ \n              width: `${progress}%`,\n              background: `linear-gradient(90deg, ${COLORS.info}, #8B5CF6)`\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Steps Indicator */}\n      <div className=\"flex justify-center space-x-2\">\n        {steps.map((_, index) => (\n          <div\n            key={index}\n            className=\"w-3 h-3 rounded-full transition-all duration-300\"\n            style={{\n              backgroundColor: index <= currentStep ? COLORS.info : COLORS.border\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Current Step Details */}\n      <div \n        className=\"p-4 rounded-lg w-full\"\n        style={{ backgroundColor: COLORS.backgroundSecondary }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"w-8 h-8 rounded-full flex items-center justify-center\"\n            style={{ backgroundColor: '#DBEAFE' }}\n          >\n            <div className=\"text-sm\">\n              {isComplete ? '✅' : steps[currentStep]?.icon}\n            </div>\n          </div>\n          <div>\n            <h3 \n              className=\"font-medium\"\n              style={{ color: COLORS.textPrimary }}\n            >\n              {isComplete ? 'Training Complete' : `Step ${currentStep + 1} of ${steps.length}`}\n            </h3>\n            <p \n              className=\"text-sm\"\n              style={{ color: COLORS.textSecondary }}\n            >\n              {isComplete \n                ? 'Your Onairos experience is ready' \n                : steps[currentStep]?.description\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* App Info */}\n      <div className=\"text-center\">\n        <p \n          className=\"text-sm\"\n          style={{ color: COLORS.textSecondary }}\n        >\n          Setting up for <span className=\"font-medium\">{appName}</span>\n        </p>\n        {userEmail && (\n          <p \n            className=\"text-xs mt-1\"\n            style={{ color: COLORS.textMuted }}\n          >\n            {userEmail}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useEffect, useId, useState, useRef } from 'react';\nimport Lottie from 'lottie-react';\nimport personaAnim from '../../public/persona-anim.json';\nconst chatgptIcon = 'https://anushkasirv.sirv.com/openai.png';\nconst claudeIcon = 'https://anushkasirv.sirv.com/claude-color.png';\nconst geminiIcon = 'https://anushkasirv.sirv.com/gemini-color.png';\nconst grokIcon = 'https://anushkasirv.sirv.com/grok.png';\n\nconst sdkConfig = {\n  apiKey: process.env.REACT_APP_ONAIROS_API_KEY || 'onairos_web_sdk_live_key_2024',\n  baseUrl: process.env.REACT_APP_ONAIROS_BASE_URL || 'https://api2.onairos.uk',\n  sdkType: 'web',\n  enableHealthMonitoring: true,\n  enableAutoRefresh: true,\n  enableConnectionValidation: true,\n};\n\nconst fadeSlideInKeyframes = `\n@keyframes fadeSlideIn {\n  from { opacity: 0; transform: translateX(var(--slide-x)); }\n  to { opacity: 1; transform: translateX(0); }\n}\n`;\n\nexport default function UniversalOnboarding({ onComplete }) {\n  const lottieRef = useRef(null);\n  const lastFrameRef = useRef(0);\n  const rafRef = useRef(null);\n\n  const [connectedAccounts, setConnectedAccounts] = useState({});\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectingPlatform, setConnectingPlatform] = useState(null);\n  const [selected, setSelected] = useState('Instagram');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // swipe state\n  const touchStartX = useRef(0);\n  const touchDeltaX = useRef(0);\n\n  const [vh, setVh] = useState(() => (typeof window !== 'undefined' ? window.innerHeight : 800));\n  useEffect(() => {\n    const onResize = () => setVh(window.innerHeight);\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const FOOTER_H = 88;\n\n  // persona stays as requested (background, unchanged placement)\n  const personaSide = Math.min(vh * 0.52, 500);\n  const PERSONA_TOP = 96;\n\n  // icon layout (restore tighter spacing on page 1; place the band lower)\n  const SLOT = Math.max(56, Math.min(64, Math.floor(vh * 0.07)));\n  const CIRCLE = 42;\n  const GAP_PAGE1 = 12;\n  const GAP_PAGE2 = 20;\n  const ACTIVE_SCALE = vh < 760 ? 1.12 : 1.22;\n\n  const ICONS_H = 84;\n  const ICONS_TOP_OFFSET = Math.max(180, Math.min(240, Math.round(vh * 0.28))); // ~28vh, clamped for all screens\n\n  const igGradId = useId();\n\n  // ---- official brand SVGs (compact, consistent viewboxes) ----\n  const Brand = {\n    ChatGPT: <img src={chatgptIcon} alt=\"ChatGPT\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Claude: <img src={claudeIcon} alt=\"Claude\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Gemini: <img src={geminiIcon} alt=\"Gemini\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Grok: <img src={grokIcon} alt=\"Grok\" style={{ width: 20, height: 20, objectFit: 'contain' }} />,\n    Instagram: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <defs>\n          <radialGradient id={igGradId} cx=\"0.5\" cy=\"1\" r=\"1\">\n            <stop offset=\"0%\" stopColor=\"#FDBB4B\"/>\n            <stop offset=\"40%\" stopColor=\"#E95950\"/>\n            <stop offset=\"70%\" stopColor=\"#BC2A8D\"/>\n            <stop offset=\"100%\" stopColor=\"#4C68D7\"/>\n          </radialGradient>\n        </defs>\n        <path fill={`url(#${igGradId})`} d=\"M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5zm5 5.5A4.5 4.5 0 1 0 16.5 12 4.5 4.5 0 0 0 12 7.5zm0 7.4A2.9 2.9 0 1 1 14.9 12 2.9 2.9 0 0 1 12 14.9Zm5.35-8.25a1.15 1.15 0 1 0 1.15 1.15 1.15 1.15 0 0 0-1.15-1.15Z\"/>\n      </svg>\n    ),\n    YouTube: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#FF0000\" d=\"M22.54 6.42a3 3 0 0 0-2.11-2.12C18.49 3.75 12 3.75 12 3.75s-6.49 0-8.43.55A3 3 0 0 0 1.46 6.42 31.63 31.63 0 0 0 1 12a31.63 31.63 0 0 0 .46 5.58 3 3 0 0 0 2.11 2.12C5.51 20.25 12 20.25 12 20.25s6.49 0 8.43-.55a3 3 0 0 0 2.11-2.12A31.63 31.63 0 0 0 23 12a31.63 31.63 0 0 0-.46-5.58z\"/>\n        <path fill=\"#FFF\" d=\"M10 8.75v6.5l6-3.25-6-3.25z\"/>\n        </svg>\n      ),\n    Reddit: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#FF4500\"/>\n        <circle cx=\"8.75\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <circle cx=\"15.25\" cy=\"12.5\" r=\"1.25\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M7.9 15c.8.8 2.3 1.05 4.1 1.05S15.3 15.8 16.1 15c.2-.2.2-.5 0-.7-.2-.2-.5-.2-.7 0-.6.6-1.9.85-3.4.85S9.3 14.9 8.7 14.3c-.2-.2-.5-.2-.7 0-.2.2-.2.5 0 .7z\"/>\n        </svg>\n      ),\n    LinkedIn: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"3\" fill=\"#0A66C2\"/>\n        <rect x=\"5\" y=\"9\" width=\"3\" height=\"10\" fill=\"#FFF\"/>\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"1.5\" fill=\"#FFF\"/>\n        <path fill=\"#FFF\" d=\"M16.8 19H13.9v-5c0-1.2-.5-1.8-1.4-1.8-.9 0-1.6.6-1.6 1.8V19H8V9h2.8v1.3c.5-.8 1.4-1.5 2.7-1.5 2 0 3.3 1.3 3.3 3.7V19z\"/>\n        </svg>\n      ),\n    Twitter: (\n      <svg viewBox=\"0 0 24 24\" aria-hidden>\n        <path fill=\"#1DA1F2\" d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"/>\n        </svg>\n      ),\n  };\n\n  const aiLinks = {\n    ChatGPT: 'https://chat.openai.com',\n    Claude: 'https://claude.ai',\n    Gemini: 'https://gemini.google.com',\n    Grok: 'https://grok.x.ai',\n  };\n\n  const descriptions = {\n    ChatGPT: <>We analyze your <strong className=\"font-semibold\">prompt style</strong> and <strong className=\"font-semibold\">chat history</strong> to match your writing and thinking patterns.</>,\n    Claude: <>We learn your <strong className=\"font-semibold\">document workflow</strong> and <strong className=\"font-semibold\">reasoning preferences</strong> to tune output format and detail.</>,\n    Gemini: <>We study your <strong className=\"font-semibold\">search patterns</strong> and <strong className=\"font-semibold\">multimodal usage</strong> to improve response accuracy.</>,\n    Grok: <>We adapt to your <strong className=\"font-semibold\">X posting style</strong> and <strong className=\"font-semibold\">meme literacy</strong> to match your tone.</>,\n    Twitter: <>We analyze your <strong className=\"font-semibold\">tweets</strong> and <strong className=\"font-semibold\">interests</strong> to understand your preferences.</>,\n    YouTube: <>We study your <strong className=\"font-semibold\">watch history</strong> and <strong className=\"font-semibold\">interactions</strong> to learn your interests.</>,\n    Reddit: <>We examine your <strong className=\"font-semibold\">search history</strong> and <strong className=\"font-semibold\">discussions</strong> to understand your interests.</>,\n    Instagram: <>We analyze your <strong className=\"font-semibold\">photos</strong> and <strong className=\"font-semibold\">interactions</strong> to learn visual preferences.</>,\n    LinkedIn: <>We study your <strong className=\"font-semibold\">professional graph</strong> and <strong className=\"font-semibold\">content</strong> to understand career interests.</>,\n  };\n\n  const allPlatforms = [\n    // Page 1\n    { name: 'Instagram', connector: 'instagram', icon: Brand.Instagram },\n    { name: 'YouTube', connector: 'youtube', icon: Brand.YouTube },\n    { name: 'ChatGPT', connector: 'chatgpt', icon: Brand.ChatGPT, directLink: aiLinks.ChatGPT },\n    // Page 2\n    { name: 'Claude', connector: 'claude', icon: Brand.Claude, directLink: aiLinks.Claude },\n    { name: 'Gemini', connector: 'gemini', icon: Brand.Gemini, directLink: aiLinks.Gemini },\n    { name: 'Twitter', connector: 'twitter', icon: Brand.Twitter },\n    // Page 3\n    { name: 'LinkedIn', connector: 'linkedin', icon: Brand.LinkedIn },\n    { name: 'Reddit', connector: 'reddit', icon: Brand.Reddit },\n    { name: 'Grok', connector: 'grok', icon: Brand.Grok, directLink: aiLinks.Grok },\n  ];\n\n  const getPlatformsForPage = (page) => {\n    if (page === 1) return allPlatforms.slice(0, 3);\n    if (page === 2) return allPlatforms.slice(3, 6);\n    return allPlatforms.slice(6);\n  };\n\n  const platforms = getPlatformsForPage(currentPage);\n\n  useEffect(() => {\n    const p = localStorage.getItem('onairos_oauth_platform');\n    if (p) {\n      localStorage.removeItem('onairos_oauth_platform');\n      localStorage.removeItem('onairos_oauth_return');\n      setConnectedAccounts((s) => ({ ...s, [p]: true }));\n    }\n  }, []);\n\n  async function connectToPlatform(name) {\n    const plat = allPlatforms.find((p) => p.name === name);\n    if (!plat) return false;\n    try {\n      setIsConnecting(true);\n      setConnectingPlatform(name);\n      const username = localStorage.getItem('username') || (JSON.parse(localStorage.getItem('onairosUser') || '{}')?.email) || 'user@example.com';\n\n      const res = await fetch(`${sdkConfig.baseUrl}/${plat.connector}/authorize`, {\n        method: 'POST', headers: { 'x-api-key': sdkConfig.apiKey, 'Content-Type': 'application/json' },\n        body: JSON.stringify({ session: { username } }),\n      });\n      if (!res.ok) throw new Error('auth failed');\n      const data = await res.json();\n\n      const candidates = (\n        {\n          youtube: ['youtubeURL','youtubeUrl','youtube_url'],\n          linkedin: ['linkedinURL','linkedinUrl','linkedin_url'],\n          reddit: ['redditURL','redditUrl','reddit_url'],\n          pinterest: ['pinterestURL','pinterestUrl','pinterest_url'],\n          instagram: ['instagramURL','instagramUrl','instagram_url'],\n          github: ['githubURL','githubUrl','github_url'],\n          facebook: ['facebookURL','facebookUrl','facebook_url'],\n          gmail: ['gmailURL','gmailUrl','gmail_url'],\n        }[plat.connector]\n      ) || [`${plat.connector}URL`, `${plat.connector}Url`, `${plat.connector}_url`, 'platformURL', 'authUrl', 'url'];\n\n      let oauthUrl = null; for (const k of candidates) if (data[k]) { oauthUrl = data[k]; break; }\n      if (!oauthUrl) throw new Error('no url');\n\n      const popup = window.open(oauthUrl, `${plat.connector}_oauth`, 'width=500,height=600,scrollbars=yes,resizable=yes,status=no,location=no,toolbar=no,menubar=no');\n      if (!popup) throw new Error('popup blocked');\n\n      let touched = false; const it = setInterval(() => {\n        try { if (popup.location && popup.location.hostname === 'onairos.uk') { touched = true; popup.close(); } } catch { if (!touched) touched = true; }\n        try { if (popup.closed) { clearInterval(it); setConnectedAccounts((s) => ({ ...s, [name]: true })); setIsConnecting(false); setConnectingPlatform(null); } } catch {}\n      }, 800);\n\n      setTimeout(() => { try { if (!popup.closed && touched) popup.close(); } catch {} }, 10000);\n      setTimeout(() => { if (!popup.closed) { popup.close(); clearInterval(it); setIsConnecting(false); setConnectingPlatform(null); } }, 300000);\n      return true;\n    } catch {\n      setIsConnecting(false); setConnectingPlatform(null); return false;\n    }\n  }\n\n  const handleSwitch = async (name) => {\n    if (isConnecting && connectingPlatform !== name) return;\n    const on = !!connectedAccounts[name];\n    if (on) setConnectedAccounts((s) => ({ ...s, [name]: false }));\n    else await connectToPlatform(name);\n  };\n\n  const connectedCount = Object.values(connectedAccounts).filter(Boolean).length;\n\n  useEffect(() => {\n    if (!lottieRef.current) return;\n    const totalFrames = (personaAnim.op || 0) - (personaAnim.ip || 0);\n    const TOTAL_PLATFORMS = 9; // Total number of platforms across all pages\n    const progress = connectedCount / TOTAL_PLATFORMS;\n    const target = Math.max(0, Math.floor(progress * totalFrames));\n    const start = lastFrameRef.current || 0;\n    const duration = 420; const startTs = performance.now();\n    const step = (now) => {\n      const t = Math.min(1, (now - startTs) / duration);\n      const eased = t < 0.5 ? 2*t*t : -1 + (4 - 2*t)*t;\n      const frame = Math.floor(start + (target - start) * eased);\n      lottieRef.current.goToAndStop(frame, true);\n      if (t < 1) rafRef.current = requestAnimationFrame(step); else lastFrameRef.current = target;\n    };\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    rafRef.current = requestAnimationFrame(step);\n    return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); };\n  }, [connectedCount]);\n\n  // swipe handlers for smooth paging\n  const onTouchStart = (e) => { touchStartX.current = e.touches[0].clientX; touchDeltaX.current = 0; };\n  const onTouchMove  = (e) => { touchDeltaX.current = e.touches[0].clientX - touchStartX.current; };\n  const onTouchEnd   = () => {\n    const dx = touchDeltaX.current; const THRESH = 40;\n    if (dx < -THRESH && currentPage < 3) setCurrentPage(currentPage + 1);\n    else if (dx > THRESH && currentPage > 1) setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <div className=\"w-full h-full relative\" style={{ height: Math.min('90vh', Math.max(600, Math.min(720, vh * 0.9))), minHeight: 580, maxHeight: 720 }}>\n      <style>{fadeSlideInKeyframes}</style>\n\n      {/* persona as background (unchanged) */}\n      <div aria-hidden style={{ position: 'absolute', left: '50%', top: PERSONA_TOP, transform: 'translateX(-50%)', width: personaSide, height: personaSide, zIndex: 0, pointerEvents: 'none', opacity: 0.95 }}>\n        <div className=\"overflow-hidden rounded-[28px] w-full h-full\">\n          <Lottie lottieRef={lottieRef} animationData={personaAnim} autoplay={false} loop={false} style={{ width: '100%', height: '100%' }} />\n        </div>\n      </div>\n\n      {/* content above persona */}\n      <div className=\"relative z-10 h-full flex flex-col\">\n        {/* header (unchanged visuals) */}\n        <div className=\"px-6 pt-16 pb-4 text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2 leading-tight\">Connect App Data</h1>\n          <p className=\"text-gray-600 text-base\">More Connections, Better Personalization.</p>\n        </div>\n\n        {/* icons band — placed LOWER per request */}\n        <div className=\"px-6 flex-shrink-0\" style={{ height: ICONS_H, marginTop: ICONS_TOP_OFFSET }}>\n          <div className=\"h-full flex items-center justify-center\">\n            <div\n              className=\"grid w-full box-border relative\"\n              onTouchStart={onTouchStart}\n              onTouchMove={onTouchMove}\n              onTouchEnd={onTouchEnd}\n                    style={{\n                gridAutoFlow: 'column',\n                gridTemplateColumns: `repeat(${platforms.length}, minmax(0,1fr))`,\n                columnGap: currentPage === 1 ? GAP_PAGE1 : GAP_PAGE2,\n                alignItems: 'center',\n                justifyItems: 'center',\n                paddingInline: 8,\n                overflow: 'hidden',\n              }}\n            >\n              {platforms.map((p, idx) => {\n                const on = !!connectedAccounts[p.name];\n                const busy = isConnecting && connectingPlatform === p.name;\n                const isSel = selected === p.name;\n                const shift = (currentPage === 1 ? idx : idx - 2) * 14;\n                return (\n                  <div key={p.name} className=\"transition-all duration-300\" style={{ opacity: 0, transform: `translateX(${shift}px)`, animation: 'fadeSlideIn 0.28s forwards', ['--slide-x']: `${shift}px` }}>\n                    <button\n                      type=\"button\"\n                      onClick={() => { \n                        setSelected(p.name);\n                        if (p.directLink) {\n                          window.open(p.directLink, '_blank');\n                        } else {\n                          handleSwitch(p.name);\n                        }\n                      }}\n                      className=\"relative grid place-items-center outline-none\"\n                      style={{ width: SLOT, height: SLOT }}\n                      title={p.name}\n                    >\n                      <div className={`rounded-full border-3 transition-all duration-150 ease-out flex items-center justify-center shadow-lg ${on ? 'border-blue-600 bg-white text-black shadow-blue-500/70' : 'border-gray-300 hover:border-gray-400 bg-white text-black'}`}\n                           style={{ width: CIRCLE, height: CIRCLE, transform: `scale(${isSel ? ACTIVE_SCALE : 1})`, transformOrigin: 'center' }}>\n                        {busy ? (<div className=\"animate-spin h-4 w-4 border-2 border-gray-400 rounded-full border-t-transparent\" />) : (\n                          <div className=\"flex items-center justify-center\" style={{ width: 20, height: 20 }}>\n                            {p.icon}\n                    </div>\n                        )}\n                      </div>\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* dots navigation (no numbers) - directly under icons, above card */}\n        <div className=\"relative flex items-center justify-center gap-4 select-none\" style={{ marginTop: 20, zIndex: 25 }}>\n          {[1,2,3].map(n => (\n            <button key={n} onClick={() => setCurrentPage(n)} aria-label={`page ${n}`} className=\"relative\" style={{ width: 12, height: 12 }}>\n              <span className={`block rounded-full ${currentPage === n ? 'bg-blue-600 scale-110' : 'bg-gray-300'} transition-transform`} style={{ width: 12, height: 12 }} />\n            </button>\n          ))}\n        </div>\n\n        {/* info sheet — positioned right above the footer */}\n        <div className=\"px-6 flex-shrink-0\" style={{ position: 'absolute', bottom: FOOTER_H + 24, left: 0, right: 0, zIndex: 20 }}>\n          <div className=\"mx-auto rounded-2xl bg-white shadow-sm border border-gray-200 px-4 py-2.5\" style={{ width: 'min(680px,92%)', maxHeight: vh * 0.2 }}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-gray-900 font-medium\">{selected}</div>\n              <button\n                type=\"button\"\n                role=\"switch\"\n                aria-checked={!!connectedAccounts[selected]}\n                aria-label={`toggle ${selected}`}\n                onClick={() => handleSwitch(selected)}\n                disabled={isConnecting && connectingPlatform !== selected}\n                className={`relative inline-flex items-center transition-colors disabled:opacity-50 ${connectedAccounts[selected] ? 'bg-black' : 'bg-gray-200'} rounded-full`}\n                style={{ width: 56, height: 32 }}\n              >\n                <span className=\"absolute bg-white rounded-full shadow\" style={{ width: 24, height: 24, transform: connectedAccounts[selected] ? 'translateX(26px)' : 'translateX(6px)', transition: 'transform 160ms ease' }} />\n              </button>\n            </div>\n            <div className=\"mt-3\">\n              <div className=\"rounded-2xl bg-gray-50 text-gray-700 text-sm leading-6 px-4 py-3 shadow-[inset_0_0_0_1px_rgba(0,0,0,0.04)]\">\n                {descriptions[selected] || null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* footer — fixed near bottom; no change to persona */}\n        <div className=\"absolute left-0 right-0 px-6\" style={{ bottom: 0, height: FOOTER_H + 20, paddingBottom: 16, background: 'linear-gradient(to top, white 60%, rgba(255,255,255,0.9) 85%, rgba(255,255,255,0))', zIndex: 30 }}>\n          <div className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 cursor-pointer transition-colors\" onClick={() => {\n            const connected = Object.entries(connectedAccounts).filter(([, v]) => v).map(([k]) => k);\n            onComplete?.({ connectedAccounts: connected, totalConnections: connected.length });\n          }}>\n            Update\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n          </div>\n          <div onClick={() => onComplete?.({ connectedAccounts: [], totalConnections: 0 })} className=\"w-full text-gray-600 text-base font-medium py-2 text-center cursor-pointer hover:text-gray-800 transition-colors\">Skip</div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport { COLORS } from '../theme/colors.js';\n\nexport default function WelcomeScreen({ onContinue, onClose }) {\n  // Load Sirv script for responsive images\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://scripts.sirv.com/sirvjs/v3/sirv.js';\n    script.async = true;\n    document.head.appendChild(script);\n    \n    return () => {\n      const existingScript = document.querySelector('script[src=\"https://scripts.sirv.com/sirvjs/v3/sirv.js\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full flex flex-col\" style={{ height: '100%' }}>\n      {/* Content - Flexible center area */}\n      <div className=\"px-6 text-center flex-1 flex flex-col justify-center\">\n        {/* Logo */}\n        <div className=\"mb-8 flex justify-center\">\n          <div className=\"w-20 h-20 flex items-center justify-center\">\n            <img \n              className=\"Sirv w-full h-full object-contain\" \n              data-src=\"https://anushkasirv.sirv.com/OnairosBlack.png\" \n              alt=\"Onairos Logo\"\n            />\n          </div>\n        </div>\n\n        {/* Welcome Text */}\n        <p className=\"text-gray-500 text-sm mb-2\">Welcome to</p>\n\n        {/* Main Title */}\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-6 text-balance\">Onairos</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600 text-base leading-relaxed mb-12 text-pretty px-2\">\n          OnairOS personalizes your digital experience on every app so you can just enjoy being you!\n        </p>\n      </div>\n\n      {/* Get Started Button - Fixed at bottom */}\n      <div className=\"px-6 pb-8 flex-shrink-0\">\n        <button\n          className=\"w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-4 text-base font-medium flex items-center justify-center gap-2 transition-colors\"\n          onClick={onContinue}\n        >\n          Get Started\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Standardized page layout component with white background\nconst PageLayout = ({\n  children,\n  title,\n  subtitle,\n  icon,\n  showHeader = true,\n  showCloseButton = false,\n  onClose,\n  onBack,\n  showBackButton = false,\n  className = '',\n  contentClassName = '',\n  centerContent = true,\n  style = {},\n  ...props\n}) => {\n  const layoutStyle = {\n    backgroundColor: COLORS.background,\n    minHeight: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    ...style\n  };\n\n  const headerStyle = {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: COLORS.background,\n    zIndex: 10,\n    padding: 'clamp(8px, 2vw, 16px) clamp(16px, 4vw, 32px) clamp(6px, 1.5vw, 12px)'\n  };\n\n  const contentStyle = {\n    flex: 1,\n    padding: 'clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minHeight: 0, // Allow flex item to shrink below content size\n    ...(centerContent && {\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    })\n  };\n\n  const titleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(20px, 5vw, 28px)',\n    fontWeight: '700',\n    color: COLORS.textPrimary,\n    margin: '0 0 clamp(6px, 1.5vw, 12px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.2'\n  };\n\n  const subtitleStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontSize: 'clamp(14px, 3.5vw, 18px)',\n    fontWeight: '400',\n    color: COLORS.textSecondary,\n    margin: '0 0 clamp(20px, 5vw, 40px) 0',\n    textAlign: centerContent ? 'center' : 'left',\n    lineHeight: '1.5'\n  };\n\n  const iconStyle = {\n    width: 'clamp(40px, 8vw, 56px)',\n    height: 'clamp(40px, 8vw, 56px)',\n    margin: '0 auto clamp(16px, 4vw, 32px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(20px, 5vw, 28px)'\n  };\n\n  return (\n    <div \n      className={`onairos-page-layout ${className}`}\n      style={layoutStyle}\n      {...props}\n    >\n      {/* Header with navigation */}\n      {showHeader && (\n        <div style={headerStyle}>\n          <div className=\"flex items-center justify-between\">\n            {/* Back button */}\n            {showBackButton && onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Go back\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>←</span>\n              </button>\n            )}\n\n\n            {/* Close button */}\n            {showCloseButton && onClose && (\n              <button\n                onClick={onClose}\n                className=\"flex items-center justify-center w-8 h-8 rounded-full hover:bg-gray-100 transition-colors\"\n                aria-label=\"Close\"\n              >\n                <span style={{ fontSize: '16px', color: COLORS.textPrimary }}>×</span>\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <div \n        className={`onairos-page-content ${contentClassName}`}\n        style={contentStyle}\n      >\n        {/* Icon */}\n        {icon && (\n          <div style={iconStyle}>\n            {typeof icon === 'string' ? <span>{icon}</span> : icon}\n          </div>\n        )}\n\n        {/* Title */}\n        {title && (\n          <h1 style={titleStyle}>\n            {title}\n          </h1>\n        )}\n\n        {/* Subtitle */}\n        {subtitle && (\n          <p style={subtitleStyle}>\n            {subtitle}\n          </p>\n        )}\n\n        {/* Page content */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Modal wrapper component for overlay-style pages\nconst ModalPageLayout = ({\n  children,\n  visible = true,\n  onClose,\n  onBackdropClick,\n  backdropStyle = {},\n  modalStyle = {},\n  ...pageLayoutProps\n}) => {\n  if (!visible) return null;\n\n  const backdropStyles = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...backdropStyle\n  };\n\n  const modalStyles = {\n    backgroundColor: COLORS.background,\n    borderTopLeftRadius: '24px',\n    borderTopRightRadius: '24px',\n    borderBottomLeftRadius: '24px',\n    borderBottomRightRadius: '24px',\n    height: '90vh',\n    width: '100%',\n    maxWidth: '500px',\n    boxShadow: '0 -10px 40px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    ...modalStyle\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      if (onBackdropClick) {\n        onBackdropClick();\n      } else if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <div style={backdropStyles} onClick={handleBackdropClick}>\n      <div style={modalStyles}>\n        <PageLayout\n          showHeader={true}\n          showCloseButton={true}\n          onClose={onClose}\n          {...pageLayoutProps}\n        >\n          {children}\n        </PageLayout>\n      </div>\n    </div>\n  );\n};\n\nexport { ModalPageLayout };\nexport default PageLayout; ","import React, { useState } from 'react';\nimport { COLORS } from '../../theme/colors.js';\n\n// Icon Circle component matching the React Native version\nconst IconCircle = ({ \n  size = 40, \n  children,\n  className = ''\n}) => {\n  return (\n    <div \n      className={`relative flex items-center justify-center border border-black border-opacity-25 ${className}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        background: `linear-gradient(to bottom, ${COLORS.iconCircleGradientStart}, ${COLORS.iconCircleGradientEnd})`\n      }}\n    >\n      {children || (\n        <span \n          className=\"font-semibold opacity-95\"\n          style={{\n            fontSize: '20px',\n            color: COLORS.btnLabel,\n            backgroundColor: 'transparent'\n          }}\n        >\n          →\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Primary Button component matching the React Native design\nconst PrimaryButton = ({\n  label = \"Get Started\",\n  onClick,\n  iconRight,\n  loading = false,\n  disabled = false,\n  testId,\n  className = '',\n  style = {},\n  textStyle = {},\n  centered = false,\n  ...props\n}) => {\n  const [pressed, setPressed] = useState(false);\n\n  const handleMouseDown = () => setPressed(true);\n  const handleMouseUp = () => setPressed(false);\n  const handleMouseLeave = () => setPressed(false);\n\n  const buttonStyle = {\n    height: '48px',\n    borderRadius: '100px',\n    border: `1px solid ${COLORS.btnBorder}`,\n    background: `linear-gradient(to bottom, ${COLORS.btnGradStart}, ${COLORS.btnGradEnd})`,\n    position: 'relative',\n    overflow: 'hidden',\n    width: centered ? 'auto' : '100%',\n    minWidth: centered ? '250px' : 'auto',\n    maxWidth: centered ? '350px' : 'none',\n    margin: centered ? '0 auto' : '0',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    opacity: disabled ? 0.65 : 1,\n    boxShadow: disabled ? 'none' : '20px 30px 40px rgba(0,0,0,0.10)',\n    transition: 'all 0.2s ease',\n    ...style\n  };\n\n  const pressedOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: '100px',\n    opacity: pressed ? 1 : 0,\n    transition: 'opacity 0.1s ease'\n  };\n\n  const textContainerStyle = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const iconPositionStyle = {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    bottom: '4px',\n    width: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  };\n\n  const labelStyle = {\n    fontFamily: 'Inter, system-ui, sans-serif',\n    fontWeight: '600',\n    fontSize: '16px',\n    color: COLORS.btnLabel,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...textStyle\n  };\n\n  return (\n    <button\n      className={`relative ${className}`}\n      style={buttonStyle}\n      onClick={onClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      disabled={disabled || loading}\n      data-testid={testId}\n      aria-label={label}\n      {...props}\n    >\n      {/* Pressed state overlay */}\n      <div style={pressedOverlayStyle} />\n\n      {/* Centered text container */}\n      <div style={textContainerStyle}>\n        {loading ? (\n          <div \n            className=\"animate-spin rounded-full border-2 border-white border-t-transparent\"\n            style={{ width: '20px', height: '20px' }}\n          />\n        ) : (\n          <span style={labelStyle}>{label}</span>\n        )}\n      </div>\n\n      {/* Icon in fixed position on right */}\n      <div style={iconPositionStyle}>\n        {!loading && (iconRight || <IconCircle />)}\n      </div>\n    </button>\n  );\n};\n\nexport { IconCircle };\nexport default PrimaryButton; ","import React, { useEffect, useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen.jsx';\nimport EmailAuth from './components/EmailAuth.js';\nimport UniversalOnboarding from './components/UniversalOnboarding.jsx';\nimport PinSetup from './components/PinSetup.js';\nimport DataRequest from './components/DataRequest.js';\nimport TrainingComponent from './components/TrainingComponent.jsx';\nimport LoadingScreen from './components/LoadingScreen.jsx';\nimport { formatOnairosResponse } from './utils/responseFormatter.js';\nimport { ModalPageLayout } from './components/ui/PageLayout.jsx';\n\nexport function OnairosButton({\n  requestData, \n  webpageName, \n  inferenceData = null, \n  onComplete = null, \n  autoFetch = true, // Auto-enabled for seamless testing experience\n  testMode = true, // Auto-enabled for design testing - set to false for production\n  proofMode = false, \n  textLayout = 'below', \n  textColor = 'white',\n  login = false,\n  buttonType = 'pill',\n  loginReturn = null,\n  loginType = 'signIn',\n  visualType = 'full',\n  appIcon = null,\n  enableTraining = true,\n  formatResponse = true,\n  responseFormat = { includeDictionary: true, includeArray: true },\n  priorityPlatform = null // Platform to prioritize (e.g., 'gmail', 'pinterest', 'linkedin')\n}) {\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState('welcome'); // 'welcome' | 'email' | 'onboarding' | 'pin' | 'dataRequest' (training is within onboarding)\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In test mode, always start fresh to see the full flow\n      if (testMode) {\n        console.log('🧪 Test mode: Starting fresh flow, clearing any cached user data');\n        localStorage.removeItem('onairosUser');\n        setCurrentFlow('welcome');\n        return;\n      }\n      \n      const savedUser = localStorage.getItem('onairosUser');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setUserData(user);\n          // If user has completed onboarding and PIN setup, go directly to data request\n          if (user.onboardingComplete && user.pinCreated) {\n            setCurrentFlow('dataRequest');\n          } else if (user.verified && !user.onboardingComplete) {\n            setCurrentFlow('onboarding');\n          } else if (user.onboardingComplete && !user.pinCreated) {\n            setCurrentFlow('pin');\n          }\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('onairosUser');\n        }\n      }\n    };\n\n    checkExistingSession();\n  }, [testMode]);\n\n  const openTerminal = async () => {\n    try {\n      console.log('🔥 openTerminal called');\n        setShowOverlay(true);\n    } catch (error) {\n      console.error('Error in openTerminal:', error);\n    }\n  };\n\n  const handleCloseOverlay = () => {\n    setShowOverlay(false);\n    setError(null);\n  };\n\n  // Handle clicks on the backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      handleCloseOverlay();\n    }\n  };\n\n  const handleWelcomeContinue = () => {\n    console.log('🔥 Welcome screen continue clicked');\n    setCurrentFlow('email');\n  };\n\n  const handleEmailAuthSuccess = (authData) => {\n    console.log('🔥 Email auth successful:', authData);\n    console.log('🔧 User State:', {\n      isNewUser: authData.isNewUser,\n      userState: authData.userState,\n      flowType: authData.flowType,\n      existingUser: authData.existingUser,\n      hasAccountInfo: !!authData.accountInfo\n    });\n    \n    // Determine flow based on API response - more explicit checking\n    const isNewUser = authData.isNewUser === true || \n                     authData.existingUser === false || \n                     authData.flowType === 'onboarding' || \n                     authData.userState === 'new' ||\n                     !authData.accountInfo; // No account info means new user\n    \n    console.log('🔍 Flow determination:', {\n      finalDecision: isNewUser ? 'NEW USER → onboarding (data connectors)' : 'EXISTING USER → dataRequest (data permissions)',\n      reasoning: {\n        isNewUser: authData.isNewUser,\n        existingUserFalse: authData.existingUser === false,\n        flowTypeOnboarding: authData.flowType === 'onboarding',\n        noAccountInfo: !authData.accountInfo\n      }\n    });\n    \n    const newUserData = {\n      ...authData,\n      verified: true,\n      onboardingComplete: !isNewUser, // New users need onboarding, returning users have completed it\n      pinCreated: !isNewUser // Assume returning users have PIN, new users need to create it\n    };\n    \n    setUserData(newUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(newUserData));\n    \n    // Flow decision logic - prioritize new user detection\n    if (isNewUser) {\n      console.log('🚀 NEW USER detected → Starting onboarding flow (data connectors page)');\n      setCurrentFlow('onboarding');\n    } else {\n      console.log('👋 EXISTING USER detected → Going directly to data request (data permissions page)');\n      setCurrentFlow('dataRequest');\n    }\n  };\n\n  const handleOnboardingComplete = (onboardingData) => {\n    console.log('Onboarding completed:', onboardingData);\n    const updatedUserData = {\n      ...userData,\n      onboardingComplete: true,\n      connectedAccounts: onboardingData.connectedAccounts || []\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    setCurrentFlow('pin');\n  };\n\n  const handlePinSetupComplete = (pinData) => {\n    console.log('PIN setup completed:', pinData);\n    const updatedUserData = {\n      ...userData,\n      ...pinData,\n      pinCreated: true\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to loading flow\n    setCurrentFlow('loading');\n  };\n\n  const handleLoadingComplete = () => {\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleTrainingComplete = (trainingResult) => {\n    console.log('🎓 Training completed:', trainingResult);\n    const updatedUserData = {\n      ...userData,\n      trainingCompleted: true,\n      ...trainingResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n    \n    // Move to data request after training\n    setCurrentFlow('dataRequest');\n  };\n\n  const handleDataRequestComplete = (requestResult) => {\n    console.log('🔥 OnairosButton: Data request completed:', requestResult);\n    \n    // Update user data with request result\n    const updatedUserData = {\n      ...userData,\n      lastDataRequest: requestResult\n    };\n    setUserData(updatedUserData);\n    localStorage.setItem('onairosUser', JSON.stringify(updatedUserData));\n\n    // Close overlay immediately\n    console.log('🔥 Closing overlay after data request completion');\n    setShowOverlay(false);\n\n    // Format response if requested and API response is present\n    let formattedResult = requestResult;\n    if (formatResponse && requestResult?.apiResponse) {\n      try {\n        formattedResult = {\n          ...requestResult,\n          apiResponse: formatOnairosResponse(requestResult.apiResponse, responseFormat)\n        };\n        console.log('🔥 Response formatted with dictionary:', formattedResult.apiResponse?.personalityDict || 'No personality data');\n      } catch (error) {\n        console.warn('🔥 Error formatting response:', error);\n        // Continue with original result if formatting fails\n      }\n    }\n\n    // Call onComplete callback if provided\n    console.log('🔥 Calling onComplete callback with:', formattedResult);\n    if (onComplete) {\n      try {\n        onComplete(formattedResult);\n        console.log('🔥 onComplete callback executed successfully');\n      } catch (error) {\n        console.error('🔥 Error in onComplete callback:', error);\n      }\n    } else {\n      console.log('🔥 No onComplete callback provided');\n    }\n  };\n\n  const getFlowTitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own titles\n      case 'email':\n        return ''; // EmailAuth handles its own titles\n      case 'onboarding':\n        return 'Connect Your Data';\n      case 'pin':\n        return 'Secure Your Account';\n      case 'training':\n        return 'Training Your Model';\n      case 'dataRequest':\n        return 'Data Request';\n      default:\n        return '';\n    }\n  };\n\n  const getFlowSubtitle = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own subtitles\n      case 'email':\n        return ''; // EmailAuth handles its own subtitles\n      case 'onboarding':\n        return 'Choose which accounts to connect for a personalized experience';\n      case 'pin':\n        return 'Create a secure PIN to protect your data';\n      case 'training':\n        return 'Building your personalized insights';\n      case 'dataRequest':\n        return `Select the data you want to share with ${webpageName}`;\n      default:\n        return '';\n    }\n  };\n\n  const getFlowIcon = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return ''; // WelcomeScreen handles its own layout\n      case 'email':\n        return ''; // EmailAuth handles its own layout\n      case 'onboarding':\n        return '🔗';\n      case 'pin':\n        return '🔒';\n      case 'training':\n        return '⚡';\n      case 'dataRequest':\n        return '📊';\n      default:\n        return '';\n    }\n  };\n\n  const renderCurrentFlow = () => {\n    switch (currentFlow) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onContinue={handleWelcomeContinue}\n            onClose={handleCloseOverlay}\n            webpageName={webpageName}\n            appIcon={appIcon}\n            testMode={testMode}\n          />\n        );\n      case 'email':\n        return (\n          <div className=\"h-[min(85vh,700px)]\">\n          <EmailAuth \n            onSuccess={handleEmailAuthSuccess}\n            testMode={testMode} // Use the testMode prop from initialization\n          />\n          </div>\n        );\n      \n      case 'onboarding':\n        return (\n          <UniversalOnboarding \n            onComplete={handleOnboardingComplete}\n            onBack={() => setCurrentFlow('email')}\n            appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            appName={webpageName}\n            username={userData?.email || userData?.username}\n            testMode={testMode}\n            priorityPlatform={priorityPlatform}\n          />\n        );\n      \n      case 'pin':\n        return (\n          <PinSetup \n            onComplete={handlePinSetupComplete}\n            userEmail={userData?.email}\n          />\n        );\n      \n      case 'training':\n        return (\n          <TrainingComponent \n            onComplete={handleTrainingComplete}\n            userEmail={userData?.email}\n            appName={webpageName}\n            connectedAccounts={userData?.connectedAccounts || []}\n            testMode={testMode}\n          />\n        );\n      \n      case 'dataRequest':\n        return (\n          <DataRequest \n            onComplete={handleDataRequestComplete}\n            userEmail={userData?.email}\n            requestData={requestData}\n            appName={webpageName}\n            autoFetch={autoFetch}\n            testMode={testMode}\n            appIcon={appIcon}\n            connectedAccounts={userData?.connectedAccounts || {}}\n          />\n        );\n      \n      default:\n        return (\n          <div className=\"flex flex-col items-center space-y-4 p-6\">\n            <div className=\"animate-spin h-8 w-8 border-2 border-blue-600 rounded-full border-t-transparent\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        );\n    }\n  };\n\n  // Styling and button class based on visual type\n  const buttonClass = \n    `flex items-center justify-center font-bold rounded cursor-pointer ${\n    buttonType === 'pill' ? 'px-4 py-2' : 'w-12 h-12'\n    } bg-transparent OnairosConnect`;\n\n  const buttonStyle = {\n    flexDirection: textLayout === 'below' ? 'column' : 'row',\n    backgroundColor: 'transparent',\n    color: textColor,\n    border: '1px solid transparent',\n  };\n\n  // Icon and text style based on the visualType\n  const logoStyle = {\n    width: '20px',\n    height: '20px',\n    marginRight: visualType === 'full' ? '12px' : '0',\n  };\n\n  const getText = () => {\n    switch (loginType) {\n      case 'signUp':\n        return 'Sign Up with Onairos';\n      case 'signOut':\n        return 'Sign Out of Onairos';\n      default:\n        return 'Sign In with Onairos';\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={buttonClass}\n        onClick={openTerminal}\n        style={buttonStyle}\n      >\n        {(visualType === 'full' || visualType === 'icon') && (\n          <img\n            src={login ? \"https://onairos.sirv.com/Images/OnairosWhite.png\" : \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n            alt=\"Onairos Logo\"\n            style={logoStyle}\n          />\n        )}\n        {visualType !== 'icon' && (\n          <span className={`${textColor === 'black' ? 'text-black' : 'text-white'} ${visualType === 'icon' ? 'sr-only' : ''} ${textLayout === 'right' ? 'ml-2' : textLayout === 'left' ? 'mr-2' : ''}`}>\n            {getText()}\n          </span>\n        )}\n      </button>\n\n      {/* Modal with New Design */}\n      {showOverlay && (\n        <>\n          {currentFlow === 'email' ? (\n            // Special case for email - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={handleCloseOverlay}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Email Content */}\n                <div className=\"h-[min(85vh,700px)]\">\n                  <EmailAuth \n                    onSuccess={handleEmailAuthSuccess}\n                    testMode={testMode}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : currentFlow === 'onboarding' ? (\n            // Special case for onboarding - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('email')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Onboarding Content */}\n                <UniversalOnboarding \n                  onComplete={handleOnboardingComplete}\n                  onBack={() => setCurrentFlow('email')}\n                  appIcon={appIcon || \"https://onairos.sirv.com/Images/OnairosBlack.png\"}\n                  appName={webpageName}\n                  username={userData?.email || userData?.username}\n                  testMode={testMode}\n                  priorityPlatform={priorityPlatform}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'dataRequest' ? (\n            // Special case for dataRequest - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('loading')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* DataRequest Content */}\n                <DataRequest \n                  onComplete={handleDataRequestComplete}\n                  userEmail={userData?.email}\n                  requestData={requestData}\n                  appName={webpageName}\n                  autoFetch={autoFetch}\n                  testMode={testMode}\n                  appIcon={appIcon}\n                  connectedAccounts={userData?.connectedAccounts || {}}\n                />\n              </div>\n            </div>\n          ) : currentFlow === 'pin' ? (\n            // Special case for pin - render directly without PageLayout wrapper\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center z-50 p-6\">\n              <div className=\"bg-white rounded-3xl w-full max-w-lg mx-auto shadow-2xl overflow-hidden flex flex-col\" style={{ maxWidth: '500px', height: '90vh' }}>\n                {/* Header */}\n                <div className=\"relative px-6 pt-6 pb-4 flex-shrink-0\">\n                  <button\n                    onClick={() => setCurrentFlow('onboarding')}\n                    className=\"absolute left-4 top-4 p-2 hover:bg-gray-100 rounded-full transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                {/* PinSetup Content - Must take remaining height */}\n                <div className=\"flex-1 min-h-0\">\n                  <PinSetup \n                    onComplete={handlePinSetupComplete}\n                    onBack={() => setCurrentFlow('onboarding')}\n                    userEmail={userData?.email}\n                  />\n                </div>\n            </div>\n          </div>\n          ) : currentFlow === 'loading' ? (\n            // Loading screen\n            <LoadingScreen onComplete={handleLoadingComplete} />\n        ) : (\n            // All other flows use PageLayout wrapper\n          <ModalPageLayout\n            visible={showOverlay}\n            onClose={handleCloseOverlay}\n              showBackButton={currentFlow === 'training'}\n            onBack={() => {\n                if (currentFlow === 'email') setCurrentFlow('welcome');\n              if (currentFlow === 'onboarding') setCurrentFlow('email');\n              if (currentFlow === 'pin') setCurrentFlow('onboarding'); \n              if (currentFlow === 'training') setCurrentFlow('pin');\n            }}\n            title={getFlowTitle()}\n            subtitle={getFlowSubtitle()}\n            icon={getFlowIcon()}\n            centerContent={true}\n          >\n            {renderCurrentFlow()}\n          </ModalPageLayout>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default OnairosButton;","// Theme colors for Onairos SDK - derived from mobile design\nexport const COLORS = {\n  // Button gradient colors\n  btnGradStart: '#1A1A1A',\n  btnGradEnd: '#000000',\n  \n  // Button text and icon colors\n  btnLabel: '#FFFFFF',\n  btnBorder: 'rgba(0, 0, 0, 0.2)',\n  \n  // Icon circle gradient colors\n  iconCircleGradientStart: '#333333',\n  iconCircleGradientEnd: '#1A1A1A',\n  \n  // Background colors\n  background: '#FFFFFF',\n  backgroundSecondary: '#F8F9FA',\n  \n  // Text colors\n  textPrimary: '#1A1A1A',\n  textSecondary: '#6B7280',\n  textMuted: '#9CA3AF',\n  \n  // Border colors\n  border: '#E5E7EB',\n  borderLight: '#F3F4F6',\n  \n  // Status colors\n  success: '#10B981',\n  error: '#EF4444',\n  warning: '#F59E0B',\n  info: '#3B82F6',\n  \n  // Interactive states\n  hover: 'rgba(0, 0, 0, 0.05)',\n  pressed: 'rgba(0, 0, 0, 0.1)',\n  focus: 'rgba(59, 130, 246, 0.1)',\n};\n\nexport default COLORS; ","/**\n * Response formatter utility for Onairos SDK\n * Converts array-based responses to dictionary format for better developer experience\n */\n\n// Standard 16 personality types in order that the API returns them\nexport const PERSONALITY_TYPES = [\n  'Analyst',\n  'Diplomat', \n  'Sentinel',\n  'Explorer',\n  'Architect',\n  'Logician',\n  'Commander',\n  'Debater',\n  'Advocate',\n  'Mediator',\n  'Protagonist',\n  'Campaigner',\n  'Logistician',\n  'Defender',\n  'Executive',\n  'Consul'\n];\n\n// Standard trait categories that might be returned\nexport const TRAIT_CATEGORIES = [\n  'Openness',\n  'Conscientiousness',\n  'Extraversion',\n  'Agreeableness',\n  'Neuroticism'\n];\n\n/**\n * Formats API response to include both array and dictionary formats\n * @param {Object} apiResponse - Raw API response from Onairos\n * @param {Object} options - Formatting options\n * @param {boolean} options.includeDictionary - Whether to include dictionary format (default: true)\n * @param {boolean} options.includeArray - Whether to include original array format (default: true)\n * @returns {Object} Formatted response with both formats\n */\nexport function formatOnairosResponse(apiResponse, options = {}) {\n  const { includeDictionary = true, includeArray = true } = options;\n  \n  if (!apiResponse) {\n    return apiResponse;\n  }\n\n  const formatted = { ...apiResponse };\n\n  // Handle personality scores if present\n  if (apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores) {\n    const scores = apiResponse.InferenceResult?.traits || apiResponse.traits || apiResponse.scores;\n    \n    if (Array.isArray(scores) && scores.length >= 16) {\n      if (includeDictionary) {\n        // Create personality dictionary\n        const personalityDict = {};\n        PERSONALITY_TYPES.forEach((type, index) => {\n          personalityDict[type] = scores[index];\n        });\n        \n        // Add to formatted response\n        if (formatted.InferenceResult) {\n          formatted.InferenceResult.personalityDict = personalityDict;\n        } else {\n          formatted.personalityDict = personalityDict;\n        }\n      }\n      \n      if (!includeArray) {\n        // Remove array format if not requested\n        if (formatted.InferenceResult?.traits) {\n          delete formatted.InferenceResult.traits;\n        }\n        if (formatted.traits) {\n          delete formatted.traits;\n        }\n        if (formatted.scores) {\n          delete formatted.scores;\n        }\n      }\n    }\n  }\n\n  // Handle trait data if present (for preferences/traits)\n  if (apiResponse.traitResult || apiResponse.traits) {\n    const traits = apiResponse.traitResult || apiResponse.traits;\n    \n    if (Array.isArray(traits) && includeDictionary) {\n      const traitDict = {};\n      TRAIT_CATEGORIES.forEach((category, index) => {\n        if (traits[index] !== undefined) {\n          traitDict[category] = traits[index];\n        }\n      });\n      \n      formatted.traitDict = traitDict;\n    }\n  }\n\n  return formatted;\n}\n\n/**\n * Legacy formatter for backward compatibility\n * Converts scores array to personality dictionary only\n * @param {Array} scores - Array of personality scores\n * @returns {Object} Dictionary with personality type names as keys\n */\nexport function formatPersonalityScores(scores) {\n  if (!Array.isArray(scores) || scores.length < 16) {\n    console.warn('Invalid scores array provided to formatPersonalityScores');\n    return {};\n  }\n\n  const personalityDict = {};\n  PERSONALITY_TYPES.forEach((type, index) => {\n    personalityDict[type] = scores[index];\n  });\n  \n  return personalityDict;\n}\n\n/**\n * Get personality type names in order\n * @returns {Array} Array of personality type names\n */\nexport function getPersonalityTypes() {\n  return [...PERSONALITY_TYPES];\n}\n\n/**\n * Get trait category names in order  \n * @returns {Array} Array of trait category names\n */\nexport function getTraitCategories() {\n  return [...TRAIT_CATEGORIES];\n} "],"names":["dataTypes","id","name","description","icon","required","tooltip","privacyLink","DataTypeToggle","_ref","dataType","isEnabled","onToggle","isLast","React","className","iconName","iconProps","_extends","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","getIconComponent","onClick","handleToggle","concat","fillRule","clipRule","_ref2","userEmail","testMode","onComplete","autoFetch","appName","formatResponse","responseFormat","selectedData","setSelectedData","useState","basic","personality","preferences","isLoadingApi","setIsLoadingApi","apiError","setApiError","handleDataToggle","dataId","enabled","find","dt","prev","_objectSpread","selectedCount","Object","values","filter","Boolean","length","style","minHeight","map","index","key","async","console","log","userHash","email","hash","str","Date","now","toString","i","charCodeAt","Math","abs","generateUserHash","approvedData","entries","_ref3","value","_ref4","mapDataTypesToConfirmations","confirmations","currentDate","toISOString","dataTypeMapping","forEach","push","data","date","apiEndpoint","baseResult","apiUrl","timestamp","setTimeout","simulatedApiData","success","message","personalityScores","openness","conscientiousness","extraversion","agreeableness","neuroticism","insights","dataProcessed","result","apiResponse","simulated","error","requestBody","fetch","method","headers","body","JSON","stringify","ok","Error","status","apiData","json","errorResult","disabled","cancelled","EmailAuth","onSuccess","setEmail","code","setCode","step","setStep","isLoading","setIsLoading","setError","useEffect","firstInput","document","querySelector","focus","handleEmailSubmit","e","preventDefault","test","validateEmail","apiKey","window","onairosApiKey","response","action","handleGoogleAuth","_localStorage$getItem","sdkConfig","baseUrl","enableHealthMonitoring","enableAutoRefresh","enableConnectionValidation","username","localStorage","getItem","authorizeUrl","params","URLSearchParams","sdk_type","return_url","location","origin","fullUrl","popup","open","checkInterval","setInterval","closed","clearInterval","connectedAccounts","Google","handleCodeSubmit","simulatedResponse","verified","token","userName","split","existingUser","accountInfo","isNewUser","flowType","adminMode","userCreated","accountDetails","createdAt","testAccount","jwtToken","height","type","onChange","target","placeholder","fontFamily","color","COLORS","trim","fontWeight","fontSize","lineHeight","textPrimary","textSecondary","Array","from","_","maxLength","newCode","join","_e$target$parentEleme","nextInput","parentElement","children","onKeyDown","_e$target$parentEleme2","prevInput","borderColor","border","backgroundColor","background","PrimaryButton","label","loading","testId","flex","Check","LoadingScreen","currentStep","setCurrentStep","dotCount","setDotCount","loadingStates","progress","stateInterval","nextStep","dotInterval","currentState","maxWidth","width","aspectRatio","Lottie","animationData","rainAnim","loop","autoplay","repeat","PinSetup","onBack","pin","setPin","pinRequirements","setPinRequirements","uppercase","number","allRequirementsMet","overflow","handleSubmit","pinCreated","undefined","TrainingComponent","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","_steps$currentStep5","setProgress","isComplete","setIsComplete","steps","title","duration","interval","stepTimeout","stepDuration","stepProgress","newProgress","min","completionDelay","trainingComplete","simulatedTraining","clearTimeout","info","round","borderLight","backgroundSecondary","textMuted","chatgptIcon","claudeIcon","geminiIcon","grokIcon","process","env","REACT_APP_ONAIROS_API_KEY","REACT_APP_ONAIROS_BASE_URL","sdkType","fadeSlideInKeyframes","UniversalOnboarding","lottieRef","useRef","lastFrameRef","rafRef","setConnectedAccounts","isConnecting","setIsConnecting","connectingPlatform","setConnectingPlatform","selected","setSelected","currentPage","setCurrentPage","touchStartX","touchDeltaX","vh","setVh","innerHeight","onResize","addEventListener","removeEventListener","personaSide","SLOT","max","floor","ACTIVE_SCALE","ICONS_TOP_OFFSET","igGradId","useId","Brand","ChatGPT","src","alt","objectFit","Claude","Gemini","Grok","Instagram","cx","cy","r","offset","stopColor","YouTube","Reddit","LinkedIn","x","y","rx","Twitter","aiLinks","descriptions","allPlatforms","connector","directLink","platforms","page","slice","p","removeItem","s","handleSwitch","plat","_JSON$parse","parse","res","session","candidates","youtube","linkedin","reddit","pinterest","instagram","github","facebook","gmail","oauthUrl","k","touched","it","hostname","close","_unused","_unused2","_unused3","_unused4","connectToPlatform","connectedCount","current","totalFrames","personaAnim","start","startTs","performance","t","eased","frame","goToAndStop","requestAnimationFrame","cancelAnimationFrame","maxHeight","position","left","top","transform","zIndex","pointerEvents","opacity","marginTop","onTouchStart","touches","clientX","onTouchMove","onTouchEnd","dx","gridAutoFlow","gridTemplateColumns","columnGap","alignItems","justifyItems","paddingInline","idx","on","busy","isSel","shift","animation","transformOrigin","n","bottom","FOOTER_H","right","role","transition","paddingBottom","connected","v","totalConnections","xmlns","WelcomeScreen","onContinue","onClose","script","createElement","head","appendChild","existingScript","removeChild","PageLayout","subtitle","showHeader","showCloseButton","showBackButton","contentClassName","centerContent","props","_objectWithoutProperties","_excluded","layoutStyle","display","flexDirection","headerStyle","padding","contentStyle","justifyContent","titleStyle","margin","textAlign","subtitleStyle","ModalPageLayout","visible","onBackdropClick","backdropStyle","modalStyle","pageLayoutProps","_excluded2","backdropStyles","modalStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","currentTarget","IconCircle","size","borderRadius","iconCircleGradientStart","iconCircleGradientEnd","btnLabel","iconRight","textStyle","centered","pressed","setPressed","buttonStyle","btnBorder","btnGradStart","btnGradEnd","minWidth","cursor","pressedOverlayStyle","labelStyle","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","handleMouseLeave","OnairosButton","requestData","webpageName","inferenceData","proofMode","textLayout","textColor","login","buttonType","loginReturn","loginType","visualType","appIcon","enableTraining","includeDictionary","includeArray","priorityPlatform","showOverlay","setShowOverlay","currentFlow","setCurrentFlow","userData","setUserData","checkExistingSession","savedUser","user","onboardingComplete","handleCloseOverlay","handleWelcomeContinue","handleEmailAuthSuccess","authData","userState","hasAccountInfo","finalDecision","reasoning","existingUserFalse","flowTypeOnboarding","noAccountInfo","newUserData","setItem","handleOnboardingComplete","onboardingData","updatedUserData","handlePinSetupComplete","pinData","handleTrainingComplete","trainingResult","trainingCompleted","handleDataRequestComplete","requestResult","lastDataRequest","formattedResult","_formattedResult$apiR","formatOnairosResponse","personalityDict","warn","buttonClass","logoStyle","marginRight","getText","DataRequest","handleLoadingComplete","getFlowTitle","getFlowSubtitle","getFlowIcon","renderCurrentFlow","warning","hover","PERSONALITY_TYPES","TRAIT_CATEGORIES","_apiResponse$Inferenc","options","arguments","formatted","InferenceResult","traits","scores","_apiResponse$Inferenc2","isArray","_formatted$InferenceR","traitResult","traitDict","category","formatPersonalityScores","getPersonalityTypes","getTraitCategories"],"sourceRoot":""}